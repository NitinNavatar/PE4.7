package com.navatar.scripts;

import static com.navatar.generic.CommonLib.*;
import static com.navatar.generic.SmokeCommonVariables.*;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Scanner;
import java.util.Set;
import java.util.concurrent.ThreadLocalRandom;
import java.util.regex.Pattern;

import javax.mail.MessagingException;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.server.handler.SendKeys;
import org.openqa.selenium.remote.server.handler.SwitchToWindow;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.android.dx.gen.Local;
import com.navatar.generic.BaseLib;
import com.navatar.generic.CommonLib;
import com.navatar.generic.EmailLib;
import com.navatar.generic.ExcelUtils;
import com.navatar.generic.SoftAssert;
import com.navatar.generic.EnumConstants.AddProspectsTab;
import com.navatar.generic.EnumConstants.AddressAction;
import com.navatar.generic.EnumConstants.CheckBox;
import com.navatar.generic.EnumConstants.ClickOrCheckEnableDisableCheckBox;
import com.navatar.generic.EnumConstants.EditViewMode;
import com.navatar.generic.EnumConstants.Mode;
import com.navatar.generic.EnumConstants.PageLabel;
import com.navatar.generic.EnumConstants.NavatarSetupSideMenuTab;
import com.navatar.generic.EnumConstants.OfficeLocationLabel;
import com.navatar.generic.EnumConstants.PageName;
import com.navatar.generic.EnumConstants.RecordType;
import com.navatar.generic.EnumConstants.RelatedList;
import com.navatar.generic.EnumConstants.TabName;
import com.navatar.generic.EnumConstants.TopOrBottom;
import com.navatar.generic.EnumConstants.YesNo;
import com.navatar.generic.EnumConstants.action;
import com.navatar.generic.EnumConstants.excelLabel;
import com.navatar.generic.EnumConstants.object;
import com.navatar.generic.EnumConstants.objectFeatureName;
import com.navatar.pageObjects.BasePageBusinessLayer;
import com.navatar.pageObjects.BasePageErrorMessage;
import com.navatar.pageObjects.ContactsPageBusinessLayer;
import com.navatar.pageObjects.CustomObjPageBusinessLayer;
import com.navatar.pageObjects.FundsPageBusinessLayer;
import com.navatar.pageObjects.GlobalActionPageBusinessLayer;
import com.navatar.pageObjects.HomePageBusineesLayer;
import com.navatar.pageObjects.InstitutionsPageBusinessLayer;
import com.navatar.pageObjects.LoginPageBusinessLayer;
import com.navatar.pageObjects.NavatarSetUpPageErrorMessage;
import com.navatar.pageObjects.NavatarSetupPageBusinessLayer;
import com.navatar.pageObjects.SetupPageBusinessLayer;
import com.navatar.pageObjects.TaskPageBusinessLayer;
import com.navatar.pageObjects.TaskPagePageErrorMessage;
import com.relevantcodes.extentreports.LogStatus;

import bsh.org.objectweb.asm.Label;

import static com.navatar.generic.AppListeners.appLog;
import static com.navatar.generic.BaseLib.testCasesFilePath;
import static com.navatar.generic.CommonLib.*;
//public class SmokeTestCases2 extends BaseLib {
//	String passwordResetLink = null;
//	
////	Scanner scn = new Scanner(System.in);
//	
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc001_createCRMUser(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		String parentWindow = null;
//		String[] splitedUserLastName = removeNumbersFromString(crmUser1LastName);
//		String UserLastName = splitedUserLastName[0] + lp.generateRandomNumber();
//		String emailId = lp.generateRandomEmailId(gmailUserName);
//		ExcelUtils.writeData(testCasesFilePath, UserLastName, "Users", excelLabel.Variable_Name, "User1",excelLabel.User_Last_Name);
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		boolean flag = false;
//		for (int i = 0; i < 3; i++) {
//			try {
//				if (home.clickOnSetUpLink()) {
//					flag = true;
//						parentWindow = switchOnWindow(driver);
//						if (parentWindow == null) {
//							sa.assertTrue(false,
//									"No new window is open after click on setup link in lighting mode so cannot create CRM User1");
//							log(LogStatus.SKIP,
//									"No new window is open after click on setup link in lighting mode so cannot create CRM User1",
//									YesNo.Yes);
//							exit("No new window is open after click on setup link in lighting mode so cannot create CRM User1");
//						}
//					if (setup.createPEUser( crmUser1FirstName, UserLastName, emailId, crmUserLience,
//							crmUserProfile)) {
//						log(LogStatus.INFO, "CRM User is created Successfully: " + crmUser1FirstName + " " + UserLastName, YesNo.No);
//						ExcelUtils.writeData(testCasesFilePath, emailId, "Users", excelLabel.Variable_Name, "User1",
//								excelLabel.User_Email);
//						ExcelUtils.writeData(testCasesFilePath, UserLastName, "Users", excelLabel.Variable_Name, "User1",
//								excelLabel.User_Last_Name);
//						flag = true;
//						break;
//						
//					}
//						driver.close();
//						driver.switchTo().window(parentWindow);
//				
//				}
//			} catch (Exception e) {
//				// TODO Auto-generated catch block
//				log(LogStatus.INFO, "could not find setup link, trying again..", YesNo.No);
//			}
//			
//		}
//		if (flag) {
//			
//			if (setup.installedPackages(crmUser1FirstName, UserLastName)) {
//				appLog.info("PE Package is installed Successfully in CRM User: " + crmUser1FirstName + " "
//						+ UserLastName);
//				
//			} else {
//				appLog.error(
//						"Not able to install PE package in CRM User1: " + crmUser1FirstName + " " + UserLastName);
//				sa.assertTrue(false,
//						"Not able to install PE package in CRM User1: " + crmUser1FirstName + " " + UserLastName);
//				log(LogStatus.ERROR,
//						"Not able to install PE package in CRM User1: " + crmUser1FirstName + " " + UserLastName,
//						YesNo.Yes);
//			}
//			
//		}else{
//			
//			log(LogStatus.ERROR, "could not click on setup link, test case fail", YesNo.Yes);
//			sa.assertTrue(false, "could not click on setup link, test case fail");
//			
//		}
//		
//		lp.CRMlogout();
//		closeBrowser();
//		config(ExcelUtils.readDataFromPropertyFile("Browser"));
//		lp = new LoginPageBusinessLayer(driver);
//		try {
//			passwordResetLink = new EmailLib().getResetPasswordLink("passwordreset",
//					ExcelUtils.readDataFromPropertyFile("gmailUserName"),
//					ExcelUtils.readDataFromPropertyFile("gmailPassword"));
//		} catch (InterruptedException e2) {
//			// TODO Auto-generated catch block
//			e2.printStackTrace();
//		}
//		appLog.info("ResetLinkIs: " + passwordResetLink);
//		driver.get(passwordResetLink);
//		if (lp.setNewPassword()) {
//			appLog.info("Password is set successfully for CRM User1: " + crmUser1FirstName + " " + UserLastName );
//		} else {
//			appLog.info("Password is not set for CRM User1: " + crmUser1FirstName + " " + UserLastName);
//			sa.assertTrue(false, "Password is not set for CRM User1: " + crmUser1FirstName + " " + UserLastName);
//			log(LogStatus.ERROR, "Password is not set for CRM User1: " + crmUser1FirstName + " " + UserLastName,
//					YesNo.Yes);
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc002_1_Prerequisite(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		String[][] userAndPassword = {{superAdminUserName,adminPassword},{crmUser1EmailID,adminPassword}};
//		for (String[] userPass : userAndPassword) {
//		lp.CRMLogin(userPass[0], userPass[1], appName);
//			
//		
//		String addRemoveTabName="";
//		addRemoveTabName=tabObj1+"s,"+tabObj2+"s,"+tabObj3+"s,"+tabCustomObj+"s,"+"Tasks";
//		
//		if (lp.addTab_Lighting( addRemoveTabName, 5)) {
//			log(LogStatus.INFO,"Tab added : "+addRemoveTabName,YesNo.No);
//		} else {
//			log(LogStatus.FAIL,"Tab not added : "+addRemoveTabName,YesNo.No);
//			sa.assertTrue(false, "Tab not added : "+addRemoveTabName);
//		}		
//		
//		
//
//		ThreadSleep(5000);
//		lp.CRMlogout();
//		closeBrowser();
//		config(ExcelUtils.readDataFromPropertyFile("Browser"));
//		lp = new LoginPageBusinessLayer(driver);
//
//	}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc002_2_AddListView(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		
//		
//		String[] tabs= {tabObj1,tabObj2,tabObj3,tabCustomObj};
//		TabName[] tab= {TabName.Object1Tab,TabName.Object2Tab,TabName.Object3Tab,TabName.TestCustomObjectTab};
//		int i=0;
//		for (TabName t:tab) {
//
//			if (lp.clickOnTab(projectName, t)) {	
//				if (lp.addAutomationAllListView(projectName, tabs[i], 10)) {
//					log(LogStatus.INFO,"list view added on "+tabs[i],YesNo.No);
//				} else {
//					log(LogStatus.FAIL,"list view could not added on "+tabs[i],YesNo.Yes);
//					sa.assertTrue(false, "list view could not added on "+tabs[i]);
//				}
//			} else {
//				log(LogStatus.FAIL,"could not click on "+tabs[i],YesNo.Yes);
//				sa.assertTrue(false, "could not click on "+tabs[i]);
//			}
//			i++;
//			ThreadSleep(5000);
//		}
//		
//
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc003_CreatePreconditionData(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		
//		String value="";
//		String type="";
//		String[][] EntityOrAccounts = {
//				{ Smoke_TaskINS1Name, Smoke_TaskINS1RecordType }
//				, {Smoke_TaskINS2Name,Smoke_TaskINS2RecordType},
//				{Smoke_TaskINS3Name,Smoke_TaskINS3RecordType},
//				{Smoke_TaskINS4Name,Smoke_TaskINS4RecordType},
//				{Smoke_TaskINS5Name,Smoke_TaskINS5RecordType},
//		};
//		for (String[] accounts : EntityOrAccounts) {
//			if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//				log(LogStatus.INFO,"Click on Tab : "+TabName.Object1Tab,YesNo.No);	
//				value = accounts[0];
//				type = accounts[1];
//				if (ip.createEntityOrAccount(projectName, value, type, null, 20)) {
//					log(LogStatus.INFO,"successfully Created Account/Entity : "+value+" of record type : "+type,YesNo.No);	
//				} else {
//					sa.assertTrue(false,"Not Able to Create Account/Entity : "+value+" of record type : "+type);
//					log(LogStatus.SKIP,"Not Able to Create Account/Entity : "+value+" of record type : "+type,YesNo.Yes);
//				}
//
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//			}
//		}
//
//		String fname="";
//		String lname="";
//		String mailID="";
//		String ins="";
//		String[][] contactsInfo = { { Smoke_TaskContact1FName, Smoke_TaskContact1LName, Smoke_TaskINS1Name,
//			Smoke_TaskContact1RecordType}
//		, {Smoke_TaskContact2FName,Smoke_TaskContact2LName,Smoke_TaskINS1Name,
//			Smoke_TaskContact2RecordType},
//		{Smoke_TaskContact3FName,Smoke_TaskContact3LName,Smoke_TaskINS2Name,
//				Smoke_TaskContact3RecordType},
//		{Smoke_TaskContact4FName,Smoke_TaskContact4LName,Smoke_TaskINS2Name,
//					Smoke_TaskContact4RecordType},
//		};
//		int i=1;
//		String recType;
//		for (String[] contacts : contactsInfo) {
//			if (lp.clickOnTab(projectName, TabName.Object2Tab)) {
//				log(LogStatus.INFO,"Click on Tab : "+TabName.Object2Tab,YesNo.No);	
//				fname = contacts[0];
//				lname = contacts[1];
//				ins=contacts[2];
//				recType=contacts[3];
//				mailID=	lp.generateRandomEmailId(gmailUserName);
//				ExcelUtils.writeData(testCasesFilePath, mailID, "Contacts", excelLabel.Variable_Name, "AATASKC"+i,excelLabel.Contact_EmailId);
//
//				if (cp.createContact(projectName, fname, lname, ins, mailID,recType, null, null, CreationPage.ContactPage)) {
//					log(LogStatus.INFO,"successfully Created Contact : "+fname+" "+lname,YesNo.No);	
//				} else {
//					sa.assertTrue(false,"Not Able to Create Contact : "+fname+" "+lname);
//					log(LogStatus.SKIP,"Not Able to Create Contact: "+fname+" "+lname,YesNo.Yes);
//				}
//
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//			}
//			i++;
//		}
//
//		String[][] fundsOrDeals = {{Smoke_TaskFund1Name,Smoke_TaskFund1Type,Smoke_TaskFund1InvestmentCategory,Smoke_TaskFund1RecordType},
//				{Smoke_TaskFund2Name,Smoke_TaskFund2Type,Smoke_TaskFund2InvestmentCategory,Smoke_TaskFund2RecordType}};
//		for (String[] funds : fundsOrDeals) {
//			if (lp.clickOnTab(projectName, TabName.Object3Tab)) {
//				log(LogStatus.INFO,"Click on Tab : "+TabName.Object3Tab,YesNo.No);	
//
//				if (ProjectName.MNA.toString().equals(projectName)) {
//					
//					if (fp.createDealMNA(projectName,funds[3],funds[0], "Prospect", "Prospect",null, 15)) {
//						log(LogStatus.INFO,"Created Fund/Deal : "+funds[0],YesNo.No);	
//					} else {
//						sa.assertTrue(false,"Not Able to Create Fund/Deal  : "+funds[0]);
//						log(LogStatus.SKIP,"Not Able to Create Fund/Deal  : "+funds[0],YesNo.Yes);
//					}
//					
//				} else {
//
//					if (fp.createFundPE(projectName, funds[0], funds[3], funds[1], funds[2], null, 15)) {
//						log(LogStatus.INFO,"Created Fund/Deal : "+funds[0],YesNo.No);	
//					} else {
//						sa.assertTrue(false,"Not Able to Create Fund/Deal  : "+funds[0]);
//						log(LogStatus.SKIP,"Not Able to Create Fund/Deal  : "+funds[0],YesNo.Yes);
//					}
//				}
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//			}
//		}
//
//		String[][] customObjValues = {{taskCustomObj1Name,taskCustomObj1RecordType},{taskCustomObj2Name,taskCustomObj2RecordType}};
//		for (String[] val : customObjValues) {
//			if (lp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//				log(LogStatus.INFO,"Click on Tab : "+TabName.TestCustomObjectTab,YesNo.No);	
//
//		
//				if (cop.createRecord(projectName, val[1], tabCustomObjField, val[0], false)) {
//					log(LogStatus.INFO,"successfully Created custom record : "+val[0],YesNo.No);	
//				} else {
//					sa.assertTrue(false,"Not Able to Create custom record  : "+val[0]);
//					log(LogStatus.SKIP,"Not Able to Create custom record  : "+val[0],YesNo.Yes);
//				}
//
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab,YesNo.Yes);
//			}
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc004_VerifyUIOfActivities(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String value="";
//		String type="";
//		String range="All Time,Today,Last 7 Days,Last 30 Days,Last 60 Days,Last 90 Days,Year To Date";
//		String columns=TaskPageFields.Date.toString()+","+
//				TaskPageFields.Name.toString()+","+
//				TaskPageFields.Contact_Name.toString()+","+
//				TaskPageFields.Related_To.toString()+","+
//				TaskPageFields.Status.toString()+","+
//				TaskPageFields.Owner.toString()+","+
//				PageLabel.Meeting_Type.toString()+","+
//				TaskPageFields.Activity.toString()+","+
//				TaskPageFields.Comments.toString()+","+
//				TaskPageFields.Date.toString();
//		columns=columns.replace("_", " ");
//		if (ip.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 15)) {
//				if ( ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Meetings, 15)!=null) {
//					log(LogStatus.INFO, "successfully verified meetings tab", YesNo.No);
//				}
//				else {
//					log(LogStatus.ERROR, "not verified meetings tab", YesNo.Yes);
//					sa.assertTrue(false,"not verified meetings tab");
//				}
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 15), "activities", action.SCROLLANDBOOLEAN)) {
//					if (cp.getButtonLogCallMultiple(projectName, 20)!=null) {
//						log(LogStatus.INFO,"log a call button verified successfully",YesNo.No);
//					}
//					else {
//						sa.assertTrue(false,"log a call button not verified");
//						log(LogStatus.ERROR, "log a call button not verified",YesNo.Yes);
//					}
//					if (cp.getButtonNewTaskMultipleAssociations(projectName, 20)!=null) {
//						log(LogStatus.INFO,"NewTask button verified successfully",YesNo.No);
//					}
//					else {
//						sa.assertTrue(false,"NewTask button not verified");
//						log(LogStatus.ERROR, "NewTask button not verified",YesNo.Yes);
//					}switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					
//					if (ip.getwrenchIcon(projectName, 20)!=null) {
//						
//						log(LogStatus.INFO,"successfully verified wrenchIcon in task", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"could not verify wrenchIcon in task", YesNo.Yes);
//						sa.assertTrue(false,"could not verify wrenchIcon in task");
//					}
//					if (ip.getrefreshButton(projectName, 20)!=null) {
//						
//						log(LogStatus.INFO,"successfully verified refreshButton in task", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"could not verify refreshButton in task", YesNo.Yes);
//						sa.assertTrue(false,"could not verify refreshButton in task");
//					}
//					if (ip.getadvancedFilterImg(projectName, 20)!=null) {
//						log(LogStatus.INFO,"successfully verified advancedFilter in task window", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"could not verify advancedFilter in task window", YesNo.Yes);
//						sa.assertTrue(false,"could not verify advancedFilter in task window");
//					}
//					if (ip.getrangeDropdown(projectName, 20)!=null) {
//						
//						log(LogStatus.INFO,"successfully verified rangeDropdown in task window", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"could not verify rangeDropdown in task window", YesNo.Yes);
//						sa.assertTrue(false,"could not verify rangeDropdown in task window");
//					}
//					if (isSelected(driver, ip.getactivitiesCheckbox(projectName, 10), "activities checkbox")) {
//						log(LogStatus.INFO,"successfully verified checked activities checkbox in task window", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"could not verify checked activities checkbox in task window", YesNo.Yes);
//						sa.assertTrue(false,"could not verify checked activities checkbox in task window");
//					}
//					if (!isSelected(driver, ip.getattachmentCheckbox(projectName, 10), "attachmentCheckbox")){
//						log(LogStatus.INFO,"attachmentCheckbox unchecked as expected", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"attachmentCheckbox is checked but it should not be", YesNo.Yes);
//						sa.assertTrue(false,"attachmentCheckbox is checked but it should not be");
//					}
//					if (ip.verifyAllColumnsInTask(projectName, columns)) {
//						log(LogStatus.INFO,"successfully verified all columns in task window", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"could not verify all columns in task window", YesNo.Yes);
//						sa.assertTrue(false,"could not verify all columns in task window");
//					}
//					List<String> s=compareMultipleList(driver, range, allOptionsInDropDrop(driver, ip.getrangeDropdown(projectName, 10), "range dropdown"));
//					if (s.isEmpty()) {
//						log(LogStatus.INFO,"successfully verified all dropdown", YesNo.No);
//					}
//					else {
//						for (String str:s) {
//							log(LogStatus.ERROR, "not found in dropdown: "+str,YesNo.Yes);
//							sa.assertTrue(false,  "not found in dropdown: "+str);
//						}
//					}
//					scrollDownThroughWebelement(driver, ip.getsearchTextboxActivities(projectName, 20), "search box");
//					ThreadSleep(3000);
//					WebElement ele=BaseLib.edriver.findElement(By.cssSelector("#searchiconid"));
//					clickUsingJavaScript(edriver, ele, "search");
//					ThreadSleep(3000);
//						if (isAlertPresent(driver)) {
//							String ms=switchToAlertAndGetMessage(driver, 10, action.GETTEXT);
//							switchToAlertAndAcceptOrDecline(driver, 10, action.ACCEPT);
//							if (ms.contains(BasePageErrorMessage.alertMsgWithoutEnteringValue)) {
//								log(LogStatus.INFO, "successfully verified empty search error message",  YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "not verified empty search error message"+ms,YesNo.Yes);
//								sa.assertTrue(false,  "not verified empty search error message"+ms);
//							}
//						}
//						else {
//							log(LogStatus.ERROR, "alert not present",YesNo.Yes);
//							sa.assertTrue(false,  "alert not present");
//						}
//						
//					if (sendKeys(driver, ip.getsearchTextboxActivities(projectName, 20), "a", "search textbox", action.SCROLLANDBOOLEAN)) {
//						ThreadSleep(3000);
//						ele=BaseLib.edriver.findElement(By.cssSelector("#searchiconid"));
//						clickUsingJavaScript(edriver, ele, "search");
//						ThreadSleep(3000);
//							if (isAlertPresent(driver)) {
//								String ms=switchToAlertAndGetMessage(driver, 10, action.GETTEXT);
//								switchToAlertAndAcceptOrDecline(driver, 10, action.ACCEPT);
//								if (ms.contains(BasePageErrorMessage.lessThanTwoChars)) {
//									log(LogStatus.INFO, "successfully verified 2 chars error message",  YesNo.No);
//								}
//								else {
//									log(LogStatus.ERROR, "not verified 2 chars error message"+ms,YesNo.Yes);
//									sa.assertTrue(false,  "not verified 2 chars error message"+ms);
//								}
//							}
//							else {
//								log(LogStatus.ERROR, "alert not present",YesNo.Yes);
//								sa.assertTrue(false,  "alert not present");
//							}
//						
//						if (click(driver, ip.getsearchCrossActivities(projectName, 20), "cross icon", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "successfully clicked search cross icom",  YesNo.No);
//							
//						}else {
//							log(LogStatus.ERROR, "search cross not clickable",YesNo.Yes);
//							sa.assertTrue(false,  "search cross not clickable");
//						}
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR,"activities tab not clickable", YesNo.Yes);
//					sa.assertTrue(false,"activities tab not clickable");
//				}
//			}
//			else {
//				log(LogStatus.ERROR,"account/entity not found: "+Smoke_TaskINS1Name, YesNo.Yes);
//				sa.assertTrue(false,"account/entity not found: "+Smoke_TaskINS1Name);
//			}
//		}
//		else {
//			log(LogStatus.ERROR,"account/entity tab not clickable ", YesNo.Yes);
//			sa.assertTrue(false,"account/entity tab not clickable ");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc005_VerifyUIOfActivitiesColumnsToDisplay(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String columns=TaskPageFields.Date.toString()+","+
//				TaskPageFields.Name.toString()+","+
//				"Name ID,"+
//				"Related To ID,"+
//				TaskPageFields.Status.toString()+","+
//				TaskPageFields.Owner.toString()+","+
//				PageLabel.Meeting_Type.toString()+","+
//				TaskPageFields.Activity.toString();
//		columns=columns.replace("_", " ");
//		String[] selectedGrid=columns.split(",");
//		if (ip.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 20)) {
//				WebElement ele=ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20);
//				if (click(driver, ele, "related tab activities", action.BOOLEAN)) {
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					if (click(driver, ip.getwrenchIcon(projectName, 20), "columns to display", action.SCROLLANDBOOLEAN)) {
//						
//						if (ip.getsearchTextboxColToDisplay(projectName, 20)!=null) {
//							log(LogStatus.INFO, "successfully found searchTextbox", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found searchTextbox", YesNo.Yes);
//							sa.assertTrue(false, "not found searchTextbox");
//						}
//						if (ip.getCancelButtonOnColumnsToDisplay(projectName, 20)!=null) {
//							log(LogStatus.INFO, "successfully found CancelButton", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found CancelButton", YesNo.Yes);
//							sa.assertTrue(false, "not found CancelButton");
//						}
//						
//						if (ip.getrevertToDefaultColToDisplay(projectName, EnableDisable.Disable, 10)!=null) {
//							log(LogStatus.INFO, "successfully found revert Disable", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found revert Disable", YesNo.Yes);
//							sa.assertTrue(false, "not found revert Disable");
//						}
//						if (ip.getApplyColToDisplay(projectName, EnableDisable.Disable, 10)!=null) {
//							log(LogStatus.INFO, "successfully found apply Disable", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found apply Disable", YesNo.Yes);
//							sa.assertTrue(false, "not found apply Disable");
//						}
//						
//						if (ip.getMoveUpColToDisplay(projectName, EnableDisable.Disable, 10)!=null) {
//							log(LogStatus.INFO, "successfully found MoveUp Disable", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found MoveUp Disable", YesNo.Yes);
//							sa.assertTrue(false, "not found MoveUp Disable");
//						}
//						if (ip.getMoveDownColToDisplay(projectName, EnableDisable.Disable, 10)!=null) {
//							log(LogStatus.INFO, "successfully found MoveDown Disable", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found MoveDown Disable", YesNo.Yes);
//							sa.assertTrue(false, "not found MoveDown Disable");
//						}
//						if (ip.getMoveTopColToDisplay(projectName, EnableDisable.Disable, 10)!=null) {
//							log(LogStatus.INFO, "successfully found MoveTop Disable", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found MoveTop Disable", YesNo.Yes);
//							sa.assertTrue(false, "not found MoveTop Disable");
//						}
//						if (ip.getMoveBottomColToDisplay(projectName, EnableDisable.Disable, 10)!=null) {
//							log(LogStatus.INFO, "successfully found MoveBottom Disable", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found MoveBottom Disable", YesNo.Yes);
//							sa.assertTrue(false, "not found MoveBottom Disable");
//						}
//						for (int i = 0;i<selectedGrid.length;i++) {
//							if (ip.verifySelectedColumnInColumnsToDisplayGrid(projectName,PageName.Object1Page, selectedGrid[i], 20)) {
//								log(LogStatus.INFO, "successfully found "+selectedGrid[i], YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "not found "+selectedGrid[i], YesNo.Yes);
//								sa.assertTrue(false, "not found "+selectedGrid[i]);
//							}
//						}
//						if (click(driver, ip.getsearchIconColToDisplay(projectName, 20), "search icon", action.SCROLLANDBOOLEAN)) {
//							if (getText(driver, ip.getpleaseEnterAValueMsg(projectName, 10), "please enter a valuye", action.BOOLEAN)
//									.contains(BasePageErrorMessage.alertMsgWithoutEnteringValue)) {
//								log(LogStatus.INFO, "successfully verified enter a value error message", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "could not verify enter a value error message", YesNo.Yes);
//								sa.assertTrue(false, "could not verify enter a value error message");
//							}
//						}
//						else {
//							log(LogStatus.ERROR, "search icon not clickable", YesNo.Yes);
//							sa.assertTrue(false, "search icon not clickable");
//						}
//
//						click(driver, ip.getCancelButtonOnColumnsToDisplay(projectName, 20), "cancel", action.BOOLEAN);
//						/*if (isDisplayed(driver,ip.getCancelButtonOnColumnsToDisplay(projectName, 5), "visibility", 5, "cancel")==null) {
//							log(LogStatus.INFO, "successfully closed columns to display", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "could not close columns to display", YesNo.Yes);
//							sa.assertTrue(false, "could not close columns to display");
//						}*/
//					}
//					else {
//						log(LogStatus.ERROR, "could not click wrench columns to display", YesNo.Yes);
//						sa.assertTrue(false, "could not click wrench columns to display");
//					}
//					if (click(driver, ip.getwrenchIcon(projectName, 20), "columns to display", action.SCROLLANDBOOLEAN)) {
//						click(driver, ip.getcrossIconColToDisplay(projectName, 20), "columns to display cross icon", action.SCROLLANDBOOLEAN);
//						/*if (isDisplayed(driver,ip.getCancelButtonOnColumnsToDisplay(projectName, 5), "visibility", 5, "cancel")==null) {
//							log(LogStatus.INFO, "successfully closed columns to display", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "could not close columns to display", YesNo.Yes);
//							sa.assertTrue(false, "could not close columns to display");
//						}*/
//					}
//					else {
//						log(LogStatus.ERROR, "could not click wrench columns to display", YesNo.Yes);
//						sa.assertTrue(false, "could not click wrench columns to display");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "could not click related tab activities", YesNo.Yes);
//					sa.assertTrue(false, "could not click related tab activities");
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "could not find entity "+Smoke_TaskINS1Name, YesNo.Yes);
//				sa.assertTrue(false, "could not find entity "+Smoke_TaskINS1Name);
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "entity or account tab not clickable", YesNo.Yes);
//			sa.assertTrue(false, "entity or account tab not clickable");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//		
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc006_VerifyUIOfActivitiesAdvancedFilter(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String[] dd= {"Owner","Status","Type"};
//		String ownerDD= "All Activities,My Activities";
//		String typeDD="Tasks,Tasks and Events,Events";
//		String statusDD="Open and Completed activities,Open activities,Completed activities";
//		String[] allElements= {ownerDD,statusDD,typeDD};
//		String filterDD="Field,Operator,Value";
//		WebElement dropdown=null;
//		String current=null;
//		if (ip.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 20)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 10), "activities", action.BOOLEAN)) {
//					switchToFrame(driver,20, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.SCROLLANDBOOLEAN)) {
//						for (String drop:dd) {
//							if (ip.getAdvancedFilteDropdowns(projectName, drop, 20)!=null) {
//								log(LogStatus.INFO, "successfully verified dropdown "+drop+" on advanced filter", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "dropdown "+drop+" not found on advanced filter", YesNo.No);
//								sa.assertTrue(false,"dropdown "+drop+" not found on advanced filter");
//							}
//						}
//						for (int i=0;i<dd.length;i++) {
//							dropdown=ip.getAdvancedFilteDropdowns(projectName, dd[i], 10);
//							scrollDownThroughWebelement(driver, dropdown ,dd[i]+" dd");
//							current=allElements[i].split(",")[0];
//							if (getSelectedOptionOfDropDown(driver, dropdown, dd[i]+" dd", "text").trim().contains(current)) {
//								log(LogStatus.INFO, "successfully verified currently selected option "+current+" of "+dd[i], YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR,  "could not verify currently selected option "+current+" of "+dd[i], YesNo.No);
//								sa.assertTrue(false, "could not verify currently selected option "+current+"of "+dd[i]);
//							}
//							List<WebElement> e=allOptionsInDropDrop(driver,dropdown, dd[i]+" dd");
//							List<String> com=compareMultipleList(driver,allElements[i], e);
//							if (com.isEmpty()) {
//								log(LogStatus.INFO, "successfully verified all options in owner dropdown",YesNo.No);
//							}
//							else {
//								for (String s:com) {
//									log(LogStatus.ERROR, "dropdown element "+s+"not found in "+dd[i], YesNo.No);
//									sa.assertTrue(false, "dropdown element "+s+"not found in "+dd[i]);
//								}
//							}
//						}
//						if (ip.getaddRowFilter(projectName, 10)!=null) {
//							log(LogStatus.INFO, "successfully verified add Row link", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "could not verify add Row link", YesNo.Yes);
//							sa.assertTrue(false, "could not verify add Row link");
//						}
//						if (ip.getfilterLogicLink(projectName, 10)!=null) {
//							log(LogStatus.INFO, "successfully verified filterLogic link", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "could not verify filterLogic link", YesNo.Yes);
//							sa.assertTrue(false, "could not verify filterLogic link");
//						}
//						
//						if (ip.clearApplyButtonOnAdvancedFilter(projectName, "clear",10)!=null) {
//							log(LogStatus.INFO, "successfully verified filter clear link", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "could not verify filter clear link", YesNo.Yes);
//							sa.assertTrue(false, "could not verify filter clear link");
//						}
//						
//						if (ip.clearApplyButtonOnAdvancedFilter(projectName,"apply", 10)!=null) {
//							log(LogStatus.INFO, "successfully verified filter apply link", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "could not verify filter apply link", YesNo.Yes);
//							sa.assertTrue(false, "could not verify filter apply link");
//						}
//						if (ip.getsearchActAttach(projectName, 10)!=null) {
//							log(LogStatus.INFO, "successfully verified search activities/attachment", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "could not verify search activities/attachment", YesNo.Yes);
//							sa.assertTrue(false, "could not verify search activities/attachment");
//						}
//						if (compareMultipleList(driver, filterDD, ip.getfilterHeadings(projectName,10 )).isEmpty()) {
//							log(LogStatus.INFO, "successfully verified filter headings", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "could not verify filter headings", YesNo.Yes);
//							sa.assertTrue(false, "could not verify filter headings");
//						}
//						scrollDownThroughWebelement(driver,  ip.getsearchActAttach(projectName, 10),  "search activities/attachment");
//						if (click(driver, ip.getsearchActAttach(projectName, 10), "search activities/attachment", action.SCROLLANDBOOLEAN)) {
//							if (click(driver, ip.getinsuffCrossButton(projectName, 10), "cross", action.BOOLEAN)) {
//								log(LogStatus.INFO, "successfully closed filter search activities/attachment", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR,  "could not close filter search activities/attachment", YesNo.Yes);
//								sa.assertTrue(false, "could not close filter search activities/attachment");
//							}
//						}
//						else {
//							log(LogStatus.ERROR,  "could not click search activities/attachment", YesNo.Yes);
//							sa.assertTrue(false, "could not click search activities/attachment");
//						}
//						scrollDownThroughWebelement(driver,  ip.getsearchActAttach(projectName, 10),  "search activities/attachment");
//						
//						if (click(driver, ip.getsearchActAttach(projectName, 10), "search activities/attachment", action.SCROLLANDBOOLEAN)) {
//							if (ip.getinsufficientErrorMsg(projectName, 10).getText().trim().contains(BasePageErrorMessage.insufficientPopup1) &&
//									ip.getinsufficientErrorMsg(projectName, 10).getText().trim().contains(BasePageErrorMessage.insufficientPopup2)) {
//								log(LogStatus.INFO, "successfully verified insufficient error message", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR,  "could not verify insufficient error messag", YesNo.Yes);
//								sa.assertTrue(false, "could not verify insufficient error messag");
//							}
//							if (click(driver, ip.getinsuffOKButton(projectName, 10), "ok", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO, "successfully closed filter search activities/attachment", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR,  "could not close filter search activities/attachment", YesNo.Yes);
//								sa.assertTrue(false, "could not close filter search activities/attachment");
//							}
//						}
//						else {
//							log(LogStatus.ERROR,  "could not click search activities/attachment", YesNo.Yes);
//							sa.assertTrue(false, "could not click search activities/attachment");
//						}
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR,  "could not click related tab activities", YesNo.Yes);
//					sa.assertTrue(false, "could not click related tab activities");
//				}
//			}
//			else  {
//				log(LogStatus.ERROR,  "could not click on created entity/account", YesNo.Yes);
//				sa.assertTrue(false, "could not click on created entity/account");
//			}
//
//		}
//		else {
//			log(LogStatus.ERROR,  "entity/account tab not clickable", YesNo.Yes);
//			sa.assertTrue(false, "entity/account tab not clickable");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc007_VerifyUIOfMeetings(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String range="All Time,Today,Last 7 Days,Last 30 Days,Last 60 Days,Last 90 Days,Year To Date";
//		String columns=TaskPageFields.Date.toString()+","+
//				TaskPageFields.Name.toString()+","+
//				TaskPageFields.Contact_Name.toString()+","+
//				TaskPageFields.Related_To.toString()+","+
//				TaskPageFields.Status.toString()+","+
//				TaskPageFields.Owner.toString()+","+
//				PageLabel.Meeting_Type.toString()+","+
//				TaskPageFields.Activity.toString()+","+
//				TaskPageFields.Comments.toString()+","+
//				TaskPageFields.Date.toString();
//		columns=columns.replace("_", " ");
//		if (ip.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 15)) {
//				if ( ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Meetings, 15)!=null) {
//					log(LogStatus.INFO, "successfully verified meetings tab", YesNo.No);
//				}
//				else {
//					log(LogStatus.ERROR, "not verified meetings tab", YesNo.Yes);
//					sa.assertTrue(false,"not verified meetings tab");
//				}
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Meetings, 15), "Meetings", action.SCROLLANDBOOLEAN)) {
//					if (cp.getNewMeetingButton(projectName, 15)!=null) {
//						log(LogStatus.INFO,"log a call button verified successfully",YesNo.No);
//					}
//					else {
//						sa.assertTrue(false,"log a call button not verified");
//						log(LogStatus.ERROR, "log a call button not verified",YesNo.Yes);
//					}
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					
//					if (ip.getwrenchIcon(projectName, 20)!=null) {
//						
//						log(LogStatus.INFO,"successfully verified wrenchIcon in Meetings", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"could not verify wrenchIcon in Meetings", YesNo.Yes);
//						sa.assertTrue(false,"could not verify wrenchIcon in Meetings");
//					}
//					if (ip.getrefreshButton(projectName, 20)!=null) {
//						
//						log(LogStatus.INFO,"successfully verified refreshButton in Meetings", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"could not verify refreshButton in Meetings", YesNo.Yes);
//						sa.assertTrue(false,"could not verify refreshButton in Meetings");
//					}
//					if (ip.getadvancedFilterImg(projectName, 20)!=null) {
//						log(LogStatus.INFO,"successfully verified advancedFilter in Meetings window", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"could not verify advancedFilter in Meetings window", YesNo.Yes);
//						sa.assertTrue(false,"could not verify advancedFilter in Meetings window");
//					}
//					if (ip.getrangeDropdown(projectName, 20)!=null) {
//						
//						log(LogStatus.INFO,"successfully verified rangeDropdown in Meetings window", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"could not verify rangeDropdown in Meetings window", YesNo.Yes);
//						sa.assertTrue(false,"could not verify rangeDropdown in Meetings window");
//					}
//					if (isSelected(driver, ip.getactivitiesCheckbox(projectName, 10), "activities checkbox")) {
//						log(LogStatus.INFO,"successfully verified checked activities checkbox in Meetings window", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"could not verify checked activities checkbox in Meetings window", YesNo.Yes);
//						sa.assertTrue(false,"could not verify checked activities checkbox in Meetings window");
//					}
//					if (!isSelected(driver, ip.getattachmentCheckbox(projectName, 10), "attachmentCheckbox")){
//						log(LogStatus.INFO,"attachmentCheckbox unchecked as expected", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"attachmentCheckbox is checked but it should not be", YesNo.Yes);
//						sa.assertTrue(false,"attachmentCheckbox is checked but it should not be");
//					}
//					if (ip.verifyAllColumnsInTask(projectName, columns)) {
//						log(LogStatus.INFO,"successfully verified all columns in task window", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR,"could not verify all columns in task window", YesNo.Yes);
//						sa.assertTrue(false,"could not verify all columns in task window");
//					}
//					List<String> s=compareMultipleList(driver, range, allOptionsInDropDrop(driver, ip.getrangeDropdown(projectName, 10), "range dropdown"));
//					if (s.isEmpty()) {
//						log(LogStatus.INFO,"successfully verified all dropdown", YesNo.No);
//					}
//					else {
//						for (String str:s) {
//							log(LogStatus.ERROR, "not found in dropdown: "+str,YesNo.Yes);
//							sa.assertTrue(false,  "not found in dropdown: "+str);
//						}
//					}
//					ThreadSleep(3000);
//					
//					if ( ip.getsearchTextboxActivities(projectName, 20)!=null) {
//						log(LogStatus.INFO, "successfully verified searchTextbox",  YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "not verified searchTextbox",YesNo.Yes);
//						sa.assertTrue(false,  "not verified searchTextbox");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR,"meeting tab not clickable", YesNo.Yes);
//					sa.assertTrue(false,"meeting tab not clickable");
//				}
//			}
//			else {
//				log(LogStatus.ERROR,"account/entity not found: "+Smoke_TaskINS1Name, YesNo.Yes);
//				sa.assertTrue(false,"account/entity not found: "+Smoke_TaskINS1Name);
//			}
//		}
//		else {
//			log(LogStatus.ERROR,"account/entity tab not clickable ", YesNo.Yes);
//			sa.assertTrue(false,"account/entity tab not clickable ");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc008_VerifyUIOfMeetingsColumnsToDisplay(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String columns=TaskPageFields.Date.toString()+","+
//				TaskPageFields.Name.toString()+","+
//				"Name ID,"+
//				"Related To ID,"+
//				TaskPageFields.Status.toString()+","+
//				TaskPageFields.Owner.toString()+","+
//				PageLabel.Meeting_Type.toString()+","+
//				TaskPageFields.Activity.toString();
//		columns=columns.replace("_", " ");
//		String[] selectedGrid=columns.split(",");
//		if (ip.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 20)) {
//				WebElement ele=ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Meetings, 20);
//				if (click(driver, ele, "related tab Meetings", action.BOOLEAN)) {
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					if (click(driver, ip.getwrenchIcon(projectName, 20), "columns to display", action.SCROLLANDBOOLEAN)) {
//						
//						if (ip.getsearchTextboxColToDisplay(projectName, 20)!=null) {
//							log(LogStatus.INFO, "successfully found searchTextbox", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found searchTextbox", YesNo.Yes);
//							sa.assertTrue(false, "not found searchTextbox");
//						}
//						if (ip.getCancelButtonOnColumnsToDisplay(projectName, 20)!=null) {
//							log(LogStatus.INFO, "successfully found CancelButton", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found CancelButton", YesNo.Yes);
//							sa.assertTrue(false, "not found CancelButton");
//						}
//						
//						if (ip.getrevertToDefaultColToDisplay(projectName, EnableDisable.Disable, 10)!=null) {
//							log(LogStatus.INFO, "successfully found revert Disable", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found revert Disable", YesNo.Yes);
//							sa.assertTrue(false, "not found revert Disable");
//						}
//						if (ip.getApplyColToDisplay(projectName, EnableDisable.Disable, 10)!=null) {
//							log(LogStatus.INFO, "successfully found apply Disable", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found apply Disable", YesNo.Yes);
//							sa.assertTrue(false, "not found apply Disable");
//						}
//						
//						if (ip.getMoveUpColToDisplay(projectName, EnableDisable.Disable, 10)!=null) {
//							log(LogStatus.INFO, "successfully found MoveUp Disable", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found MoveUp Disable", YesNo.Yes);
//							sa.assertTrue(false, "not found MoveUp Disable");
//						}
//						if (ip.getMoveDownColToDisplay(projectName, EnableDisable.Disable, 10)!=null) {
//							log(LogStatus.INFO, "successfully found MoveDown Disable", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found MoveDown Disable", YesNo.Yes);
//							sa.assertTrue(false, "not found MoveDown Disable");
//						}
//						if (ip.getMoveTopColToDisplay(projectName, EnableDisable.Disable, 10)!=null) {
//							log(LogStatus.INFO, "successfully found MoveTop Disable", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found MoveTop Disable", YesNo.Yes);
//							sa.assertTrue(false, "not found MoveTop Disable");
//						}
//						if (ip.getMoveBottomColToDisplay(projectName, EnableDisable.Disable, 10)!=null) {
//							log(LogStatus.INFO, "successfully found MoveBottom Disable", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "not found MoveBottom Disable", YesNo.Yes);
//							sa.assertTrue(false, "not found MoveBottom Disable");
//						}
//						for (int i = 0;i<selectedGrid.length;i++) {
//							if (ip.verifySelectedColumnInColumnsToDisplayGrid(projectName,PageName.Object1Page, selectedGrid[i], 20)) {
//								log(LogStatus.INFO, "successfully found "+selectedGrid[i], YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "not found "+selectedGrid[i], YesNo.Yes);
//								sa.assertTrue(false, "not found "+selectedGrid[i]);
//							}
//						}
//
//						click(driver, ip.getCancelButtonOnColumnsToDisplay(projectName, 20), "cancel", action.BOOLEAN);
//						
//					}
//					else {
//						log(LogStatus.ERROR, "could not click wrench columns to display", YesNo.Yes);
//						sa.assertTrue(false, "could not click wrench columns to display");
//					}
//					if (click(driver, ip.getwrenchIcon(projectName, 20), "columns to display", action.SCROLLANDBOOLEAN)) {
//						click(driver, ip.getcrossIconColToDisplay(projectName, 20), "columns to display cross icon", action.SCROLLANDBOOLEAN);
//						/*if (isDisplayed(driver,ip.getCancelButtonOnColumnsToDisplay(projectName, 5), "visibility", 5, "cancel")==null) {
//							log(LogStatus.INFO, "successfully closed columns to display", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "could not close columns to display", YesNo.Yes);
//							sa.assertTrue(false, "could not close columns to display");
//						}*/
//					}
//					else {
//						log(LogStatus.ERROR, "could not click wrench columns to display", YesNo.Yes);
//						sa.assertTrue(false, "could not click wrench columns to display");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "could not click related tab activities", YesNo.Yes);
//					sa.assertTrue(false, "could not click related tab activities");
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "could not find entity "+Smoke_TaskINS1Name, YesNo.Yes);
//				sa.assertTrue(false, "could not find entity "+Smoke_TaskINS1Name);
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "entity or account tab not clickable", YesNo.Yes);
//			sa.assertTrue(false, "entity or account tab not clickable");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc009_VerifyUIOfMeetingsAdvancedFilter(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String[] dd= {"Owner","Status","Type"};
//		String ownerDD= "All Activities,My Activities";
//		String typeDD="Tasks,Tasks and Events,Events";
//		String statusDD="Open and Completed activities,Open activities,Completed activities";
//		String[] allElements= {ownerDD,statusDD,typeDD};
//		String filterDD="Field,Operator,Value";
//		WebElement dropdown=null;
//		String current=null;
//		if (ip.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 20)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Meetings, 10), "Meetings", action.BOOLEAN)) {
//					switchToFrame(driver,20, ip.getFrame(PageName.ActivitiesOrMeetings, 20));
//					if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.SCROLLANDBOOLEAN)) {
//						for (String drop:dd) {
//							if (ip.getAdvancedFilteDropdowns(projectName, drop, 20)!=null) {
//								log(LogStatus.INFO, "successfully verified dropdown "+drop+" on advanced filter", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "dropdown "+drop+" not found on advanced filter", YesNo.No);
//								sa.assertTrue(false,"dropdown "+drop+" not found on advanced filter");
//							}
//						}
//						for (int i=0;i<dd.length;i++) {
//							dropdown=ip.getAdvancedFilteDropdowns(projectName, dd[i], 10);
//							scrollDownThroughWebelement(driver, dropdown ,dd[i]+" dd");
//							current=allElements[i].split(",")[0];
//							if (getSelectedOptionOfDropDown(driver, dropdown, dd[i]+" dd", "text").trim().contains(current)) {
//								log(LogStatus.INFO, "successfully verified currently selected option "+current+" of "+dd[i], YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR,  "could not verify currently selected option "+current+" of "+dd[i], YesNo.No);
//								sa.assertTrue(false, "could not verify currently selected option "+current+"of "+dd[i]);
//							}
//							List<WebElement> e=allOptionsInDropDrop(driver,dropdown, dd[i]+" dd");
//							List<String> com=compareMultipleList(driver,allElements[i], e);
//							if (com.isEmpty()) {
//								log(LogStatus.INFO, "successfully verified all options in owner dropdown",YesNo.No);
//							}
//							else {
//								for (String s:com) {
//									log(LogStatus.ERROR, "dropdown element "+s+"not found in "+dd[i], YesNo.No);
//									sa.assertTrue(false, "dropdown element "+s+"not found in "+dd[i]);
//								}
//							}
//						}
//						if (ip.getaddRowFilter(projectName, 10)!=null) {
//							log(LogStatus.INFO, "successfully verified add Row link", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "could not verify add Row link", YesNo.Yes);
//							sa.assertTrue(false, "could not verify add Row link");
//						}
//						if (ip.getfilterLogicLink(projectName, 10)!=null) {
//							log(LogStatus.INFO, "successfully verified filterLogic link", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "could not verify filterLogic link", YesNo.Yes);
//							sa.assertTrue(false, "could not verify filterLogic link");
//						}
//						
//						if (ip.clearApplyButtonOnAdvancedFilter(projectName, "clear",10)!=null) {
//							log(LogStatus.INFO, "successfully verified filter clear link", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "could not verify filter clear link", YesNo.Yes);
//							sa.assertTrue(false, "could not verify filter clear link");
//						}
//						
//						if (ip.clearApplyButtonOnAdvancedFilter(projectName,"apply", 10)!=null) {
//							log(LogStatus.INFO, "successfully verified filter apply link", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "could not verify filter apply link", YesNo.Yes);
//							sa.assertTrue(false, "could not verify filter apply link");
//						}
//						if (ip.getsearchActAttach(projectName, 10)!=null) {
//							log(LogStatus.INFO, "successfully verified search activities/attachment", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "could not verify search activities/attachment", YesNo.Yes);
//							sa.assertTrue(false, "could not verify search activities/attachment");
//						}
//						if (compareMultipleList(driver, filterDD, ip.getfilterHeadings(projectName,10 )).isEmpty()) {
//							log(LogStatus.INFO, "successfully verified filter headings", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "could not verify filter headings", YesNo.Yes);
//							sa.assertTrue(false, "could not verify filter headings");
//						}
//						if (click(driver, ip.getsearchActAttach(projectName, 10), "search activities/attachment", action.SCROLLANDBOOLEAN)) {
//							if (click(driver, ip.getinsuffCrossButton(projectName, 10), "cross", action.BOOLEAN)) {
//								log(LogStatus.INFO, "successfully closed filter search activities/attachment", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR,  "could not close filter search activities/attachment", YesNo.Yes);
//								sa.assertTrue(false, "could not close filter search activities/attachment");
//							}
//						}
//						else {
//							log(LogStatus.ERROR,  "could not click search activities/attachment", YesNo.Yes);
//							sa.assertTrue(false, "could not click search activities/attachment");
//						}
//
//						if (click(driver, ip.getsearchActAttach(projectName, 10), "search activities/attachment", action.SCROLLANDBOOLEAN)) {
//							if (ip.getinsufficientErrorMsg(projectName, 10).getText().trim().contains(BasePageErrorMessage.insufficientPopup1) &&
//									ip.getinsufficientErrorMsg(projectName, 10).getText().trim().contains(BasePageErrorMessage.insufficientPopup2)) {
//								log(LogStatus.INFO, "successfully verified insufficient error message", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR,  "could not verify insufficient error messag", YesNo.Yes);
//								sa.assertTrue(false, "could not verify insufficient error messag");
//							}
//							if (click(driver, ip.getinsuffOKButton(projectName, 10), "ok", action.BOOLEAN)) {
//								log(LogStatus.INFO, "successfully closed filter search activities/attachment", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR,  "could not close filter search activities/attachment", YesNo.Yes);
//								sa.assertTrue(false, "could not close filter search activities/attachment");
//							}
//						}
//						else {
//							log(LogStatus.ERROR,  "could not click search activities/attachment", YesNo.Yes);
//							sa.assertTrue(false, "could not click search activities/attachment");
//						}
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR,  "could not click related tab activities", YesNo.Yes);
//					sa.assertTrue(false, "could not click related tab activities");
//				}
//			}
//			else  {
//				log(LogStatus.ERROR,  "could not click on created entity/account", YesNo.Yes);
//				sa.assertTrue(false, "could not click on created entity/account");
//			}
//
//		}
//		else {
//			log(LogStatus.ERROR,  "entity/account tab not clickable", YesNo.Yes);
//			sa.assertTrue(false, "entity/account tab not clickable");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc010_verifyErrorMessageCreatingNewTaskMultipleAssociation(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);Scanner sc= new Scanner(System.in);
//		ActivityRelatedLabel[] fields= {ActivityRelatedLabel.Assigned_To,ActivityRelatedLabel.Status,ActivityRelatedLabel.Priority,ActivityRelatedLabel.Subject};
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 20)) {
//				WebElement ele=ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20);
//				if (click(driver, ele, "related tab activities", action.BOOLEAN)) {
//					if (click(driver,ip.getButtonNewTaskMultipleAssociations(projectName, 10), "new task", action.SCROLLANDBOOLEAN)) {
//						ele=ip.geDropdownOnTaskPopUp(projectName, PageLabel.Priority.toString(), action.SCROLLANDBOOLEAN, 10);
//						if (click(driver, ele, "Drop Down : "+PageLabel.Priority.toString(),action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "Clicked on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);	
//							ThreadSleep(2000);
//							
//							if (ip.SelectDropDownValue(projectName, PageName.Object2Page, PageLabel.Priority.toString(), "--None--", action.SCROLLANDBOOLEAN, 10)) {
//								log(LogStatus.INFO, "Selected : "+Smoke_Task3Priority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);	
//								ThreadSleep(1000);
//								
//							} else {
//								log(LogStatus.ERROR, "Not ABle to Select : "+Smoke_Task3Priority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);
//								sa.assertTrue(false,"Not ABle to Select : "+Smoke_Task3Priority+" For Label : "+PageLabel.Priority.toString() );
//							}
//						}
//						ele=ip.getstatusDropdownInCreateNewTask(projectName, 20);
//						if (click(driver, ele, "Drop Down : "+PageLabel.Status.toString(),action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "Clicked on "+PageLabel.Status.toString()+" Drop Down", YesNo.Yes);	
//							ThreadSleep(2000);
//							
//							if (ip.SelectDropDownValue(projectName, PageName.Object1Page, PageLabel.Status.toString(), "--None--", action.SCROLLANDBOOLEAN, 10)) {
//								log(LogStatus.INFO, "Selected : None For Label : "+PageLabel.Status.toString(), YesNo.Yes);	
//								ThreadSleep(1000);
//								
//							} else {
//								log(LogStatus.ERROR, "Not ABle to Select :  For Label : "+PageLabel.Status.toString(), YesNo.Yes);
//								sa.assertTrue(false,"Not ABle to Select :  For Label : "+PageLabel.Status.toString() );
//							}
//						}
//						ele=ip.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object1Page,ActivityRelatedLabel.Assigned_To.toString()
//								, false, crmUser1FirstName+" "+crmUser1LastName, action.SCROLLANDBOOLEAN, 10);
//						scrollDownThroughWebelement(driver,ele, "cross");
//						if (clickUsingJavaScript(driver, ele,"cross", action.SCROLLANDBOOLEAN)) {
//							if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName, 10), "custom tab save", action.SCROLLANDBOOLEAN)) {
//								for (ActivityRelatedLabel f:fields) {
//									ele=ip.returnErrorMessageBelowField(projectName, f, 10);
//									if (ele!=null) {
//										scrollDownThroughWebelement(driver, ele, "error message");
//										String s=ele.getText().trim();
//										if (s.contains(BasePageBusinessLayer.incomepleteField)) {
//											log(LogStatus.INFO, "successfully found incomplete error message for "+f, YesNo.No);
//										}
//										else {
//											log(LogStatus.ERROR,  "could not verify incomplete error message for "+f, YesNo.Yes);
//											sa.assertTrue(false, "could not verify incomplete error message for "+f);
//										}
//									}
//									else {
//										log(LogStatus.ERROR,  "incomplete error message not present for "+f, YesNo.Yes);
//										sa.assertTrue(false, "incomplete error message not present for "+f);
//									}
//								}
//							}
//							else {
//								log(LogStatus.ERROR,  "could not click save btn", YesNo.Yes);
//								sa.assertTrue(false, "could not click save btn");
//							}
//						}
//						else {
//							log(LogStatus.ERROR,  "could not click cross btn for assigned to", YesNo.Yes);
//							sa.assertTrue(false, "could not click cross btn for assigned to");
//						}
//					}
//					else {
//						log(LogStatus.ERROR,  "could not click new btn for task", YesNo.Yes);
//						sa.assertTrue(false, "could not click new btn for task");
//					}
//				}
//				else {
//					log(LogStatus.ERROR,  "could not click related tab", YesNo.Yes);
//					sa.assertTrue(false, "could not click related tab");
//				}
//			}
//			else {
//				log(LogStatus.ERROR,  "could not click on created entity/account", YesNo.Yes);
//				sa.assertTrue(false, "could not click on created entity/account");
//			}
//		}
//		else {
//			log(LogStatus.ERROR,  "could not click on tab entity/account", YesNo.Yes);
//			sa.assertTrue(false, "could not click on tab entity/account");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc011_AddMeetingTypeField(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		SetupPageBusinessLayer setup=new SetupPageBusinessLayer(driver);
//		HomePageBusineesLayer home=new HomePageBusineesLayer(driver);
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		String parentID=null;
//		//lp.switchToClassic();
//		String mode="Lightning";
//		if (home.clickOnSetUpLink()) {
//			parentID=switchOnWindow(driver);
//			if (parentID!=null) {
//			List<String> layoutName = new ArrayList<String>();
//			layoutName.add("Task Layout");
//			HashMap<String, String> sourceANDDestination = new HashMap<String, String>();
//			sourceANDDestination.put(PageLabel.Meeting_Type.toString(), PageLabel.Assigned_To.toString());
//			//scn.next();
//			List<String> abc = setup.DragNDrop("", mode, object.Task, objectFeatureName.pageLayouts, layoutName, sourceANDDestination);
//			ThreadSleep(10000);
//			if (!abc.isEmpty()) {
//				log(LogStatus.FAIL, "field not added/already present 1", YesNo.Yes);
//				sa.assertTrue(false, "field not added/already present 1");
//			}else{
//				log(LogStatus.INFO, "field added/already present 1", YesNo.Yes);
//			}
//			}
//			driver.close();
//			driver.switchTo().window(parentID);
//		}
//		else {
//			log(LogStatus.FAIL, "could not click on setup link", YesNo.Yes);
//			sa.assertTrue(false, "could not click on setup link");
//		}
//		lp.switchToLighting();
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc012_verifyNewTaskMultipleAssociation_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		String[] taskUIdata= {"","--None--",Smoke_TaskINS1Name,"","",Smoke_Task2Priority,"",Status.Not_Started.toString()};
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String date=todaysDate;
//		
//		String tabs=ip.getTabName(projectName, TabName.Object1Tab)+","+ip.getTabName(projectName, TabName.Object3Tab)+","+ip.getTabName(projectName, TabName.TestCustomObjectTab);
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 20)) {
//				WebElement ele=ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20);
//				if (click(driver, ele, "related tab activities", action.BOOLEAN)) {
//					if (click(driver,ip.getButtonNewTaskMultipleAssociations(projectName, 10), "new task", action.SCROLLANDBOOLEAN)) {
//						if (ip.verifyUIOfCreateNewTaskWindow(projectName,crmUser1FirstName+" "+crmUser1LastName,taskUIdata,false)) {
//							log(LogStatus.INFO, "successfully verified create new task ui", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "could not verify create new task ui", YesNo.Yes);
//							sa.assertTrue(false, "could not verify create new task ui");
//						}
//						if (clickUsingJavaScript(driver, ip.getcrossIcon(projectName, 20), "cross")) {
//							if (ip.getcancelButton(projectName, 10)==null) {
//								log(LogStatus.INFO, "new task window is successfully closed", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "new task window is not closed", YesNo.Yes);
//								sa.assertTrue(false,   "new task window is not closed");
//							}
//						}
//						else {
//							log(LogStatus.ERROR, "could not click on cross icon", YesNo.Yes);
//							sa.assertTrue(false,  "could not click on cross icon");
//						}
//					}
//					else {
//						log(LogStatus.ERROR, "could not click on new task button", YesNo.Yes);
//						sa.assertTrue(false,   "could not click on new task button");
//					}
//					if (click(driver,ip.getButtonNewTaskMultipleAssociations(projectName, 10), "new task", action.SCROLLANDBOOLEAN)) {
//						if (clickUsingJavaScript(driver, ip.getcancelButton(projectName, 20),  "cancel button")) {
//							if (ip.getcancelButton(projectName, 10)==null) {
//								log(LogStatus.INFO, "new task window is successfully closed", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "new task window is not closed", YesNo.Yes);
//								sa.assertTrue(false,   "new task window is not closed");
//							}
//						}
//						else {
//							log(LogStatus.ERROR, "could not click on cross icon", YesNo.Yes);
//							sa.assertTrue(false,   "could not click on cross icon");
//						}
//					}
//					else {
//						log(LogStatus.ERROR, "could not click on new task button", YesNo.Yes);
//						sa.assertTrue(false,   "could not click on new task button");
//					}
//
//					if (click(driver,ip.getButtonNewTaskMultipleAssociations(projectName, 10), "new task", action.SCROLLANDBOOLEAN)) {
//						scrollDownThroughWebelement(driver, ip.relatedAssociations(projectName).get(0), "related associatons");
//						if (clickUsingJavaScript(driver, ip.getrelatedAssociationsdropdownButton(projectName, 10), "dropdown button for related associations")) {
//							List<String> l=compareMultipleListContainsByTitle(driver, tabs, ip.listOfObjectsInRelatedAssctions(projectName));
//							if (l.isEmpty()) {
//								log(LogStatus.INFO, "successfully verified presence of all tabs "+tabs, YesNo.No);
//							}
//							else {
//								for (String a:l) {
//									log(LogStatus.ERROR,"not found "+a,  YesNo.Yes);
//									sa.assertTrue(false, "not found "+a);
//								}
//							}
//							l.clear();
//							l=compareMultipleListContainsByTitle(driver,ip.getTabName(projectName, TabName.Object2Tab).toString(), ip.listOfObjectsInRelatedAssctions(projectName));
//							if (l.isEmpty()) {
//								log(LogStatus.ERROR, "tab "+TabName.Object2Tab.toString()+" is present but should not be", YesNo.Yes);
//								sa.assertTrue(false, "tab "+TabName.Object2Tab.toString()+" is present but should not be");
//							}
//							else {
//								for (String a:l) {
//									log(LogStatus.INFO,"not found "+a+" as expected",  YesNo.Yes);
//
//								}
//							}
//							//3
//							boolean flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Name.toString(), TabName.Object1Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							
//							//remove icon
//							if (click(driver, ip.removeButtonInRelatedAssociations(projectName,Smoke_TaskINS1Name), "remove button", action.BOOLEAN)) {
//								log(LogStatus.SKIP,"clicked on remove icon",YesNo.No);
//
//							}
//							else {
//								log(LogStatus.ERROR, "remove Button is not clickable", YesNo.Yes);
//								sa.assertTrue(false, "remove Button is not clickable");
//							}
//							flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.Object1Tab, Smoke_TaskINS3Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							ThreadSleep(3000);
//							flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.Object3Tab, Smoke_TaskFund1Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+Smoke_TaskFund1Name+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+Smoke_TaskFund1Name+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskFund1Name+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, taskCustomObj1Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+taskCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+taskCustomObj1Name+" For Label "+PageLabel.Related_Associations);
//								log(LogStatus.SKIP,"Not Able to Select "+taskCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//							}
//							
//							if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), "Subject",20), Smoke_Task2Subject, "Subject", action.SCROLLANDBOOLEAN)) {
//								if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), todaysDate, "due date", action.SCROLLANDBOOLEAN)) {
//									if (sendKeys(driver, ip.getcommentsTextBox(projectName, 10), Smoke_Task2Comment, "comments", action.SCROLLANDBOOLEAN)) {
//										if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//											log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//										}
//										else {
//											log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//											sa.assertTrue(false,"save button is not clickable so task not created" );
//										}
//										ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask2", excelLabel.Due_Date);
//									}
//									else {
//										log(LogStatus.ERROR, "comments textbox is not visible so task could not be created", YesNo.Yes);
//										sa.assertTrue(false,"comments textbox is not visible so task could not be created" );
//									}
//								}
//								else {
//									log(LogStatus.ERROR, "duedate textbox is not visible so task could not be created", YesNo.Yes);
//									sa.assertTrue(false,"duedate textbox is not visible so task could not be created" );
//								}
//							}
//							else {
//								log(LogStatus.ERROR, "subject textbox is not visible so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"subject textbox is not visible so task could not be created" );
//							}
//							switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//							click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//						}
//						else {
//							log(LogStatus.ERROR, "not able to click on dropdown of related associations so cannot check objects", YesNo.Yes);
//							sa.assertTrue(false,"not able to click on dropdown of related associations so cannot check objects" );
//						}
//					}
//					else {
//						log(LogStatus.ERROR, "not able to click on new task button", YesNo.Yes);
//						sa.assertTrue(false,"not able to click on new task button" );
//					}
//
//				}
//				else {
//					log(LogStatus.ERROR, "not able to click on related tab activities", YesNo.Yes);
//					sa.assertTrue(false,"not able to click on related tab activities" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not able to click on created institution", YesNo.Yes);
//				sa.assertTrue(false, "not able to click on created institution" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "not able to click on institution tab", YesNo.Yes);
//			sa.assertTrue(false, "not able to click on institution tab" );
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc012_verifyNewTaskMultipleAssociation_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String status1=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask2", excelLabel.Status);
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName);
//		taskstd1.add(Smoke_TaskINS3Name+" +2");
//		taskstd1.add(status1);
//		taskstd1.add(crmUser1FirstName+" "+crmUser1LastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Task.toString());
//		taskstd1.add(Links.View.toString());	
//		//String date=todaysDate+todaysDateSingleMonth+todaysDateSingleDate+todaysDateSingleDateSingleMonth;
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask2", excelLabel.Due_Date);
//		
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS3Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					//WebElement ele=ip.verifyingRelatedTabData(projectName, PageName.Object1Page, RelatedTab.Activities, todaysDate+","+todaysDateSingleMonth, Smoke_Task2Subject, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, "", "", status1, crmUser1FirstName+" "+crmUser1LastName, "", Activity.Task.toString(), Links.View.toString(), action.SCROLLANDBOOLEAN, 10);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2Subject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "inst is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"inst is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "inst/account tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"inst/account tab is not clickable, so could not verify activities task data" );
//		}
//		if (ip.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS2Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 30,ip.getFrame(PageName.ActivitiesOrMeetings, 30));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					//WebElement ele=ip.verifyingRelatedTabData(projectName, PageName.Object1Page, RelatedTab.Activities, todaysDate+","+todaysDateSingleMonth, Smoke_Task2Subject, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, "", "", status1, crmUser1FirstName+" "+crmUser1LastName, "", Activity.Task.toString(), Links.View.toString(), action.SCROLLANDBOOLEAN, 10);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2Subject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "inst is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"inst is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "inst/account tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"inst/account tab is not clickable, so could not verify activities task data" );
//		}
//
//		if (ip.clickOnTab(projectName, TabName.Object3Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_TaskFund1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object3Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					//WebElement ele=ip.verifyingRelatedTabData(projectName, PageName.Object3Page, RelatedTab.Activities, todaysDate+","+todaysDateSingleMonth, Smoke_Task2Subject, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, "", "", status1, crmUser1FirstName+" "+crmUser1LastName, "", Activity.Task.toString(),Links.View.toString(), action.SCROLLANDBOOLEAN, 10);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2Subject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "fund/deal is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"fund/deal is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "fund/deal tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"fund/deal tab is not clickable, so could not verify activities task data" );
//		}
//		if (ip.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					//WebElement ele=ip.verifyingRelatedTabData(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, todaysDate+","+todaysDateSingleMonth, Smoke_Task2Subject, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, "", "", status1,crmUser1FirstName+" "+crmUser1LastName, "", Activity.Task.toString(),Links.View.toString(), action.SCROLLANDBOOLEAN, 10);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2Subject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "created custom record is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"created custom record is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "custom tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"custom tab is not clickable, so could not verify activities task data" );
//		}
//		if (ip.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					//WebElement ele=ip.verifyingRelatedTabData(projectName, PageName.Object2Page, RelatedTab.Activities, todaysDate+","+todaysDateSingleMonth, Smoke_Task2Subject, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, "", "", status1, crmUser1FirstName+" "+crmUser1LastName, "", Activity.Task.toString(), Links.View.toString(), action.SCROLLANDBOOLEAN, 10);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2Subject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "inst is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"inst is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "inst/account tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"inst/account tab is not clickable, so could not verify activities task data" );
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc013_VerifyLinksAvailableInActivitiesTab(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String comment=Smoke_Task2Comment;
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask2", excelLabel.Due_Date);
//		
//		WebElement ele ;
//		String parentID=null;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//
//					String[] links = {Smoke_Task2Subject,contactName,Smoke_TaskINS3Name,crmUser1FirstName+" "+crmUser1LastName,"2","2",Links.View.toString(),Links.View.toString()};
//					int i=0;
//					for (String link : links) {
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, link, action.BOOLEAN, 10);
//						if (ele!=null) {
//							log(LogStatus.INFO,link+" link present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);	
//
//							if (click(driver, ele, link, action.BOOLEAN)) {
//								if (i<=3) {
//									log(LogStatus.INFO,"Clicked on : "+link,YesNo.No);
//									parentID = switchOnWindow(driver);
//									if (parentID!=null) {
//										log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+link,YesNo.Yes);
//										ThreadSleep(1000);
//
//										ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, link, action.BOOLEAN, 10);
//										if (ele!=null) {
//											log(LogStatus.INFO,"Landing Page Verified for : "+link,YesNo.No);	
//										} else {
//											sa.assertTrue(false,"Landing Page Not Verified for : "+link);
//											log(LogStatus.SKIP,"Landing Page Not Verified for : "+link,YesNo.Yes);
//										}
//										if (link.equals(Smoke_Task2Subject)) {
//											
//											String related = Smoke_TaskINS3Name+", "+Smoke_TaskFund1Name+", "+taskCustomObj1Name;
//											String relatedAssoctaion=tp.Comment(projectName, PageLabel.Related_Associations, related);
//											String comment1 = relatedAssoctaion+"\n"+TaskPagePageErrorMessage.Dots+"\n"+comment;
//
//											String[][] fieldsWithValues= {{PageLabel.Assigned_To.toString(),crmUser1FirstName+" "+crmUser1LastName},
//													{PageLabel.Status.toString(),Status.Not_Started.toString()},
//													{PageLabel.Subject.toString(),Smoke_Task2Subject},
//													{PageLabel.Name.toString(), Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName},
//													{PageLabel.Due_Date.toString(),date},
//													{PageLabel.Related_To.toString(),""},
//													{PageLabel.Meeting_Type.toString(),""},
//													{PageLabel.Related_Associations.toString(),related},
//													{PageLabel.Priority.toString(),Smoke_Task2Priority},
//													{PageLabel.Comments.toString(),comment1}};
//
//											ThreadSleep(10000);
//											if (tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.SCROLLANDBOOLEAN, 5)) {
//												log(LogStatus.INFO, "successfully verified all labels on task page", YesNo.No);
//											}
//											else {
//												log(LogStatus.ERROR, "could not verif all labels on task page", YesNo.Yes);
//												sa.assertTrue(false,"could not verif all labels on task page");
//											}
//											
//											if (tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Related_Contacts.toString(), action.SCROLLANDBOOLEAN, 2)==null) {
//												log(LogStatus.INFO, PageLabel.Related_Contacts+" is not Present", YesNo.No);
//											}
//											else {
//												log(LogStatus.ERROR, PageLabel.Related_Contacts+" Should not Present", YesNo.Yes);
//												sa.assertTrue(false,PageLabel.Related_Contacts+" Should not Present");
//											}
//											
//										}
//										driver.close();
//										driver.switchTo().window(parentID);
//
//									} else {
//										sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+link);
//										log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+link,YesNo.Yes);
//									}
//								}else if(i==4) {
//									List<String> s=null;
//									s=compareMultipleList(driver, Smoke_TaskFund1Name+","+taskCustomObj1Name, ip.createdRelatedAssociationsOnWindow(projectName));
//									if (s.isEmpty()) {
//										log(LogStatus.INFO, "Successfully verified related association names on RA window", YesNo.No);
//										if (ip.verifyAllRecordsOnCreatedRelAssoc(projectName, PageName.TaskPage,taskCustomObj1Name+","+Smoke_TaskFund1Name)) {
//											log(LogStatus.INFO,"successfully verified rel assoc window", YesNo.No);
//										}
//										else {
//											log(LogStatus.ERROR,  "could not verify related association window opening links: ", YesNo.Yes);
//											sa.assertTrue(false,  "could not verify related association window opening links: ");
//										}
//									}
//									else {
//										for(String e:s) {
//											log(LogStatus.ERROR,  "could not verify related association: " +e.toString(), YesNo.Yes);
//											sa.assertTrue(false,  "could not verify related association: " +e.toString());
//										}
//									}
//									
//									click(driver, ip.getCrossIconRAorComment(projectName,"RA", 10), "cross icon", action.BOOLEAN);
//								}
//								else if(i==5 || i==7) {
//									String popup="";
//									if (i==5)
//										popup="RA";
//									else popup="Comment";
//									if (click(driver, ip.getOkButtonRAorComment(projectName,popup, 10), "ok icon", action.BOOLEAN)) {
//										log(LogStatus.INFO, "RA or Comment successfully popup closed", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR,  "RA or Comment popup is not closed", YesNo.Yes);
//										sa.assertTrue(false,  "RA or Comment popup is not closed");
//								
//									}
//								}
//								else if(i==6){
//									
//									String s=getText(driver, ip.getcommentsTextOnPopup(projectName, 20), "comments popup text", action.BOOLEAN);
//									if (s.contains(Smoke_Task2Comment)) {
//										log(LogStatus.INFO, "successfully verified "+comment+" present on popup", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR,  "not verified "+comment+" on popup", YesNo.Yes);
//										sa.assertTrue(false,"not verified "+comment+" on popup");
//								
//									}
//									click(driver, ip.getCrossIconRAorComment(projectName,"Comment", 10), "cross icon", action.BOOLEAN);
//								}
//
//
//							} else {
//								sa.assertTrue(false,"Not Able to Click on : "+link);
//								log(LogStatus.SKIP,"Not Able to Click on : "+link,YesNo.Yes);
//							}
//						} else {
//							sa.assertTrue(false,link+" link not present on Sub Tab : "+RelatedTab.Meetings);
//							log(LogStatus.SKIP,link+" link not present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//						}
//						i++;
//					}
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact Not Found : "+contactName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc014_VerifyNewTaskButtonFromContactDetailPageWithBlankNameAndRelatedAssociation(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp= new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		WebElement ele ;
//		String parentID=null,secondWindow=null;
//		String date=tomorrowsDate;
//		
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					if (cp.getButtonLogCallMultiple(projectName, 20)!=null) {
//						log(LogStatus.INFO,"log a call button verified successfully",YesNo.No);
//					}
//					else {
//						sa.assertTrue(false,"log a call button not verified");
//						log(LogStatus.ERROR, "log a call button not verified",YesNo.Yes);
//					}
//					if (cp.getButtonNewTaskMultipleAssociations(projectName, 20)!=null) {
//						log(LogStatus.INFO,"NewTask button verified successfully",YesNo.No);
//					}
//					else {
//						sa.assertTrue(false,"NewTask button not verified");
//						log(LogStatus.ERROR, "NewTask button not verified",YesNo.Yes);
//					}
//					if (clickUsingJavaScript(driver, cp.getButtonNewTaskMultipleAssociations(projectName, 15), "New task Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New task button on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//						ThreadSleep(2000);
//					
//						ele=cp.getmeetingTypeDropdown(projectName, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO, "Meeting Type Label is Present",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Meeting Type Label Should be Present");
//							log(LogStatus.ERROR, "Meeting Type Label Should be Present",YesNo.Yes);
//
//						}
//
//						List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Name.toString(),false,action.SCROLLANDBOOLEAN, 15);
//						if (!eleList.isEmpty() && eleList.size()==1) {
//							log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Name.toString(),YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//
//						ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), false,contactName, action.SCROLLANDBOOLEAN, 15);
//						if (ele!=null) {
//							log(LogStatus.INFO, contactName+" Found For Label "+PageLabel.Name.toString(),YesNo.No);	
//
//							if (clickUsingJavaScript(driver, ele, "Cross Button For "+contactName, action.BOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on Cross Button For "+contactName,YesNo.Yes);
//								ThreadSleep(2000);
//							}
//							else {
//								sa.assertTrue(false,"Not Able to Click on Cross Button For "+contactName);
//								log(LogStatus.SKIP,"Not Able to Click on Cross Button For "+contactName,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,contactName+" not Found For Label "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, contactName+" not Found For Label "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//						eleList = cp.getAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(),true, action.SCROLLANDBOOLEAN, 5);
//						if (eleList.isEmpty()) {
//							log(LogStatus.INFO, "Label field is blank for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Label field sholud be blank for "+PageLabel.Related_Associations.toString());
//							log(LogStatus.ERROR, "Label field sholud be blank for "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//						}
//						boolean flag=false;
//						// New Contact Button For Name Label
//						ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.Object2Page, PageLabel.Name.toString(), action.SCROLLANDBOOLEAN,15);
//						if (clickUsingJavaScript(driver, ele, "Name Text Label", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Enter Value to Name Text Box",YesNo.Yes);	
//							ThreadSleep(1000);
//							ele = cp.getNewButtonElementFromTask(projectName, PageName.Object2Page, PlusNewButton.ContactNewButton, PageLabel.Name.toString(), action.SCROLLANDBOOLEAN, 15);
//							if (clickUsingJavaScript(driver, ele, "New Contact Button for Label : "+PageLabel.Name.toString(), action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on New Contact Button for "+PageLabel.Name.toString(),YesNo.No);	
//								ThreadSleep(1000);
//								parentID = switchOnWindow(driver);
//								if (parentID!=null) {
//									log(LogStatus.INFO,"New window is open Going to verify New Contact PopUP Landing Page ",YesNo.Yes);
//									ThreadSleep(1000);
//									String mailID=	lp.generateRandomEmailId(gmailUserName);
//									ExcelUtils.writeData(testCasesFilePath, mailID, "Contacts", excelLabel.Variable_Name, "AATASKC5",excelLabel.Contact_EmailId);
//
//									if(cp.createContactWithoutNew(projectName, Smoke_TaskContact5FName, Smoke_TaskContact5LName, Smoke_TaskContact5INSName, mailID, Smoke_TaskContact5RecordType, null, null, CreationPage.ContactPage)) {
//										log(LogStatus.INFO, "successfully created new contact "+Smoke_TaskContact5FName+" "+Smoke_TaskContact5LName, YesNo.Yes);
//
//									}
//									else {
//										log(LogStatus.ERROR, "could not create new dummy contact", YesNo.Yes);
//										sa.assertTrue(false, "could not create new dummy contact" );
//									}
//
//									driver.close();
//									driver.switchTo().window(parentID);
//								} else {
//									sa.assertTrue(false,"No new window is open so cannot verify New Contact PopUP Landing Page");
//									log(LogStatus.SKIP,"No new window is open so cannot verify New Contact PopUP Landing Page",YesNo.Yes);
//								}
//							} else {
//								sa.assertTrue(false,"Not Able to Click on New Contact Button for "+PageLabel.Name.toString());
//								log(LogStatus.SKIP,"Not Able to Click on New Contact Button for "+PageLabel.Name.toString(),YesNo.Yes);
//							}
//						}else {
//							sa.assertTrue(false,"Not Able to Enter Value to Name Text Box");
//							log(LogStatus.SKIP,"Not Able to Enter Value to Name Text Box",YesNo.Yes);	
//						}
//						
//						
//						
//						// New Account Button For Related Associations Label 
//						switchToDefaultContent(driver);
//						ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN,15);
//						if (clickUsingJavaScript(driver, ele, "Related Associations Text Label", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Enter Value to Related Associations Text Box",YesNo.Yes);	
//							ThreadSleep(1000);
//							ele = cp.getNewButtonElementFromTask(projectName, PageName.Object2Page, PlusNewButton.EntityOrAccountNewButton, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 15);
//							if (clickUsingJavaScript(driver, ele, "New Entity/Account Button for Label : "+PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on New Entity/Account Button for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//								ThreadSleep(1000);
//								parentID = switchOnWindow(driver);
//								if (parentID!=null) {
//									log(LogStatus.INFO,"New window is open Going to verify New Entity/Account PopUP Landing Page ",YesNo.Yes);
//									ThreadSleep(1000);
//									//click next button if present(record type), if not then check header
//									click(driver, cp.getContinueOrNextButton(projectName, 5), "next button", action.SCROLLANDBOOLEAN);
//									ele = cp.getHeaderTextForPage(projectName, PageName.Object1PagePopup, cp.getNewButtonFromTask(projectName, PlusNewButton.EntityOrAccountNewButton), action.BOOLEAN, 10);
//									if (ele!=null) {
//										log(LogStatus.INFO,"New Entity/Account PopUp is opened",YesNo.No);	
//									} else {
//										sa.assertTrue(false,"New Entity/Account PopUp is not opened");
//										log(LogStatus.SKIP,"New Entity/Account PopUp is not opened",YesNo.Yes);
//									}
//									driver.close();
//									driver.switchTo().window(parentID);
//								} else {
//									sa.assertTrue(false,"No new window is open so cannot verify New Entity/Account PopUP Landing Page");
//									log(LogStatus.SKIP,"No new window is open so cannot verify New Entity/Account PopUP Landing Page",YesNo.Yes);
//								}
//							} else {
//								sa.assertTrue(false,"Not Able to Click on New Entity/Account Button for "+PageLabel.Related_Associations.toString());
//								log(LogStatus.SKIP,"Not Able to Click on New Entity/Account Button for "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//							}
//						}else {
//							sa.assertTrue(false,"Not Able to Enter Value to Related Associations Text Box");
//							log(LogStatus.SKIP,"Not Able to Enter Value to Related Associations Text Box",YesNo.Yes);	
//						}
//						
//
//						// New Test Custom Object Button For Related Associations Label 
//						switchToDefaultContent(driver);
//						if (cp.SelectRelatedAssociationsdropdownButton(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, action.SCROLLANDBOOLEAN, 20)) {
//							log(LogStatus.SKIP,"Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//							ThreadSleep(2000);	
//							
//							ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN,15);
//							if (clickUsingJavaScript(driver, ele, "Related Associations Text Label", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Enter Value to Related Associations Text Box",YesNo.Yes);	
//								ThreadSleep(1000);
//								ele = cp.getNewButtonElementFromTask(projectName, PageName.Object2Page, PlusNewButton.TestCustomObjectNewButton, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 15);
//								if (clickUsingJavaScript(driver, ele, "New Test Object Button for Label : "+PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"Clicked on New Test Object Button for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//									ThreadSleep(1000);
//									parentID = switchOnWindow(driver);
//									if (parentID!=null) {
//										log(LogStatus.INFO,"New window is open Going to verify Test Object  PopUP Landing Page ",YesNo.Yes);
//										ThreadSleep(1000);
//										if (cop.createRecord(projectName, taskCustomObj3RecordType, tabCustomObj, taskCustomObj3Name, true)) {
//											log(LogStatus.INFO,"New record successfully created "+taskCustomObj3Name,YesNo.No);	
//												
//										} else {
//											sa.assertTrue(false,"could not create new record for test custom object");
//											log(LogStatus.SKIP,"could not create new record for test custom object",YesNo.Yes);
//										}
//										/*ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page, cp.getNewButtonFromTask(projectName, PlusNewButton.TestCustomObjectNewButton), action.BOOLEAN, 10);
//										if (ele!=null) {
//											log(LogStatus.INFO,"New Test Object PopUp is opened",YesNo.No);	
//										} else {
//											sa.assertTrue(false,"New Test Object PopUp is not opened");
//											log(LogStatus.SKIP,"New Test Object PopUp is not opened",YesNo.Yes);
//										}*/
//										driver.close();
//										driver.switchTo().window(parentID);
//									} else {
//										sa.assertTrue(false,"No new window is open so cannot verify New Test Object PopUP Landing Page");
//										log(LogStatus.SKIP,"No new window is open so cannot verify New Test Object PopUP Landing Page",YesNo.Yes);
//									}
//								} else {
//									sa.assertTrue(false,"Not Able to Click on New Test Object Button for "+PageLabel.Related_Associations.toString());
//									log(LogStatus.SKIP,"Not Able to Click on New Test Object Button for "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//								}
//							}else {
//								sa.assertTrue(false,"Not Able to Enter Value to Related Associations Text Box");
//								log(LogStatus.SKIP,"Not Able to Enter Value to Related Associations Text Box",YesNo.Yes);	
//							}
//							
//						} else {
//							sa.assertTrue(false,"Not Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//						}
//						
//						
//						//  
//
//						if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_Task3Subject, "Subject", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//							ThreadSleep(1000);
//							if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), tomorrowsDate, PageLabel.Due_Date.toString(), action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO, "Entered value to Due Date Text Box", YesNo.Yes);
//								ThreadSleep(1000);
//								ele=cp.geDropdownOnTaskPopUp(projectName, PageLabel.Priority.toString(), action.SCROLLANDBOOLEAN, 10);
//								if (click(driver, ele, "Drop Down : "+PageLabel.Priority.toString(),action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);	
//									ThreadSleep(2000);
//									
//									if (cp.SelectDropDownValue(projectName, PageName.Object2Page, PageLabel.Priority.toString(), Smoke_Task3Priority, action.SCROLLANDBOOLEAN, 10)) {
//										log(LogStatus.INFO, "Selected : "+Smoke_Task3Priority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);	
//										ThreadSleep(1000);
//										
//									} else {
//										log(LogStatus.ERROR, "Not ABle to Select : "+Smoke_Task3Priority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);
//										sa.assertTrue(false,"Not ABle to Select : "+Smoke_Task3Priority+" For Label : "+PageLabel.Priority.toString() );
//									}
//									
//									if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//										ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask3", excelLabel.Due_Date);
//										log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//										ThreadSleep(2000);
//										ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, Smoke_Task3Subject, action.BOOLEAN, 10);
//										
//												String[][] fieldsWithValues= {{PageLabel.Subject.toString(),Smoke_Task3Subject},
//												{PageLabel.Name.toString(),""},
//												{PageLabel.Due_Date.toString(),date},
//												{PageLabel.Priority.toString(),Smoke_Task3Priority},
//												{PageLabel.Related_Associations.toString(),"Assign Multiple Associations"}};
//										
//										if (clickUsingJavaScript(driver, ele, Smoke_Task3Subject, action.BOOLEAN)) {
//											ThreadSleep(10000);
//											if (tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.SCROLLANDBOOLEAN, 30)) {
//												log(LogStatus.INFO, "successfully verified all labels on task page", YesNo.No);
//											}
//											else {
//												log(LogStatus.ERROR, "could not verif all labels on task page", YesNo.Yes);
//												sa.assertTrue(false,"could not verif all labels on task page");
//											}
//										} else {
//											log(LogStatus.ERROR, "created task not clickable", YesNo.Yes);
//											sa.assertTrue(false,"created task not clickable");
//									
//										}
//									}
//									else {
//										log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//										sa.assertTrue(false,"save button is not clickable so task not created" );
//									}
//									
//								} else {
//									log(LogStatus.ERROR, "Click on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);
//									sa.assertTrue(false,"Click on "+PageLabel.Priority.toString()+" Drop Down" );
//								}
//							}else {
//								log(LogStatus.ERROR, "duedate textbox is not visible so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"duedate textbox is not visible so task could not be created" );
//							}
//						}
//						else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings);
//						log(LogStatus.SKIP,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//					}
//
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact Not Found : "+contactName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc015_VerifyEditTask_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp= new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		boolean flag=false;
//		String parentID=null;
//		String olddate=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask2", excelLabel.Due_Date);
//		String date=tomorrowsDate;
//		
//		String[] taskUIdata= {Smoke_Task2Subject,"--None--",Smoke_TaskINS3Name+","+Smoke_TaskFund1Name+","+taskCustomObj1Name,Smoke_Task2Comment,olddate,Smoke_Task2Priority,Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName,Status.Not_Started.toString()};
//		if (ip.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cop.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj1Name, 10)) {
//				log(LogStatus.INFO,"Clicked on custom : "+taskCustomObj1Name,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					WebElement ele=ip.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, Smoke_Task2Subject, action.SCROLLANDBOOLEAN, 10);
//					if (ele!=null) {
//						if (click(driver, ele, "task page", action.BOOLEAN)) {
//							flag=true;
//						}
//						else {
//							log(LogStatus.ERROR, "could not click on task link",YesNo.Yes);
//							sa.assertTrue(false, "could not click on task link");
//						}
//					}else {
//						log(LogStatus.ERROR, "task link not found",YesNo.Yes);
//						sa.assertTrue(false, "task link not found");
//					}
//					if(flag) {
//						parentID=switchOnWindow(driver);
//						if (parentID!=null) {
//							
//						if (click(driver, tp.getEditButton(projectName, 10), "edit button", action.SCROLLANDBOOLEAN)) {
//							if (ip.verifyUIOfCreateNewTaskWindow(projectName,crmUser1FirstName+" "+crmUser1LastName,taskUIdata,false )) {
//								log(LogStatus.INFO, "successfully verified task ui edit mode", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "could not verify create new task ui", YesNo.Yes);
//								sa.assertTrue(false, "could not verify create new task ui");
//							}
//							if (ip.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(), false, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "clicked on cross icon of contact 3",YesNo.No);	
//
//							} else {
//								sa.assertTrue(false,"could not click on cross icon of contact 3");
//								log(LogStatus.ERROR, "could not click on cross icon of contact 3",YesNo.Yes);
//
//							}
//							if (ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(), TabName.TaskTab, Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "successfully selected contact 4 for name field", YesNo.No);
//							} else {
//								sa.assertTrue(false,"could not select contact 4 for name field");
//								log(LogStatus.ERROR, "could not select contact 4 for name field",YesNo.Yes);
//							}
//							//cross button to ins 3 in RA
//							if (ip.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), false, Smoke_TaskINS3Name, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "clicked on cross icon of ins 3", YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"could not click on cross icon of ins 3");
//								log(LogStatus.ERROR, "could not click on cross icon of ins 3",YesNo.Yes);
//							}
//							//cross button to fund/deal1 in RA
//							if (ip.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), false, Smoke_TaskFund1Name, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "clicked on cross icon of "+Smoke_TaskFund1Name, YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"could not click on cross icon of "+Smoke_TaskFund1Name);
//								log(LogStatus.ERROR, "could not click on cross icon of "+Smoke_TaskFund1Name,YesNo.Yes);
//							}
//							//cross button to test custom obj 1 in RA
//							if (ip.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), false, taskCustomObj1Name, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "clicked on cross icon of "+taskCustomObj1Name, YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"could not click on cross icon of "+taskCustomObj1Name);
//								log(LogStatus.ERROR, "could not click on cross icon of "+taskCustomObj1Name,YesNo.Yes);
//							}
//							//select test custom obj 2 in RA
//							if (ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab,taskCustomObj2Name, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "successfully selected taskCustomObj2Name for Related_Associations field", YesNo.No);
//							} else {
//								sa.assertTrue(false,"could not select taskCustomObj2Name for Related_Associations field");
//								log(LogStatus.ERROR, "could not select taskCustomObj2Name for Related_Associations field",YesNo.Yes);
//							}
//							
//							if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TaskPage, PageLabel.Assigned_To.toString(),false, crmUser1FirstName+" "+crmUser1LastName, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "Clicked on Cross Button against : "+crmUser1LastName+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.No);	
//								
//								ThreadSleep(2000);
//								// Assigned To
//								String owner = AdminUserFirstName+" "+AdminUserLastName;
//								flag=tp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(), TabName.TaskTab, owner, action.BOOLEAN, 10);		
//								if (flag) {
//									log(LogStatus.INFO,"Selected "+owner+" For  Drown Down Value For Label "+PageLabel.Assigned_To,YesNo.No);
//									ThreadSleep(1000);
//								}
//								else {
//									sa.assertTrue(false,"could not select "+owner+" for assigned to field");
//									log(LogStatus.ERROR, "could not select "+owner+" for assigned to field",YesNo.Yes);
//								}
//							}else {
//								sa.assertTrue(false,"could not click cross on "+ crmUser1FirstName+" "+crmUser1LastName+" for assigned to field");
//								log(LogStatus.ERROR, "could not click cross on "+ crmUser1FirstName+" "+crmUser1LastName+" for assigned to field",YesNo.Yes);
//							}
//							if (ip.selectDropDownValueonTaskPopUp(projectName, PageName.TestCustomObjectPage, PageLabel.Priority.toString(),Smoke_Task2UpdatedPriority, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO,"Selected "+Smoke_Task2UpdatedPriority+" For  drop Down Value For Label "+PageLabel.Priority,YesNo.No);
//							}
//							else {
//								sa.assertTrue(false,"could not click on "+ Smoke_Task2UpdatedPriority+" for Priority field");
//								log(LogStatus.ERROR, "could not click on "+ Smoke_Task2UpdatedPriority+" for Priority field",YesNo.Yes);
//							}
//							if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_Task2UpdatedSubject,  PageLabel.Subject.toString(), action.SCROLLANDBOOLEAN)) {
//								if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), tomorrowsDate, "due date", action.SCROLLANDBOOLEAN)) {
//									ExcelUtils.writeData(tomorrowsDate, "Task", excelLabel.Variable_Name, "AATask2", excelLabel.Due_Date);
//										
//									if (click(driver, ip.getCustomTabSaveBtn(projectName, 10),"save", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO, "successfully clicked on save and edited task", YesNo.No);
//										String relatedAssoctaion=tp.Comment(projectName, PageLabel.Related_Associations, taskCustomObj2Name);
//										String comment = relatedAssoctaion+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_Task2Comment;
//										String[][] fieldsWithValues= {{PageLabel.Assigned_To.toString(),AdminUserFirstName+" "+AdminUserLastName},
//												{PageLabel.Subject.toString(),Smoke_Task2UpdatedSubject},
//												{PageLabel.Name.toString(), Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName},
//												{PageLabel.Due_Date.toString(),date},
//												{PageLabel.Priority.toString(),Smoke_Task2UpdatedPriority},
//												{PageLabel.Related_Associations.toString(),taskCustomObj2Name},
//												{PageLabel.Comments.toString(),comment}};
//										
//											ThreadSleep(10000);
//											if (tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.SCROLLANDBOOLEAN, 30)) {
//												log(LogStatus.INFO, "successfully verified all labels on task page", YesNo.No);
//											}
//											else {
//												log(LogStatus.ERROR, "could not verif all labels on task page", YesNo.Yes);
//												sa.assertTrue(false,"could not verif all labels on task page");
//											}
//										
//									}
//									else {
//										sa.assertTrue(false,"could not click cross on save, so cannot edit task");
//										log(LogStatus.ERROR, "could not click cross on save, so cannot edit task",YesNo.Yes);
//									}
//								}else {
//									sa.assertTrue(false,"due date field is visible, so cannot edit task");
//									log(LogStatus.ERROR, "due date field is visible, so cannot edit task",YesNo.Yes);
//								}
//							}
//							else {
//								sa.assertTrue(false,"subject field is visible, so cannot edit task");
//								log(LogStatus.ERROR, "subject field is visible, so cannot edit task",YesNo.Yes);
//							}
//						}else {
//							sa.assertTrue(false,"could not click edit button, so cannot edit task");
//							log(LogStatus.ERROR, "could not click edit button, so cannot edit task",YesNo.Yes);
//						}
//						driver.close();
//						driver.switchTo().window(parentID);
//						}
//						else {
//							sa.assertTrue(false,"could not switch to new window, so cannot edit task");
//							log(LogStatus.ERROR, "could not switch to new window, so cannot edit task",YesNo.Yes);
//						}
//					}
//					else {
//						sa.assertTrue(false,"task link on custom object page not clickable, so cannot edit task");
//						log(LogStatus.ERROR, "task link on custom object page not clickable, so cannot edit task",YesNo.Yes);
//					}
//				}else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}else {
//				log(LogStatus.ERROR, "could not find new custom object record on custom tab",YesNo.Yes);
//				sa.assertTrue(false, "could not find new custom object record on customtab");
//			}
//		}else {
//			log(LogStatus.ERROR, "custom object tab is not clickable",YesNo.Yes);
//			sa.assertTrue(false, "custom object tab is not clickable");
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc015_VerifyEditTask_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp= new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		if (ip.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS3Name, 10)) {
//				log(LogStatus.INFO,"Clicked on custom : "+Smoke_TaskINS3Name,YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					WebElement ele=ip.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, Smoke_Task2UpdatedSubject, action.SCROLLANDBOOLEAN, 5);
//					if (ele==null) {
//						log(LogStatus.INFO, "successfully verified absence of task",YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task link found, but it should not be present",YesNo.Yes);
//						sa.assertTrue(false, "task link found, but it should not be present");
//					}
//					switchToDefaultContent(driver);
//				}else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}else {
//				log(LogStatus.ERROR, "could not find new "+Smoke_TaskINS3Name+" on Object1Tab tab",YesNo.Yes);
//				sa.assertTrue(false, "could not find new "+Smoke_TaskINS3Name+" on Object1Tab tab");
//			}
//		}else {
//			log(LogStatus.ERROR,"Object1Tab tab is not clickable",YesNo.Yes);
//			sa.assertTrue(false,"Object1Tab tab is not clickable");
//		}
//
//		if (ip.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 10)) {
//				log(LogStatus.INFO,"Clicked on custom : "+Smoke_TaskINS1Name,YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					WebElement ele=ip.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, Smoke_Task2UpdatedSubject, action.SCROLLANDBOOLEAN, 5);
//					if (ele==null) {
//						log(LogStatus.INFO, "successfully verified absence of task",YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task link found, but it should not be present",YesNo.Yes);
//						sa.assertTrue(false, "task link found, but it should not be present");
//					}
//					switchToDefaultContent(driver);
//				}else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}else {
//				log(LogStatus.ERROR, "could not find new "+Smoke_TaskINS1Name+" on Object1Tab tab",YesNo.Yes);
//				sa.assertTrue(false, "could not find new "+Smoke_TaskINS1Name+" on Object1Tab tab");
//			}
//		}
//		else {
//			log(LogStatus.ERROR,"Object1Tab tab is not clickable",YesNo.Yes);
//			sa.assertTrue(false,"Object1Tab tab is not clickable");
//		}
//		if (ip.clickOnTab(projectName, TabName.Object3Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object3Tab,YesNo.No);
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_TaskFund1Name, 10)) {
//				log(LogStatus.INFO,"Clicked on custom : "+Smoke_TaskFund1Name,YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object3Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					WebElement ele=ip.getAllLinksOnSubTab(projectName, PageName.Object3Page, RelatedTab.Activities, Smoke_Task2UpdatedSubject, action.SCROLLANDBOOLEAN, 5);
//					if (ele==null) {
//						log(LogStatus.INFO, "successfully verified absence of task",YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task link found, but it should not be present",YesNo.Yes);
//						sa.assertTrue(false, "task link found, but it should not be present");
//					}
//					switchToDefaultContent(driver);
//				}else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}else {
//				log(LogStatus.ERROR, "could not find new "+Smoke_TaskFund1Name+" on Object1Tab tab",YesNo.Yes);
//				sa.assertTrue(false, "could not find new "+Smoke_TaskFund1Name+" on Object1Tab tab");
//			}
//		}
//		else {
//			log(LogStatus.ERROR,"Object3Tab tab is not clickable",YesNo.Yes);
//			sa.assertTrue(false,"Object3Tab tab is not clickable");
//		}
//		
//		if (ip.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, 10)) {
//				log(LogStatus.INFO,"Clicked on custom : "+Smoke_TaskContact3LName,YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					WebElement ele=ip.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_Task2UpdatedSubject, action.SCROLLANDBOOLEAN, 5);
//					if (ele==null) {
//						log(LogStatus.INFO, "successfully verified absence of task",YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task link found, but it should not be present",YesNo.Yes);
//						sa.assertTrue(false, "task link found, but it should not be present");
//					}
//					switchToDefaultContent(driver);
//				}else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}else {
//				log(LogStatus.ERROR, "could not find contact 3 on Object2Tab tab",YesNo.Yes);
//				sa.assertTrue(false, "could not find contact 3 on Object2Tab tab");
//			}
//		}
//		else {
//			log(LogStatus.ERROR,"Object2Tab tab is not clickable",YesNo.Yes);
//			sa.assertTrue(false,"Object2Tab tab is not clickable");
//		}
//		if (ip.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName, 10)) {
//				log(LogStatus.INFO,"Clicked on custom : "+Smoke_TaskContact4LName,YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					WebElement ele=ip.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_Task2UpdatedSubject, action.SCROLLANDBOOLEAN, 5);
//					if (ele!=null) {
//						log(LogStatus.INFO, "successfully verified presence of task",YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task link not found",YesNo.Yes);
//						sa.assertTrue(false, "task link not found");
//					}
//					switchToDefaultContent(driver);
//				}else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}else {
//				log(LogStatus.ERROR, "could not find contact 3 on Object2Tab tab",YesNo.Yes);
//				sa.assertTrue(false, "could not find contact 3 on Object2Tab tab");
//			}
//		}
//		else {
//			log(LogStatus.ERROR,"Object2Tab tab is not clickable",YesNo.Yes);
//			sa.assertTrue(false,"Object2Tab tab is not clickable");
//		}
//		if (ip.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS2Name, 10)) {
//				log(LogStatus.INFO,"Clicked on custom : "+Smoke_TaskContact4LName,YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					WebElement ele=ip.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, Smoke_Task2UpdatedSubject, action.SCROLLANDBOOLEAN, 5);
//					if (ele!=null) {
//						log(LogStatus.INFO, "successfully verified presence of task",YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task link not found",YesNo.Yes);
//						sa.assertTrue(false, "task link not found");
//					}
//					switchToDefaultContent(driver);
//				}else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}else {
//				log(LogStatus.ERROR, "could not find ins 2 on Object1Tab",YesNo.Yes);
//				sa.assertTrue(false, "could not find ins 2 on Object1Tab");
//			}
//		}
//		else {
//			log(LogStatus.ERROR,"Object1Tab is not clickable",YesNo.Yes);
//			sa.assertTrue(false,"Object1Tab is not clickable");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc016_CreateStandardTaskAndVerifyCreatedTaskInActivitiesTab_Action(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop = new CustomObjPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		System.out.println(Smoke_Task2UpdatedSubject);
//		System.out.println(Smoke_Task2UpdatedPriority);
//		WebElement ele ;
//		String date=todaysDate;
//				
//
//		if (cp.clickOnTab(projectName, TabName.TaskTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TaskTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnShowMoreActionDownArrow(projectName, PageName.TaskPage, ShowMoreActionDropDownList.New_Task, 15)) {
//				log(LogStatus.INFO,"Clicked on New Task Button for show more action",YesNo.No);
//				ThreadSleep(1000);
//
//				ele = cp.getHeaderTextForPage(projectName, PageName.NewTaskPopUP,PageLabel.New_Task.toString(), action.BOOLEAN, 10);
//				if (ele!=null) {
//					log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//				} else {
//					sa.assertTrue(false,"New Task PopUp is not opened");
//					log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//				}
//
//				ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN,5);
//
//				if (ele==null) {
//					log(LogStatus.INFO,"Related Association Field is not present",YesNo.No);	
//				} else {
//					sa.assertTrue(false,"Related Association Field should not be present");
//					log(LogStatus.SKIP,"Related Association Field should not be present",YesNo.Yes);
//				}
//
//				// subject
//				if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.TaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_TaskSTD1Subject, "Subject", action.SCROLLANDBOOLEAN)) {
//					log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//					ThreadSleep(1000);
//
//					// Due Date
//					if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), todaysDate, PageLabel.Due_Date.toString(), action.SCROLLANDBOOLEAN)) {
//						log(LogStatus.INFO, "Entered value to Due Date Text Box", YesNo.Yes);
//						ThreadSleep(1000);
//
//
//						// comment 
//						if (sendKeys(driver, ip.getcommentsTextBox(projectName, 10), Smoke_TaskSTD1Comment, "comments", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.ERROR, "entered value in Comment Text Area", YesNo.Yes);	
//						}
//						else {
//							log(LogStatus.ERROR, "comments textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"comments textbox is not visible so task could not be created" );
//						}
//
//
//
//						// Name
//						ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TaskPage, PageLabel.Name.toString(), action.SCROLLANDBOOLEAN,15);
//						if (sendKeys(driver, ele, contactName,"Name Text Label", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Enter Value to Name Text Box : "+contactName,YesNo.Yes);	
//							ThreadSleep(1000);
//							ele =  cp.getContactNameOrRelatedAssociationNameOnTask(projectName, PageName.TaskPage, PageLabel.Name.toString(),contactName, action.SCROLLANDBOOLEAN,15);
//							if (click(driver, ele, "Select Name From Label : "+PageLabel.Name, action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on : "+contactName,YesNo.Yes);
//							} else {
//								sa.assertTrue(false,"Not Able to Click on : "+contactName);
//								log(LogStatus.SKIP,"Not Able to Click on : "+contactName,YesNo.Yes);	
//							}
//
//						}else {
//							sa.assertTrue(false,"Not Able to Enter Value to Name Text Box : "+contactName);
//							log(LogStatus.SKIP,"Not Able to Enter Value to Name Text Box : "+contactName,YesNo.Yes);	
//						}
//
//
//
//						// Related To
//						click(driver, ip.getrelatedAssociationsdropdownButton(projectName, PageName.TaskPage,PageLabel.Related_To.toString()
//								, action.SCROLLANDBOOLEAN, 10),"dropdown button", action.SCROLLANDBOOLEAN);
//						if (cp.SelectRelatedAssociationsdropdownButton(projectName, PageName.TaskPage, PageLabel.Related_To.toString(), TabName.TestCustomObjectTab, action.SCROLLANDBOOLEAN, 20)) {
//							log(LogStatus.INFO,"Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//							ThreadSleep(2000);	
//
//							ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TaskPage, PageLabel.Related_To.toString(), action.SCROLLANDBOOLEAN,15);
//							if (sendKeys(driver, ele,taskCustomObj1Name, "Related To Text Label", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Enter Value to Related To Text Box : "+taskCustomObj1Name,YesNo.Yes);	
//								ThreadSleep(1000);
//
//								ele =  cp.getContactNameOrRelatedAssociationNameOnTask(projectName, PageName.TaskPage, PageLabel.Related_To.toString(),taskCustomObj1Name, action.SCROLLANDBOOLEAN,15);
//								if (click(driver, ele, "Select TestCustomObject From Label : "+PageLabel.Related_To, action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"Clicked on : "+taskCustomObj1Name,YesNo.Yes);
//								} else {
//									sa.assertTrue(false,"Not Able to Click on : "+taskCustomObj1Name);
//									log(LogStatus.SKIP,"Not Able to Click on : "+taskCustomObj1Name,YesNo.Yes);	
//								}
//
//
//							}else {
//								sa.assertTrue(false,"Not Able to Enter Value to Related To Text Box : "+meetingCustomObj1Name);
//								log(LogStatus.SKIP,"Not Able to Enter Value to Related To Text Box : "+meetingCustomObj1Name,YesNo.Yes);	
//							}
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//						}
//
//						if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"successfully created task : "+Smoke_TaskSTD1Subject,  YesNo.Yes);
//							ThreadSleep(1000);
//							ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask9", excelLabel.Due_Date);
//							refresh(driver);
//							ThreadSleep(5000);
//							
//								log(LogStatus.INFO, "Clicked on Refesh Button", YesNo.No);	
//								ThreadSleep(1000);
//								ele=tp.getTaskNameLinkInSideMMenu(projectName, Smoke_TaskSTD1Subject, 15);
//								
//								if (click(driver, ele, Smoke_TaskSTD1Subject, action.BOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on "+Smoke_TaskSTD1Subject+" on SideMenu", YesNo.No);	
//									ThreadSleep(1000);
//									
//									String[][] fieldsWithValues= {{PageLabel.Subject.toString(),Smoke_TaskSTD1Subject},
//											{PageLabel.Due_Date.toString(),date},
//											{PageLabel.Related_To.toString(),taskCustomObj1Name},
//											{PageLabel.Comments.toString(),Smoke_TaskSTD1Comment},
//											{PageLabel.Name.toString(),contactName},
//											{PageLabel.Related_Associations.toString(),"Assign Multiple Associations"}};
//									
//									if (tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10)) {
//										log(LogStatus.INFO, "successfully verified "+Smoke_TaskSTD1Subject+" on task page", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "Not Able to verify "+Smoke_TaskSTD1Subject+" on task page", YesNo.Yes);
//										sa.assertTrue(false,"Not Able to verify "+Smoke_TaskSTD1Subject+" on task page");
//									}
//								} else {
//									log(LogStatus.ERROR, "Not Able to Click on "+Smoke_TaskSTD1Subject+" on SideMenu", YesNo.Yes);
//									sa.assertTrue(false,"Not Able to Click on "+Smoke_TaskSTD1Subject+" on SideMenu");
//								}
//								
//							
//							
//						}
//						else {
//							log(LogStatus.ERROR, "save button is not clickable so task not created : "+Smoke_TaskSTD1Subject, YesNo.Yes);
//							sa.assertTrue(false,"save button is not clickable so task not created : "+Smoke_TaskSTD1Subject );
//						}
//
//					}else {
//						log(LogStatus.ERROR, "duedate textbox is not visible so task could not be created", YesNo.Yes);
//						sa.assertTrue(false,"duedate textbox is not visible so task could not be created" );
//					}
//				}
//				else {
//					log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//					sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on New Task Button for show more action");
//				log(LogStatus.SKIP,"Not Able to Click on New Task Button for show more action",YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TaskTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TaskTab,YesNo.Yes);
//		}
//		
//		
//		
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc016_CreateStandardTaskAndVerifyCreatedTaskInActivitiesTab_Impact(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop = new CustomObjPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String status="Not Started",parentID=null,contactName=Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contactName);
//		taskstd1.add(taskCustomObj1Name);
//		taskstd1.add(status);
//		taskstd1.add(crmUser1FirstName+" "+crmUser1LastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Task.toString());
//		taskstd1.add(Links.View.toString());	
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask9", excelLabel.Due_Date);
//		
//		if (lp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					ip.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, Smoke_TaskSTD1DueDate, Smoke_TaskSTD1Subject, taskstd1, action.BOOLEAN, 10);
//					WebElement ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Meetings, Smoke_TaskSTD1Subject, action.BOOLEAN, 10);
//					if (click(driver, ele, "subject", action.BOOLEAN)) {
//						parentID=switchOnWindow(driver);
//						if (parentID!=null) {
//							
//							String[][] fieldsWithValues= {{PageLabel.Subject.toString(),Smoke_TaskSTD1Subject},
//									{PageLabel.Due_Date.toString(),date},
//									{PageLabel.Related_To.toString(),taskCustomObj1Name},
//									{PageLabel.Comments.toString(),Smoke_TaskSTD1Comment},
//									{PageLabel.Name.toString(),contactName},
//									{PageLabel.Related_Associations.toString(),"Assign Multiple Associations"}};
//							
//							if (tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10)) {
//								log(LogStatus.INFO, "successfully verified "+Smoke_TaskSTD1Subject+" on task page", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "Not Able to verify "+Smoke_TaskSTD1Subject+" on task page", YesNo.Yes);
//								sa.assertTrue(false,"Not Able to verify "+Smoke_TaskSTD1Subject+" on task page");
//							}
//							driver.close();
//							driver.switchTo().window(parentID);
//						}
//						else {
//							log(LogStatus.ERROR, "new window not opened after clicking on task subject "+Smoke_TaskSTD1Subject,YesNo.Yes);
//							sa.assertTrue(false, "new window not opened after clicking on task subject "+Smoke_TaskSTD1Subject);
//						
//						}
//					}
//					else {
//						log(LogStatus.ERROR, "subject"+Smoke_TaskSTD1Subject+" is not clickable",YesNo.Yes);
//						sa.assertTrue(false, "subject"+Smoke_TaskSTD1Subject+" is not clickable");
//					
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not found "+taskCustomObj1Name,YesNo.Yes);
//				sa.assertTrue(false,"not found "+taskCustomObj1Name);
//			}
//		}else {
//			log(LogStatus.ERROR, "TestCustomObjectTab tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "TestCustomObjectTab tab not clickable");
//		}
//		if (lp.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_TaskSTD1DueDate, Smoke_TaskSTD1Subject, taskstd1, action.BOOLEAN, 10);
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not found "+Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName,YesNo.Yes);
//				sa.assertTrue(false,"not found "+Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName);
//			}
//		}else {
//			log(LogStatus.ERROR, "Object2Tab tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "Object2Tab tab not clickable");
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc017_VerifyAssignMultipleAssociationsLinkForStandardTAsk_Action(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		WebElement ele ;
//		String parentID=driver.getWindowHandle();
//		String firstChildWin=null;
//		String secondChildWin=null;
//		String actualValue;
//		boolean flag=false;
//
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 60), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Meetings, Smoke_TaskSTD1Subject, action.BOOLEAN, 10);
//					if (ele!=null) {
//						log(LogStatus.INFO,Smoke_TaskSTD1Subject+" link present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);	
//
//						if (click(driver, ele, Smoke_TaskSTD1Subject, action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on : "+Smoke_TaskSTD1Subject,YesNo.No);
//							parentID = switchOnWindow(driver);
//							if (parentID!=null) {
//								log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+Smoke_TaskSTD1Subject,YesNo.Yes);
//								ThreadSleep(1000);
//								ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, Smoke_TaskSTD1Subject, action.BOOLEAN, 10);
//								if (ele!=null) {
//									log(LogStatus.INFO,"Landing Page Verified for : "+Smoke_TaskSTD1Subject,YesNo.No);	
//								} else {
//									sa.assertTrue(false,"Landing Page Not Verified for : "+Smoke_TaskSTD1Subject);
//									log(LogStatus.SKIP,"Landing Page Not Verified for : "+Smoke_TaskSTD1Subject,YesNo.Yes);
//								}
//								for (int k = 0; k < 3; k++) {
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 60, tp.getTaskPageFrame(projectName,60));
//
//									ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, TaskPagePageErrorMessage.RelatedAssociationText, action.BOOLEAN, 10);
//									if (click(driver, ele, TaskPagePageErrorMessage.RelatedAssociationText, action.BOOLEAN)) {
//										log(LogStatus.INFO,"Clicked on Link :  "+TaskPagePageErrorMessage.RelatedAssociationText,YesNo.No);	
//
//
//										firstChildWin = driver.getWindowHandle();
//										System.err.println("First Child Window ID: " + firstChildWin);
//
//										Set<String> allWindows = driver.getWindowHandles();
//										int i = 0;
//										for (String string : allWindows) {
//											System.err.println("IDs " + (++i) + ": " + string);
//										}
//										Iterator<String> i1 = allWindows.iterator();
//
//										while (i1.hasNext()) {
//											secondChildWin = i1.next();
//											if (!secondChildWin.equalsIgnoreCase(firstChildWin) && !secondChildWin.equalsIgnoreCase(parentID)) {
//												driver.switchTo().window(secondChildWin);
//												log(LogStatus.INFO,"Switch To Edit Task Window",YesNo.No);	
//												ThreadSleep(2000);
//
//												ele = tp.getTaskPoUpEditHeader(projectName, 10);
//												if (ele!=null) {
//													log(LogStatus.INFO,"Edit Header Ele Found",YesNo.No);	
//													actualValue=ele.getText().trim();
//
//													actualValue = ele.getText().trim();
//													String expectedValue=PageLabel.Edit.toString()+" "+Smoke_TaskSTD1Subject;
//													if (actualValue.contains(PageLabel.Edit.toString()) && actualValue.contains(Smoke_TaskSTD1Subject)) {
//														log(LogStatus.INFO,expectedValue+" matched msg for Edit PopUp", YesNo.No);
//
//													} else {
//														log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched msg for Edit PopUp", YesNo.Yes);
//														BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched msg for Edit PopUp");
//													}
//
//												} else {
//													sa.assertTrue(false,"Edit Header Ele Not Found");
//													log(LogStatus.SKIP,"Edit Header Ele Not Found",YesNo.Yes);
//												}
//
//
//												if (k==0) {
//													ele=tp.getcrossIcon(projectName, 5);
//												} else if(k==1) {
//													ele=tp.getCancelButton(projectName, 5);
//												}
//
//												if (k==0 || k==1) {
//													if (clickUsingJavaScript(driver, ele, "Cross/Cancel Button",action.BOOLEAN)) {
//														log(LogStatus.INFO,"Clicked on Cross/Cancel Button",YesNo.No);	
//														flag=true;
//													} else {
//														sa.assertTrue(false,"Not Able to Click on Cross/Cancel Button");
//														log(LogStatus.SKIP,"Not Able to Click on Cross/Cancel Button",YesNo.Yes);
//													}	
//
//													if (flag) {
//														log(LogStatus.INFO,"No Error",YesNo.No);
//													} else {
//														sa.assertTrue(false,"Some Error");
//														log(LogStatus.SKIP,"Some Error",YesNo.Yes);
//													}
//													flag=false;
//													try {
//														driver.switchTo().window(firstChildWin);
//													} catch (Exception e) {
//														// TODO Auto-generated catch block
//														e.printStackTrace();
//													}
//
//												}
//
//												if(k==2){
//
//
//													flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object1Tab, Smoke_TaskINS5Name, action.SCROLLANDBOOLEAN, 10);		
//													if (flag) {
//														log(LogStatus.SKIP,"Selected "+Smoke_TaskINS5Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object1Tab)+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//													} else {
//														sa.assertTrue(false,"Not Able to Select "+Smoke_TaskINS5Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.Object1Tab)+" For Label "+PageLabel.Related_Associations);
//														log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskINS5Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object1Tab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//													}
//
//													flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object3Tab, Smoke_TaskFund2Name, action.SCROLLANDBOOLEAN, 10);		
//													if (flag) {
//														log(LogStatus.SKIP,"Selected "+Smoke_MTFund1Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object3Tab)+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//													} else {
//														sa.assertTrue(false,"Not Able to Select "+Smoke_MTFund1Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.Object3Tab)+" For Label "+PageLabel.Related_Associations);
//														log(LogStatus.SKIP,"Not Able to Select "+Smoke_MTFund1Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object3Tab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//													}
//
//													flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, taskCustomObj2Name, action.SCROLLANDBOOLEAN, 10);		
//													if (flag) {
//														log(LogStatus.SKIP,"Selected "+meetingCustomObj2Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//													} else {
//														sa.assertTrue(false,"Not Able to Select "+meetingCustomObj2Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations);
//														log(LogStatus.SKIP,"Not Able to Select "+meetingCustomObj2Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//													}
//
//													// Subject
//
//													if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.TaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_TaskSTD1UpdatedSubject, "Subject", action.SCROLLANDBOOLEAN)) {
//														log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//														ThreadSleep(1000);
//
//														//  Priority
//
//														ele=cp.getDropdownOnTaskPopUp(projectName, PageName.Object2Page,PageLabel.Priority.toString(), action.SCROLLANDBOOLEAN, 10);
//														if (click(driver, ele, "Drop Down : "+PageLabel.Priority.toString(),action.SCROLLANDBOOLEAN)) {
//															log(LogStatus.ERROR, "Select/Click on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);	
//															ThreadSleep(2000);
//
//															if (cp.SelectDropDownValue(projectName, PageName.Object2Page, PageLabel.Priority.toString(), Smoke_TaskSTD1UpdatedPriority, action.SCROLLANDBOOLEAN, 10)) {
//																log(LogStatus.ERROR, "Selected : "+Smoke_TaskSTD1UpdatedPriority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);	
//																ThreadSleep(1000);
//
//															} else {
//																log(LogStatus.ERROR, "Not ABle to Select : "+Smoke_TaskSTD1UpdatedPriority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);
//																sa.assertTrue(false,"Not ABle to Select : "+Smoke_TaskSTD1UpdatedPriority+" For Label : "+PageLabel.Priority.toString() );
//															}
//
//														} else {
//															log(LogStatus.ERROR, "Click on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);
//															sa.assertTrue(false,"Click on "+PageLabel.Priority.toString()+" Drop Down" );
//														}
//
//														// comment 
//
//														if (sendKeys(driver, ip.getcommentsTextBox(projectName, 10), Smoke_TaskSTD1UpdatedComment, "comments", action.SCROLLANDBOOLEAN)) {
//															log(LogStatus.ERROR, "entered value in Comment Text Area", YesNo.Yes);	
//														}
//														else {
//															log(LogStatus.ERROR, "comments textbox is not visible so task could not be created", YesNo.Yes);
//															sa.assertTrue(false,"comments textbox is not visible so task could not be created" );
//														}
//														if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 10), todaysDate, "date", action.SCROLLANDBOOLEAN)) {
//															ExcelUtils.writeData(todaysDate, "Task", excelLabel.Variable_Name, "AATask9", excelLabel.Due_Date);
//															log(LogStatus.ERROR, "entered date in due date Text Area", YesNo.Yes);	
//																
//														}else {
//															log(LogStatus.ERROR, "date textbox is not visible so task could not be created", YesNo.Yes);
//															sa.assertTrue(false,"date textbox is not visible so task could not be created" );
//														}
//														System.err.println(">>>>>>>>>>>>>>>>>>>>>>Save Button<<<<<<<<<<<<<<<<<<<<<<<<<");
//														if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//															log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//															flag=true;
//															ThreadSleep(2000);
//															
//															String[][] fieldsWithValues= {{PageLabel.Subject.toString(),Smoke_TaskSTD1UpdatedSubject},
//																	{PageLabel.Priority.toString(),Smoke_TaskSTD1UpdatedPriority}};
//
//															tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);
//
//															// Related Association
//															ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), action.BOOLEAN, 10);
//															if (ele!=null) {
//																actualValue = ele.getText().trim();
//																log(LogStatus.INFO,"Actual Value For Related Association Link : "+actualValue, YesNo.No);
//																String expectedValue=Smoke_TaskINS5Name+", "+Smoke_TaskFund2Name+", "+taskCustomObj2Name;
//																if (actualValue.equals(expectedValue)) {
//																	log(LogStatus.INFO,expectedValue+" matched FOR Related Association Label", YesNo.No);
//
//																} else {
//																	log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Related Association Label", YesNo.Yes);
//																	BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Related Association LABEL");
//																}
//
//																// Comment
//																ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Comments.toString(), action.BOOLEAN, 10);
//																if (ele!=null) {
//																	actualValue = ele.getText().trim();
//																	log(LogStatus.INFO,"Actual Value For Comment : "+actualValue, YesNo.No);
//																	String[] commentValue = {expectedValue,TaskPagePageErrorMessage.Dots,Smoke_TaskSTD1UpdatedComment};
//																	for (String comment : commentValue) {
//																		if (actualValue.contains(comment)) {
//																			log(LogStatus.INFO,comment+" matched for Comment Label", YesNo.No);
//
//																		} else {
//																			log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched for Comment Label", YesNo.Yes);
//																			BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched for Comment Label");
//																		}
//																	}
//																} else {
//																	sa.assertTrue(false,"Comment Label Ele not Found");
//																	log(LogStatus.SKIP,"Comment Label Ele not Found",YesNo.Yes);
//																}
//
//															} else {
//																sa.assertTrue(false,"Comment Label Ele not Found");
//																log(LogStatus.SKIP,"Comment Label Ele not Found",YesNo.Yes);
//
//															}
//															System.err.println(">>>>>>>>>>>>>>>>>>>>>>Save222222222222222 Button<<<<<<<<<<<<<<<<<<<<<<<<<");
//															// 	
//														}
//
//														else {
//															log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//															sa.assertTrue(false,"save button is not clickable so task not created" );
//														}
//
//
//
//													}
//													else {
//														log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//														sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//													}
//
//
//												}
//
//											}
//
//										}
//
//									} else {
//										sa.assertTrue(false,"Not Able to Click on Link :  "+TaskPagePageErrorMessage.RelatedAssociationText);
//										log(LogStatus.SKIP,"Not Able to Click on Link :  "+TaskPagePageErrorMessage.RelatedAssociationText,YesNo.Yes);
//									}
//
//
//								}
//
//							} else {
//								sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+Smoke_TaskSTD1Subject);
//								log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+Smoke_TaskSTD1Subject,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on : "+Smoke_TaskSTD1Subject);
//							log(LogStatus.SKIP,"Not Able to Click on : "+Smoke_TaskSTD1Subject,YesNo.Yes);
//						}
//					} else {
//						sa.assertTrue(false,Smoke_TaskSTD1Subject+" link not present on Sub Tab : "+RelatedTab.Meetings);
//						log(LogStatus.SKIP,Smoke_TaskSTD1Subject+" link not present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact Not Found : "+contactName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//		Set<String> allWindows=driver.getWindowHandles();
//		for (String s:allWindows) {
//			driver.switchTo().window(s);
//			if (!s.equalsIgnoreCase(parentID))
//				driver.close();
//		}
//		driver.switchTo().window(parentID);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc017_VerifyAssignMultipleAssociationsLinkForStandardTAsk_Impact(String projectName) {
//	LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//	InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//	ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//	TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//	lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//	String contactName = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//	String owner = crmUser1FirstName+" "+crmUser1LastName;
//	List<String> taskstd1=new LinkedList<String>();
//	taskstd1.add(contactName);
//	taskstd1.add(taskCustomObj1Name+" +3");
//	taskstd1.add(Status.Not_Started.toString().replace("_", " "));
//	taskstd1.add(owner);
//	taskstd1.add("");
//	taskstd1.add(Activity.Task.toString());
//	taskstd1.add(Links.View.toString());	
//
//	
//	String date = todaysDate;
//	WebElement ele=null;
//	RelatedTab[] relatabTabs = {RelatedTab.Activities};
//	String[] testCustomObjects = {taskCustomObj1Name,taskCustomObj2Name};
//	for (String testCustomObject : testCustomObjects) {
//		if (cp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, testCustomObject, 20)) {
//				log(LogStatus.INFO,"Clicked on Test Custom Object : "+testCustomObject,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//						ThreadSleep(10000);
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 60, cp.getMeetingFrameOnContactPage(projectName,60));
//						//ele = cp.verifyingRelatedTabData(projectName, PageName.TestCustomObjectPage, relatedTab, date, Smoke_TaskSTD1UpdatedSubject, contactName, taskCustomObj1Name, "3", Status.Not_Started.toString(), owner, Smoke_TaskSTD1MeetingType, Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//						cp.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, "", Smoke_TaskSTD1UpdatedSubject, taskstd1, action.BOOLEAN, 10);
//						/*if (ele!=null) {
//							log(LogStatus.INFO,Smoke_TaskSTD1UpdatedSubject+" data verified on Sub Tab : "+relatedTab,YesNo.No);	
//						}else {
//							sa.assertTrue(false,Smoke_TaskSTD1UpdatedSubject+" data not verified on Sub Tab : "+relatedTab);
//							log(LogStatus.SKIP,Smoke_TaskSTD1UpdatedSubject+" data not verified on Sub Tab : "+relatedTab,YesNo.Yes);	
//						}	*/	
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//					}
//				}
//
//			} else {
//				sa.assertTrue(false,"Test custom object Not Found : "+testCustomObject);
//				log(LogStatus.SKIP,"Test custom object  Not Found : "+testCustomObject,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//	}
//
//	switchToDefaultContent(driver);
//	if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//		log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//		ThreadSleep(1000);
//		if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS5Name, 20)) {
//			log(LogStatus.INFO,"Clicked on Entity/Account : "+Smoke_TaskINS5Name,YesNo.No);
//			ThreadSleep(1000);
//			for (RelatedTab relatedTab : relatabTabs) {
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(10000);
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//					//ele = cp.verifyingRelatedTabData(projectName, PageName.Object1Page, relatedTab, date, Smoke_TaskSTD1UpdatedSubject, contactName, taskCustomObj1Name, "3", Status.Not_Started.toString(), owner, Smoke_TaskSTD1MeetingType, Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//					cp.verifyingRelatedTabData2(projectName, PageName.Object1Page, relatedTab, "", Smoke_TaskSTD1UpdatedSubject, taskstd1, action.BOOLEAN, 10);
//					
//					/*if (ele!=null) {
//						log(LogStatus.INFO,Smoke_TaskSTD1UpdatedSubject+" data verified on Sub Tab : "+relatedTab,YesNo.No);	
//					}else {
//						sa.assertTrue(false,Smoke_TaskSTD1UpdatedSubject+" data not verified on Sub Tab : "+relatedTab);
//						log(LogStatus.SKIP,Smoke_TaskSTD1UpdatedSubject+" data not verified on Sub Tab : "+relatedTab,YesNo.Yes);	
//					}*/		
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//			}
//
//		} else {
//			sa.assertTrue(false,"Entity/Account Not Found : "+Smoke_TaskINS5Name);
//			log(LogStatus.SKIP,"Entity/Account  Not Found : "+Smoke_TaskINS5Name,YesNo.Yes);
//		}
//
//	} else {
//		sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//		log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//	}
//
//	switchToDefaultContent(driver);
//	if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//		log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//		ThreadSleep(1000);
//		if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//			log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//			ThreadSleep(1000);
//			for (RelatedTab relatedTab : relatabTabs) {
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(10000);
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//					//ele = cp.verifyingRelatedTabData(projectName, PageName.Object2Page, relatedTab, date, Smoke_TaskSTD1UpdatedSubject, contactName, taskCustomObj1Name, "3", Status.Not_Started.toString(), owner, Smoke_STDTask1MeetingType, Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//					cp.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, "", Smoke_TaskSTD1UpdatedSubject, taskstd1, action.BOOLEAN, 10);
//					/*
//					if (ele!=null) {
//						log(LogStatus.INFO,Smoke_TaskSTD1UpdatedSubject+" data verified on Sub Tab : "+relatedTab,YesNo.No);	
//					}else {
//						sa.assertTrue(false,Smoke_TaskSTD1UpdatedSubject+" data not verified on Sub Tab : "+relatedTab);
//						log(LogStatus.SKIP,Smoke_TaskSTD1UpdatedSubject+" data not verified on Sub Tab : "+relatedTab,YesNo.Yes);	
//					}	*/	
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//			}
//
//		} else {
//			sa.assertTrue(false,"Contact Not Found : "+contactName);
//			log(LogStatus.SKIP,"Contact  Not Found : "+contactName,YesNo.Yes);
//		}
//
//	} else {
//		sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//		log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//	}
//	switchToDefaultContent(driver);
//	lp.CRMlogout();
//	sa.assertAll();
//}
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc018_VerifyNewTaskAtPackageObjectFundOrDeal(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		boolean flag=false;
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contactName);
//		taskstd1.add(Smoke_TaskFund1Name);
//		taskstd1.add(Status.Not_Started.toString().replace("_", " "));
//		taskstd1.add(owner);
//		taskstd1.add("");
//		taskstd1.add(Activity.Task.toString());
//		taskstd1.add(Links.View.toString());	
//		RelatedTab relatedTab = RelatedTab.Activities;
//
//		if (cp.clickOnTab(projectName, TabName.Object3Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object3Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_TaskFund1Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Fund/Deal : "+Smoke_TaskFund1Name,YesNo.No);
//				ThreadSleep(1000);
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object3Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//
//					if (clickUsingJavaScript(driver, cp.getButtonNewTaskMultipleAssociations(projectName, 60), "New task Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New task button on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//						ThreadSleep(2000);	
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page,PageLabel.New_Task.toString(), action.BOOLEAN, 30);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						ele = cp.getRelatedAssciationDefaultSelectedDropDown(projectName, TabName.Object1Tab, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO, "Default Selected For "+PageLabel.Related_Associations.toString()+" Verified",YesNo.No);	
//
//
//						} else {
//							sa.assertTrue(false,"Default Selected object For "+PageLabel.Related_Associations.toString()+" Not Verified");
//							log(LogStatus.ERROR, "Default Selected object For "+PageLabel.Related_Associations.toString()+" Not Verified",YesNo.Yes);
//
//						}
//
//						List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.Object3Page, PageLabel.Related_Associations.toString(),false, action.SCROLLANDBOOLEAN, 15);
//						if (!eleList.isEmpty() && eleList.size()==1) {
//							log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//							ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(),false, Smoke_TaskFund1Name, action.SCROLLANDBOOLEAN, 15);
//							if (ele!=null) {
//								log(LogStatus.INFO, Smoke_TaskFund1Name+" is prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//
//							} else {
//								sa.assertTrue(false,Smoke_TaskFund1Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString());
//								log(LogStatus.ERROR, Smoke_TaskFund1Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//							}
//
//						} else {
//							sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), TabName.Object2Tab, contactName, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+contactName+" For Label "+PageLabel.Name,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+contactName+" For Label "+PageLabel.Name);
//							log(LogStatus.SKIP,"Not Able to Select "+contactName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//						}
//
//
//						// Subject
//
//						if (sendKeys(driver, cp.getLabelTextBox(projectName, PageName.TaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_BoardMeetingTaskSubject, "Subject", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//							ThreadSleep(1000);
//
//							//  Priority
//
//							appLog.info(">>>>>");
//							// 
//							if (clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//
//
//								ele = cp.getCreatedConfirmationMsg(projectName, 15);
//								if (ele!=null) {
//									String actualValue = ele.getText().trim();
//									String expectedValue=tp.taskCreatesMsg(projectName, Smoke_BoardMeetingTaskSubject);
//									if (actualValue.contains(expectedValue)) {
//										log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//									} else {
//										log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//										BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//									}
//								} else {
//									sa.assertTrue(false,"Created Task Msg Ele not Found");
//									log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//								}
//								appLog.info(">>>>>");
//								// 
//								refresh(driver);
//								click(driver, cp.getRelatedTab(projectName, PageName.Object3Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN);
//								log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//
//
//								switchToDefaultContent(driver);
//								switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//
//								//ele = cp.verifyingRelatedTabData(projectName, PageName.Object3Page, relatedTab, "", Smoke_BoardMeetingTaskSubject, contactName, Smoke_TaskFund1Name, null, Status.Not_Started.toString(), owner, "", Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//								cp.verifyingRelatedTabData2(projectName, PageName.Object3Page, relatedTab, "", Smoke_BoardMeetingTaskSubject, taskstd1, action.BOOLEAN, 15);
//								
//
//							}
//							else {
//								log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//							}
//
//						}else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on New task button on Sub Tab : "+RelatedTab.Meetings);
//						log(LogStatus.SKIP,"Not Able to Click on New task button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Fund/Deal Not Found : "+Smoke_MTFund1Name);
//				log(LogStatus.SKIP,"Fund/Deal  Not Found : "+Smoke_MTFund1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc019_VerifyNewTaskAtCustomObjectPage(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop = new CustomObjPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		boolean flag=false;
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contactName);
//		taskstd1.add(taskCustomObj2Name);
//		taskstd1.add(Status.Not_Started.toString().replace("_", " "));
//		taskstd1.add(AdminUserFirstName+" "+AdminUserLastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Task.toString());
//		taskstd1.add(Links.View.toString());	
//		RelatedTab relatedTab = RelatedTab.Activities;
//
//		if (cp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cop.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj2Name, 10)){
//				log(LogStatus.INFO,"Clicked on custom tab record : "+taskCustomObj2Name,YesNo.No);
//				ThreadSleep(1000);
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//
//					if (clickUsingJavaScript(driver, cp.getButtonNewTaskMultipleAssociations(projectName, 60), "New task Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New task button on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//						ThreadSleep(2000);	
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.TestCustomObjectPage,PageLabel.New_Task.toString(), action.BOOLEAN, 30);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						ele = cp.getRelatedAssciationDefaultSelectedDropDown(projectName, TabName.Object1Tab, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO, "Default Selected For "+PageLabel.Related_Associations.toString()+" Verified",YesNo.No);	
//
//
//						} else {
//							sa.assertTrue(false,"Default Selected object For "+PageLabel.Related_Associations.toString()+" Not Verified");
//							log(LogStatus.ERROR, "Default Selected object For "+PageLabel.Related_Associations.toString()+" Not Verified",YesNo.Yes);
//
//						}
//
//						List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(),false, action.SCROLLANDBOOLEAN, 15);
//						if (!eleList.isEmpty() && eleList.size()==1) {
//							log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//							ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(),false, taskCustomObj2Name, action.SCROLLANDBOOLEAN, 15);
//							if (ele!=null) {
//								log(LogStatus.INFO, taskCustomObj2Name+" is prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//
//							} else {
//								sa.assertTrue(false,taskCustomObj2Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString());
//								log(LogStatus.ERROR, taskCustomObj2Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//							}
//
//						} else {
//							sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//						// Assigned_To Cross Button Click
//						if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(),false, owner, action.SCROLLANDBOOLEAN, 15)) {
//							log(LogStatus.INFO, "Clicked on Cross Button against : "+owner+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.No);	
//							
//							ThreadSleep(2000);
//							// Assigned To
//							owner = AdminUserFirstName+" "+AdminUserLastName;
//							flag=tp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(), TabName.TestCustomObjectTab, owner, action.BOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.INFO,"Selected "+owner+" For  Drown Down Value For Label "+PageLabel.Assigned_To,YesNo.No);
//								ThreadSleep(1000);
//								
//							} else {
//								sa.assertTrue(false,"could not select admin name in "+PageLabel.Assigned_To.toString());
//								log(LogStatus.ERROR, "could not select admin name in "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//
//							}
//						}
//						 else {
//								sa.assertTrue(false,"cross button could not be clicked on "+PageLabel.Assigned_To.toString());
//								log(LogStatus.ERROR, "cross button could not be clicked on "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//
//							}
//						
//						//name
//						
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(), TabName.Object2Tab, contactName, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+contactName+" For Label "+PageLabel.Name,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+contactName+" For Label "+PageLabel.Name);
//							log(LogStatus.SKIP,"Not Able to Select "+contactName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//						}
//
//
//						// Subject
//						ele= cp.getLabelTextBox(projectName, PageName.TaskPage.toString(), PageLabel.Subject.toString(),20);
//						scrollDownThroughWebelement(driver, ele, "subject");
//						if (sendKeys(driver,ele, Smoke_ClientMeetingTaskSubject, PageLabel.Subject.toString(), action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//							ThreadSleep(1000);
//
//							appLog.info(">>>>>");
//							if (clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//
//
//								ele = cp.getCreatedConfirmationMsg(projectName, 15);
//								if (ele!=null) {
//									String actualValue = ele.getText().trim();
//									String expectedValue=tp.taskCreatesMsg(projectName, Smoke_ClientMeetingTaskSubject);
//									if (actualValue.contains(expectedValue)) {
//										log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//									} else {
//										log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//										BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//									}
//								} else {
//									sa.assertTrue(false,"Created Task Msg Ele not Found");
//									log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//								}
//								appLog.info(">>>>>");
//							//	 
//								switchToDefaultContent(driver);
//								if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//									
//									switchToFrame(driver, 10, cop.getFrame(PageName.ActivitiesOrMeetings, 10));
//									log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//									//ele = cp.verifyingRelatedTabData(projectName, PageName.Object3Page, relatedTab, "", Smoke_BoardMeetingTaskSubject, contactName, Smoke_TaskFund1Name, null, Status.Not_Started.toString(), owner, "", Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//								cp.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, "", Smoke_ClientMeetingTaskSubject, taskstd1, action.BOOLEAN, 15);
//								}
//								else {
//									log(LogStatus.ERROR, "related tab activities is not clickable so cannot verify task", YesNo.Yes);
//									sa.assertTrue(false,"related tab activities is not clickable so cannot verify task" );
//										
//								}
//
//							}
//							else {
//								log(LogStatus.ERROR, "save button is not clickable so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"save button is not clickable so task could not be created" );
//							}
//
//						}else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on New task button on Sub Tab : "+RelatedTab.Activities);
//						log(LogStatus.SKIP,"Not Able to Click on New task button on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Fund/Deal Not Found : "+Smoke_TaskFund1Name);
//				log(LogStatus.SKIP,"Fund/Deal  Not Found : "+Smoke_TaskFund1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc020_AddLastTouchPointField(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		SetupPageBusinessLayer setup=new SetupPageBusinessLayer(driver);
//		HomePageBusineesLayer home=new HomePageBusineesLayer(driver);
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		String parentID=null;
//		//lp.switchToClassic();
//		String mode="Lightning";
//		if (home.clickOnSetUpLink()) {
//			parentID=switchOnWindow(driver);
//			if (parentID!=null) {
//			List<String> layoutName = new ArrayList<String>();
//			layoutName.add("Contact Layout");
//			HashMap<String, String> sourceANDDestination = new HashMap<String, String>();
//			sourceANDDestination.put("Last Touch Point", PageLabel.Name.toString());
//			//scn.next();
//			List<String> abc = setup.DragNDrop("", mode, object.Contact, objectFeatureName.pageLayouts, layoutName, sourceANDDestination);
//			ThreadSleep(10000);
//			if (!abc.isEmpty()) {
//				log(LogStatus.FAIL, "field not added/already present 1", YesNo.Yes);
//				sa.assertTrue(false, "field not added/already present 1");
//			}else{
//				log(LogStatus.INFO, "field added/already present 1", YesNo.Yes);
//			}
//			}
//			driver.close();
//			driver.switchTo().window(parentID);
//		}else {
//			log(LogStatus.FAIL, "could not click on setup link", YesNo.Yes);
//			sa.assertTrue(false, "could not click on setup link");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc021_VerifyErrorMessagesInLogACall(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		String statusValue="--None--",priorityValue="--None--";
//		WebElement ele=null;
//		ActivityRelatedLabel[] fields= {ActivityRelatedLabel.Assigned_To,ActivityRelatedLabel.Subject,ActivityRelatedLabel.Status,ActivityRelatedLabel.Priority};
//		if (ip.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 10)){
//				log(LogStatus.INFO,"Clicked on ins/account tab record : "+Smoke_TaskINS1Name,YesNo.No);
//				ThreadSleep(1000);
//				refresh(driver);
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					if (click(driver,ip.getButtonLogCallMultiple(projectName, 10), "log a call", action.BOOLEAN)) {
//						ele=ip.getLabelTextBox(projectName, PageName.TaskPage.toString(), PageLabel.Subject.toString(),10);
//						for (int i = 0;i<4;i++) {
//							sendKeys(driver,ele , Keys.BACK_SPACE+"", "subject", action.SCROLLANDBOOLEAN);
//						}
//							if (ip.selectDropDownValueonTaskPopUp(projectName, PageName.Object1Page, PageLabel.Status.toString(),
//									statusValue, action.SCROLLANDBOOLEAN, 10)) {
//								log(LogStatus.INFO, "selected None For dropdown : "+PageLabel.Subject.toString(),YesNo.No);	
//									
//							}else {
//								sa.assertTrue(false,"could not Select "+PageLabel.Status.toString()+" None");
//								log(LogStatus.ERROR, "could not Select "+PageLabel.Status.toString()+" None",YesNo.Yes);
//
//							}
//
//							if (ip.selectDropDownValueonTaskPopUp(projectName, PageName.Object1Page, PageLabel.Priority.toString(),
//									priorityValue, action.SCROLLANDBOOLEAN, 10)) {
//								log(LogStatus.INFO, "selected None For dropdown : "+PageLabel.Priority.toString(),YesNo.No);	
//								
//							}else {
//								sa.assertTrue(false,"could not Select "+PageLabel.Priority.toString()+" None");
//								log(LogStatus.ERROR, "could not Select "+PageLabel.Priority.toString()+" None",YesNo.Yes);
//
//							}// Assigned_To Cross Button Click
//							if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(),false, owner, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "Clicked on Cross Button against : "+owner+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.No);	
//							}else {
//								sa.assertTrue(false,"could not click cross button on "+PageLabel.Assigned_To.toString());
//								log(LogStatus.ERROR, "could not click cross button on "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//
//							}
//							if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName, 10), "save")) {
//								log(LogStatus.INFO, "clicked save button ",YesNo.No);	
//								ele=null;
//								for (ActivityRelatedLabel f:fields) {
//									ele=ip.returnErrorMessageBelowField(projectName, f, 10);
//									if (ele!=null) {
//										scrollDownThroughWebelement(driver, ele, "error message");
//										String s=ele.getText().trim();
//										if (s.contains(BasePageBusinessLayer.incomepleteField)) {
//											log(LogStatus.INFO, "successfully found incomplete error message for "+f, YesNo.No);
//										}
//										else {
//											log(LogStatus.ERROR,  "could not verify incomplete error message for "+f, YesNo.Yes);
//											sa.assertTrue(false, "could not verify incomplete error message for "+f);
//										}
//									}
//									else {
//										log(LogStatus.ERROR,  "incomplete error message not present for "+f, YesNo.Yes);
//										sa.assertTrue(false, "incomplete error message not present for "+f);
//									}
//								}
//								String labelWithComma = PageLabel.Assigned_To.toString()+", "+PageLabel.Status.toString()+", "+PageLabel.Subject.toString()+", "+PageLabel.Priority.toString();
//								tp.pageErrorOnTaskPopUp(projectName, PageName.Object1Page, RelatedTab.Activities, labelWithComma, 10);
//						
//								click(driver, ip.getCancelButton(projectName, 10), "cancel", action.SCROLLANDBOOLEAN);
//							}
//							else {
//								sa.assertTrue(false,"could not click save button on "+PageName.Object1Page.toString());
//								log(LogStatus.ERROR, "could not click save button on "+PageName.Object1Page.toString(),YesNo.Yes);
//
//							}
//						/*}
//						else {
//							sa.assertTrue(false,"subject textbox is not visible on "+PageName.Object1Page.toString());
//							log(LogStatus.ERROR, "subject textbox is not visible on "+PageName.Object1Page.toString(),YesNo.Yes);
//
//						}*/
//					}else {
//						sa.assertTrue(false,"log a call button is not clickable on "+PageName.Object1Page.toString());
//						log(LogStatus.ERROR, "log a call button is not clickable on "+PageName.Object1Page.toString(),YesNo.Yes);
//					}
//				}else {
//					sa.assertTrue(false,"activities relatd tab could not be clicked on "+PageName.Object1Page.toString());
//					log(LogStatus.ERROR, "activities relatd tab could not be clicked on "+PageName.Object1Page.toString(),YesNo.Yes);
//				}
//			}else {
//				sa.assertTrue(false,"could not find entity/account "+PageName.Object1Page.toString());
//				log(LogStatus.ERROR, "could not find entity/account "+PageName.Object1Page.toString(),YesNo.Yes);
//			}
//		}else {
//			sa.assertTrue(false,"tab not clickable "+TabName.Object1Tab.toString());
//			log(LogStatus.ERROR, "tab not clickable "+TabName.Object1Tab.toString(),YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc022_VerifyLogACallWithMultipleAssociation_Action(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		String date=todaysDate;
//		String[] taskUIdata= {Activity.Call.toString(),"--None--",Smoke_TaskINS1Name,"",date,Smoke_Task1LogACallPriority,"",Status.Completed.toString()};
//		WebElement ele=null;
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String tabs=ip.getTabName(projectName, TabName.Object1Tab)+","+ip.getTabName(projectName, TabName.Object3Tab)+","+ip.getTabName(projectName, TabName.TestCustomObjectTab);
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 20)) {
//				ele=ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20);
//				if (click(driver, ele, "related tab activities", action.BOOLEAN)) {
//					if (click(driver,ip.getButtonLogCallMultiple(projectName, 10), "log call", action.SCROLLANDBOOLEAN)) {
//						if (ip.verifyUIOfCreateNewTaskWindow(projectName,crmUser1FirstName+" "+crmUser1LastName,taskUIdata,false)) {
//							log(LogStatus.INFO, "successfully verified log a call ui", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "could not verify log a call ui", YesNo.Yes);
//							sa.assertTrue(false, "could not verify log a call ui");
//						}
//						if (clickUsingJavaScript(driver, ip.getcrossIcon(projectName, 20), "cross")) {
//							if (ip.getcancelButton(projectName, 10)==null) {
//								log(LogStatus.INFO, "new task window is successfully closed", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "new task window is not closed", YesNo.Yes);
//								sa.assertTrue(false,   "new task window is not closed");
//							}
//						}
//						else {
//							log(LogStatus.ERROR, "could not click on cross icon", YesNo.Yes);
//							sa.assertTrue(false,  "could not click on cross icon");
//						}
//					}
//					else {
//						log(LogStatus.ERROR, "could not click on new task button", YesNo.Yes);
//						sa.assertTrue(false,   "could not click on new task button");
//					}
//					if (click(driver,ip.getButtonNewTaskMultipleAssociations(projectName, 10), "new task", action.SCROLLANDBOOLEAN)) {
//						if (clickUsingJavaScript(driver, ip.getcancelButton(projectName, 20),  "cancel button")) {
//							if (ip.getcancelButton(projectName, 10)==null) {
//								log(LogStatus.INFO, "new task window is successfully closed", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "new task window is not closed", YesNo.Yes);
//								sa.assertTrue(false,   "new task window is not closed");
//							}
//						}
//						else {
//							log(LogStatus.ERROR, "could not click on cross icon", YesNo.Yes);
//							sa.assertTrue(false,   "could not click on cross icon");
//						}
//					}
//					else {
//						log(LogStatus.ERROR, "could not click on new task button", YesNo.Yes);
//						sa.assertTrue(false,   "could not click on new task button");
//					}
//
//					if (click(driver,ip.getButtonLogCallMultiple(projectName, 10), "new task", action.SCROLLANDBOOLEAN)) {
//						scrollDownThroughWebelement(driver, ip.relatedAssociations(projectName).get(0), "related associatons");
//						if (clickUsingJavaScript(driver, ip.getrelatedAssociationsdropdownButton(projectName, 10), "dropdown button for related associations")) {
//							List<String> l=compareMultipleListContainsByTitle(driver, tabs, ip.listOfObjectsInRelatedAssctions(projectName));
//							if (l.isEmpty()) {
//								log(LogStatus.INFO, "successfully verified presence of all tabs "+tabs, YesNo.No);
//							}
//							else {
//								for (String a:l) {
//									log(LogStatus.ERROR,"not found "+a,  YesNo.Yes);
//									sa.assertTrue(false, "not found "+a);
//								}
//							}
//							l.clear();
//							l=compareMultipleListContainsByTitle(driver,ip.getTabName(projectName, TabName.Object2Tab).toString(), ip.listOfObjectsInRelatedAssctions(projectName));
//							if (l.isEmpty()) {
//								log(LogStatus.ERROR, "tab "+TabName.Object2Tab.toString()+" is present but should not be", YesNo.Yes);
//								sa.assertTrue(false, "tab "+TabName.Object2Tab.toString()+" is present but should not be");
//							}
//							else {
//								for (String a:l) {
//									log(LogStatus.INFO,"not found "+a+" as expected",  YesNo.Yes);
//
//								}
//							}
//							//3
//							boolean flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Name.toString(), TabName.Object1Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//
//							//remove icon
//							if (click(driver, ip.removeButtonInRelatedAssociations(projectName,Smoke_TaskINS1Name), "remove button", action.BOOLEAN)) {
//
//							}
//							else {
//								log(LogStatus.ERROR, "remove Button is not clickable", YesNo.Yes);
//								sa.assertTrue(false, "remove Button is not clickable");
//							}
//							flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.Object1Tab, Smoke_TaskINS3Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							ThreadSleep(3000);
//							flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.Object3Tab, Smoke_TaskFund1Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+Smoke_TaskFund1Name+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+Smoke_TaskFund1Name+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskFund1Name+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, taskCustomObj1Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+taskCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+taskCustomObj1Name+" For Label "+PageLabel.Related_Associations);
//								log(LogStatus.SKIP,"Not Able to Select "+taskCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//							}
//
//							if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), "Subject",20), Smoke_Task1LogACallSubject, "Subject", action.SCROLLANDBOOLEAN)) {
//								ele=cp.geDropdownOnTaskPopUp(projectName, PageLabel.Priority.toString(), action.SCROLLANDBOOLEAN, 10);
//								if (click(driver, ele, "Drop Down : "+PageLabel.Priority.toString(),action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);	
//									ThreadSleep(2000);
//
//									if (cp.SelectDropDownValue(projectName, PageName.Object2Page, PageLabel.Priority.toString(), Smoke_Task1LogACallPriority, action.SCROLLANDBOOLEAN, 10)) {
//										log(LogStatus.INFO, "Selected : "+Smoke_Task1LogACallPriority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);	
//										ThreadSleep(1000);
//
//									} else {
//										log(LogStatus.ERROR, "Not ABle to Select : "+Smoke_Task1LogACallPriority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);
//										sa.assertTrue(false,"Not ABle to Select : "+Smoke_Task1LogACallPriority+" For Label : "+PageLabel.Priority.toString() );
//									}
//									if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 10), todaysDate, "date", action.SCROLLANDBOOLEAN)) {
//										if (sendKeys(driver, ip.getcommentsTextBox(projectName, 10), Smoke_Task1LogACallComment, "comments", action.SCROLLANDBOOLEAN)) {
//											appLog.info(">>>>>");
//											//scn.next();
//											if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//												log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//											}
//											else {
//												log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//												sa.assertTrue(false,"save button is not clickable so task not created" );
//											}
//											ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask12", excelLabel.Due_Date);
//										}
//										else {
//											log(LogStatus.ERROR, "comments textbox is not visible so task could not be created", YesNo.Yes);
//											sa.assertTrue(false,"comments textbox is not visible so task could not be created" );
//										}
//									}
//									else {
//										log(LogStatus.ERROR, "due date textbox is not visible so task could not be created", YesNo.Yes);
//										sa.assertTrue(false,"due date textbox is not visible so task could not be created" );
//									}
//								}
//								else {
//									log(LogStatus.ERROR, "priority dropdown is not clickable so task could not be created", YesNo.Yes);
//									sa.assertTrue(false,"priority dropdown is not clickable so task could not be created" );
//								}
//							}
//							else {
//								log(LogStatus.ERROR, "subject textbox is not visible so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"subject textbox is not visible so task could not be created" );
//							}
//							switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//							click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//						}
//						else {
//							log(LogStatus.ERROR, "not able to click on dropdown of related associations so cannot check objects", YesNo.Yes);
//							sa.assertTrue(false,"not able to click on dropdown of related associations so cannot check objects" );
//						}
//					}
//					else {
//						log(LogStatus.ERROR, "not able to click on new task button", YesNo.Yes);
//						sa.assertTrue(false,"not able to click on new task button" );
//					}
//
//				}
//				else {
//					log(LogStatus.ERROR, "not able to click on related tab activities", YesNo.Yes);
//					sa.assertTrue(false,"not able to click on related tab activities" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not able to click on created institution", YesNo.Yes);
//				sa.assertTrue(false, "not able to click on created institution" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "not able to click on institution tab", YesNo.Yes);
//			sa.assertTrue(false, "not able to click on institution tab" );
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc022_VerifyLogACallWithMultipleAssociation_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		List<String> taskstd1=new LinkedList<String>();
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask12", excelLabel.Due_Date);
//		System.out.println(date);
//		taskstd1.add(Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName);
//		taskstd1.add(Smoke_TaskINS3Name+" +2");
//		taskstd1.add(Status.Completed.toString());
//		taskstd1.add(crmUser1FirstName+" "+crmUser1LastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Call.toString());
//		taskstd1.add(Links.View.toString());	
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS3Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					ThreadSleep(3000);
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task1LogACallSubject, taskstd1, action.BOOLEAN, 15);
//					
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "inst is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"inst is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "inst/account tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"inst/account tab is not clickable, so could not verify activities task data" );
//		}
//		
//
//		if (ip.clickOnTab(projectName, TabName.Object3Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_TaskFund1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object3Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					ip.verifyingRelatedTabData2(projectName, PageName.Object3Page, RelatedTab.Activities, date, Smoke_Task1LogACallSubject, taskstd1, action.BOOLEAN, 15);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "fund/deal is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"fund/deal is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "fund/deal tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"fund/deal tab is not clickable, so could not verify activities task data" );
//		}
//		if (ip.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					ip.verifyingRelatedTabData2(projectName, PageName.Object3Page, RelatedTab.Activities, date, Smoke_Task1LogACallSubject, taskstd1, action.BOOLEAN, 15);
//					
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "created custom record is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"created custom record is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "custom tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"custom tab is not clickable, so could not verify activities task data" );
//		}
//		if (ip.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, RelatedTab.Activities, date, Smoke_Task1LogACallSubject, taskstd1, action.BOOLEAN, 15);
//					
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//				
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Details, 10)
//						, "details tab", action.SCROLLANDBOOLEAN)) {
//					ThreadSleep(3000);
//					WebElement ele=cp.getlastTouchPointValue(projectName, 10);
//					String value="";
//					if (ele!=null) {
//						value=ele.getText().trim();
//						if (cp.verifyDate(date, value)) {
//							log(LogStatus.INFO,"successfully verified last touch point date", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "last touch point value is not matched", YesNo.Yes);
//							sa.assertTrue(false,"last touch point value is not matched" );
//						}
//					}else {
//						log(LogStatus.ERROR, "last touch point value is not visible", YesNo.Yes);
//						sa.assertTrue(false,"last touch point value is not visible" );
//					}
//				}else {
//					log(LogStatus.ERROR, "details related tab is not clickable", YesNo.Yes);
//					sa.assertTrue(false,"details related tab is not clickable" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "contact is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"contact is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "contact tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"contact tab is not clickable, so could not verify activities task data" );
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc023_VerifyLinksAvailableInActivitiesTabForLogACall(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		WebElement ele ;
//		String parentID=null;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//
//					String[] links = {Smoke_Task1LogACallSubject,contactName,Smoke_TaskINS3Name,crmUser1FirstName+" "+crmUser1LastName,"2","2",Links.View.toString(),Links.View.toString()};
//					int i=0;
//					for (String link : links) {
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Meetings, link, action.BOOLEAN, 10);
//						if (link.equalsIgnoreCase(Links.View.toString()))
//							ele=cp.getLinkOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_Task1LogACallSubject,
//								"View", null, action.BOOLEAN, 10);
//							if (ele!=null) {
//							log(LogStatus.INFO,link+" link present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);	
//
//							if (click(driver, ele, link, action.BOOLEAN)) {
//								if (i<=3) {
//									log(LogStatus.INFO,"Clicked on : "+link,YesNo.No);
//									parentID = switchOnWindow(driver);
//									if (parentID!=null) {
//										log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+link,YesNo.Yes);
//										ThreadSleep(1000);
//
//										ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, link, action.BOOLEAN, 10);
//										if (ele!=null) {
//											log(LogStatus.INFO,"Landing Page Verified for : "+link,YesNo.No);	
//										} else {
//											sa.assertTrue(false,"Landing Page Not Verified for : "+link);
//											log(LogStatus.SKIP,"Landing Page Not Verified for : "+link,YesNo.Yes);
//										}
//
//										driver.close();
//										driver.switchTo().window(parentID);
//
//									} else {
//										sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+link);
//										log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+link,YesNo.Yes);
//									}
//								}else if(i==4) {
//									List<String> s=null;
//									s=compareMultipleList(driver, Smoke_TaskFund1Name+","+taskCustomObj1Name, ip.createdRelatedAssociationsOnWindow(projectName));
//									if (s.isEmpty()) {
//										log(LogStatus.INFO, "Successfully verified related association names on RA window", YesNo.No);
//										if (ip.verifyAllRecordsOnCreatedRelAssoc(projectName, PageName.TaskPage,taskCustomObj1Name+","+Smoke_TaskFund1Name)) {
//											log(LogStatus.INFO,"successfully verified rel assoc window", YesNo.No);
//										}
//										else {
//											log(LogStatus.ERROR,  "could not verify related association window opening links: ", YesNo.Yes);
//											sa.assertTrue(false,  "could not verify related association window opening links: ");
//										}
//									}
//									else {
//										for(String e:s) {
//											log(LogStatus.ERROR,  "could not verify related association: " +e.toString(), YesNo.Yes);
//											sa.assertTrue(false,  "could not verify related association: " +e.toString());
//										}
//									}
//									
//									click(driver, ip.getCrossIconRAorComment(projectName,"RA", 10), "cross icon", action.BOOLEAN);
//								}
//								else if(i==5 || i==7) {
//									String popup="";
//									if (i==5)
//										popup="RA";
//									else popup="Comment";
//									if (click(driver, ip.getOkButtonRAorComment(projectName,popup, 10), "ok icon", action.BOOLEAN)) {
//										log(LogStatus.INFO, "RA or Comment successfully popup closed", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR,  "RA or Comment popup is not closed", YesNo.Yes);
//										sa.assertTrue(false,  "RA or Comment popup is not closed");
//								
//									}
//									ThreadSleep(5000);
//								}
//								else if(i==6){
//									
//									String s=getText(driver, ip.getcommentsTextOnPopup(projectName, 20), "comments popup text", action.BOOLEAN);
//									if (s.contains(Smoke_Task1LogACallComment)) {
//										log(LogStatus.INFO, "successfully verified "+Smoke_Task1LogACallComment+" present on popup", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR,  "not verified "+Smoke_Task1LogACallComment+" on popup", YesNo.Yes);
//										sa.assertTrue(false,"not verified "+Smoke_Task1LogACallComment+" on popup");
//								
//									}
//									click(driver, ip.getCrossIconRAorComment(projectName,"Comment", 10), "cross icon", action.BOOLEAN);
//									ThreadSleep(5000);
//								}
//
//
//							} else {
//								sa.assertTrue(false,"Not Able to Click on : "+link);
//								log(LogStatus.SKIP,"Not Able to Click on : "+link,YesNo.Yes);
//							}
//						} else {
//							sa.assertTrue(false,link+" link not present on Sub Tab : "+RelatedTab.Meetings);
//							log(LogStatus.SKIP,link+" link not present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//						}
//						i++;
//					}
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact Not Found : "+contactName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc024_VerifyLogACallButtonFromContactDetailPageWithBlankNameAndRelatedAssociation(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp= new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		WebElement ele ;
//		String parentID=null;
//		String date=tomorrowsDate;
//		
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					if (cp.getButtonLogCallMultiple(projectName, 20)!=null) {
//						log(LogStatus.INFO,"log a call button verified successfully",YesNo.No);
//					}
//					else {
//						sa.assertTrue(false,"log a call button not verified");
//						log(LogStatus.ERROR, "log a call button not verified",YesNo.Yes);
//					}
//					if (cp.getButtonNewTaskMultipleAssociations(projectName, 20)!=null) {
//						log(LogStatus.INFO,"NewTask button verified successfully",YesNo.No);
//					}
//					else {
//						sa.assertTrue(false,"NewTask button not verified");
//						log(LogStatus.ERROR, "NewTask button not verified",YesNo.Yes);
//					}
//					if (clickUsingJavaScript(driver, cp.getButtonLogCallMultiple(projectName, 15), "log call Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New task button on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//						ThreadSleep(2000);
//					
//						ele=cp.getmeetingTypeDropdown(projectName, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO, "Meeting Type Label is Present",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Meeting Type Label Should be Present");
//							log(LogStatus.ERROR, "Meeting Type Label Should be Present",YesNo.Yes);
//
//						}
//
//						List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Name.toString(),false,action.SCROLLANDBOOLEAN, 15);
//						if (!eleList.isEmpty() && eleList.size()==1) {
//							log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Name.toString(),YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//
//						ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), false,contactName, action.SCROLLANDBOOLEAN, 15);
//						if (ele!=null) {
//							log(LogStatus.INFO, contactName+" Found For Label "+PageLabel.Name.toString(),YesNo.No);	
//
//							if (clickUsingJavaScript(driver, ele, "Cross Button For "+contactName, action.BOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on Cross Button For "+contactName,YesNo.Yes);
//								ThreadSleep(2000);
//							}
//							else {
//								sa.assertTrue(false,"Not Able to Click on Cross Button For "+contactName);
//								log(LogStatus.SKIP,"Not Able to Click on Cross Button For "+contactName,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,contactName+" not Found For Label "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, contactName+" not Found For Label "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//						eleList = cp.getAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(),true, action.SCROLLANDBOOLEAN, 5);
//						if (eleList.isEmpty()) {
//							log(LogStatus.INFO, "Label field is blank for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Label field sholud be blank for "+PageLabel.Related_Associations.toString());
//							log(LogStatus.ERROR, "Label field sholud be blank for "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//						}
//
//						// New Contact Button For Name Label
//						ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.Object2Page, PageLabel.Name.toString(), action.SCROLLANDBOOLEAN,15);
//						if (clickUsingJavaScript(driver, ele, "Name Text Label", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Enter Value to Name Text Box",YesNo.Yes);	
//							ThreadSleep(1000);
//							ele = cp.getNewButtonElementFromTask(projectName, PageName.Object2Page, PlusNewButton.ContactNewButton, PageLabel.Name.toString(), action.SCROLLANDBOOLEAN, 15);
//							if (clickUsingJavaScript(driver, ele, "New Contact Button for Label : "+PageLabel.Name.toString(), action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on New Contact Button for "+PageLabel.Name.toString(),YesNo.No);	
//								ThreadSleep(1000);
//								parentID = switchOnWindow(driver);
//								if (parentID!=null) {
//									log(LogStatus.INFO,"New window is open Going to verify New Contact PopUP Landing Page ",YesNo.Yes);
//									ThreadSleep(1000);
//									//click next button if present(record type), if not then check header
//									click(driver, cp.getContinueOrNextButton(projectName, 5), "next button", action.SCROLLANDBOOLEAN);
//									ele = cp.getHeaderTextForPage(projectName, PageName.Object1PagePopup, cp.getNewButtonFromTask(projectName, PlusNewButton.ContactNewButton), action.BOOLEAN, 10);
//									if (ele!=null) {
//										log(LogStatus.INFO,"New Contact PopUp is opened",YesNo.No);	
//									} else {
//										sa.assertTrue(false,"New Contact PopUp is not opened");
//										log(LogStatus.SKIP,"New Contact PopUp is not opened",YesNo.Yes);
//									}
//									driver.close();
//									driver.switchTo().window(parentID);
//								} else {
//									sa.assertTrue(false,"No new window is open so cannot verify New Contact PopUP Landing Page");
//									log(LogStatus.SKIP,"No new window is open so cannot verify New Contact PopUP Landing Page",YesNo.Yes);
//								}
//							} else {
//								sa.assertTrue(false,"Not Able to Click on New Contact Button for "+PageLabel.Name.toString());
//								log(LogStatus.SKIP,"Not Able to Click on New Contact Button for "+PageLabel.Name.toString(),YesNo.Yes);
//							}
//						}else {
//							sa.assertTrue(false,"Not Able to Enter Value to Name Text Box");
//							log(LogStatus.SKIP,"Not Able to Enter Value to Name Text Box",YesNo.Yes);	
//						}
//						
//						
//						
//						// New Account Button For Related Associations Label 
//						switchToDefaultContent(driver);
//						ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN,15);
//						if (clickUsingJavaScript(driver, ele, "Related Associations Text Label", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Enter Value to Related Associations Text Box",YesNo.Yes);	
//							ThreadSleep(1000);
//							ele = cp.getNewButtonElementFromTask(projectName, PageName.Object2Page, PlusNewButton.EntityOrAccountNewButton, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 15);
//							if (clickUsingJavaScript(driver, ele, "New Entity/Account Button for Label : "+PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on New Entity/Account Button for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//								ThreadSleep(1000);
//								parentID = switchOnWindow(driver);
//								if (parentID!=null) {
//									log(LogStatus.INFO,"New window is open Going to verify New Entity/Account PopUP Landing Page ",YesNo.Yes);
//									ThreadSleep(1000);
//									//click next button if present(record type), if not then check header
//									click(driver, cp.getContinueOrNextButton(projectName, 5), "next button", action.SCROLLANDBOOLEAN);
//									ele = cp.getHeaderTextForPage(projectName, PageName.Object1PagePopup, cp.getNewButtonFromTask(projectName, PlusNewButton.EntityOrAccountNewButton), action.BOOLEAN, 10);
//									if (ele!=null) {
//										log(LogStatus.INFO,"New Entity/Account PopUp is opened",YesNo.No);	
//									} else {
//										sa.assertTrue(false,"New Entity/Account PopUp is not opened");
//										log(LogStatus.SKIP,"New Entity/Account PopUp is not opened",YesNo.Yes);
//									}
//									driver.close();
//									driver.switchTo().window(parentID);
//								} else {
//									sa.assertTrue(false,"No new window is open so cannot verify New Entity/Account PopUP Landing Page");
//									log(LogStatus.SKIP,"No new window is open so cannot verify New Entity/Account PopUP Landing Page",YesNo.Yes);
//								}
//							} else {
//								sa.assertTrue(false,"Not Able to Click on New Entity/Account Button for "+PageLabel.Related_Associations.toString());
//								log(LogStatus.SKIP,"Not Able to Click on New Entity/Account Button for "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//							}
//						}else {
//							sa.assertTrue(false,"Not Able to Enter Value to Related Associations Text Box");
//							log(LogStatus.SKIP,"Not Able to Enter Value to Related Associations Text Box",YesNo.Yes);	
//						}
//						
//
//						// New Test Custom Object Button For Related Associations Label 
//						switchToDefaultContent(driver);
//						if (cp.SelectRelatedAssociationsdropdownButton(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, action.SCROLLANDBOOLEAN, 20)) {
//							log(LogStatus.SKIP,"Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//							ThreadSleep(2000);	
//							
//							ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN,15);
//							if (clickUsingJavaScript(driver, ele, "Related Associations Text Label", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Enter Value to Related Associations Text Box",YesNo.Yes);	
//								ThreadSleep(1000);
//								ele = cp.getNewButtonElementFromTask(projectName, PageName.Object2Page, PlusNewButton.TestCustomObjectNewButton, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 15);
//								if (clickUsingJavaScript(driver, ele, "New Test Object Button for Label : "+PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"Clicked on New Test Object Button for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//									ThreadSleep(1000);
//									parentID = switchOnWindow(driver);
//									if (parentID!=null) {
//										log(LogStatus.INFO,"New window is open Going to verify Test Object  PopUP Landing Page ",YesNo.Yes);
//										ThreadSleep(1000);
//										//click next button if present(record type), if not then check header
//										click(driver, cp.getContinueOrNextButton(projectName, 5), "next button", action.SCROLLANDBOOLEAN);
//									
//										ele = cp.getHeaderTextForPage(projectName, PageName.Object1PagePopup, cp.getNewButtonFromTask(projectName, PlusNewButton.TestCustomObjectNewButton), action.BOOLEAN, 10);
//										if (ele!=null) {
//											log(LogStatus.INFO,"New Test Object PopUp is opened",YesNo.No);	
//										} else {
//											sa.assertTrue(false,"New Test Object PopUp is not opened");
//											log(LogStatus.SKIP,"New Test Object PopUp is not opened",YesNo.Yes);
//										}
//										driver.close();
//										driver.switchTo().window(parentID);
//									} else {
//										sa.assertTrue(false,"No new window is open so cannot verify New Test Object PopUP Landing Page");
//										log(LogStatus.SKIP,"No new window is open so cannot verify New Test Object PopUP Landing Page",YesNo.Yes);
//									}
//								} else {
//									sa.assertTrue(false,"Not Able to Click on New Test Object Button for "+PageLabel.Related_Associations.toString());
//									log(LogStatus.SKIP,"Not Able to Click on New Test Object Button for "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//								}
//							}else {
//								sa.assertTrue(false,"Not Able to Enter Value to Related Associations Text Box");
//								log(LogStatus.SKIP,"Not Able to Enter Value to Related Associations Text Box",YesNo.Yes);	
//							}
//							
//						} else {
//							sa.assertTrue(false,"Not Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//						}
//						
//						
//						//  
//
//						if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_Task2LogACallSubject, "Subject", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//							ThreadSleep(1000);
//							if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), tomorrowsDate, PageLabel.Due_Date.toString(), action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO, "Entered value to Due Date Text Box", YesNo.Yes);
//								ThreadSleep(1000);
//								ele=cp.geDropdownOnTaskPopUp(projectName, PageLabel.Priority.toString(), action.SCROLLANDBOOLEAN, 10);
//								if (click(driver, ele, "Drop Down : "+PageLabel.Priority.toString(),action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);	
//									ThreadSleep(2000);
//									
//									if (cp.SelectDropDownValue(projectName, PageName.Object2Page, PageLabel.Priority.toString(), Smoke_Task2LogACallPriority, action.SCROLLANDBOOLEAN, 10)) {
//										log(LogStatus.INFO, "Selected : "+Smoke_Task2LogACallPriority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);	
//										ThreadSleep(1000);
//										
//									} else {
//										log(LogStatus.ERROR, "Not ABle to Select : "+Smoke_Task2LogACallPriority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);
//										sa.assertTrue(false,"Not ABle to Select : "+Smoke_Task2LogACallPriority+" For Label : "+PageLabel.Priority.toString() );
//									}
//									appLog.info(">>>>");
//									//scn.next();
//									if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//										ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask13", excelLabel.Due_Date);
//										log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//										ThreadSleep(2000);
//										ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, Smoke_Task2LogACallSubject, action.BOOLEAN, 10);
//										
//												String[][] fieldsWithValues= {{PageLabel.Subject.toString(),Smoke_Task2LogACallSubject},
//												{PageLabel.Name.toString(),""},
//												{PageLabel.Due_Date.toString(),date},
//												{PageLabel.Priority.toString(),Smoke_Task2LogACallPriority},
//												{PageLabel.Related_Associations.toString(),"Assign Multiple Associations"}};
//										
//										if (clickUsingJavaScript(driver, ele, Smoke_Task2LogACallSubject, action.BOOLEAN)) {
//											ThreadSleep(10000);
//											if (tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.SCROLLANDBOOLEAN, 30)) {
//												log(LogStatus.INFO, "successfully verified all labels on task page", YesNo.No);
//											}
//											else {
//												log(LogStatus.ERROR, "could not verif all labels on task page", YesNo.Yes);
//												sa.assertTrue(false,"could not verif all labels on task page");
//											}
//										} else {
//											log(LogStatus.ERROR, "created task not clickable", YesNo.Yes);
//											sa.assertTrue(false,"created task not clickable");
//									
//										}
//									}
//									else {
//										log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//										sa.assertTrue(false,"save button is not clickable so task not created" );
//									}
//									
//								} else {
//									log(LogStatus.ERROR, "Click on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);
//									sa.assertTrue(false,"Click on "+PageLabel.Priority.toString()+" Drop Down" );
//								}
//							}else {
//								log(LogStatus.ERROR, "duedate textbox is not visible so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"duedate textbox is not visible so task could not be created" );
//							}
//						}
//						else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on log call button on Sub Tab : "+RelatedTab.Activities);
//						log(LogStatus.SKIP,"Not Able to Click on log call button on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//					}
//
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact Not Found : "+contactName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//		
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Details, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					ele=cp.getlastTouchPointValue(projectName, 10);
//					String value="";
//					if (ele!=null) {
//						value=ele.getText().trim();
//						if (cp.verifyDate(todaysDate, value)) {
//							log(LogStatus.INFO,"successfully verified last touch point date", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "last touch point value is not matched", YesNo.Yes);
//							sa.assertTrue(false,"last touch point value is not matched" );
//						}
//					}else {
//						log(LogStatus.ERROR, "last touch point value is not visible", YesNo.Yes);
//						sa.assertTrue(false,"last touch point value is not visible" );
//					}
//				}else {
//					log(LogStatus.ERROR, "details related tab is not clickable", YesNo.Yes);
//					sa.assertTrue(false,"details related tab is not clickable" );
//				}
//			}else {
//				log(LogStatus.ERROR, contactName+" could not be found on contact tab", YesNo.Yes);
//				sa.assertTrue(false,contactName+" could not be found on contact tab" );
//			}
//		}else {
//			log(LogStatus.ERROR, "contact tab is not clickable", YesNo.Yes);
//			sa.assertTrue(false,"contact tab is not clickable" );
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc025_VerifyEditLogACall_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp= new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		boolean flag=false;
//		String parentID=null;
//		String olddate=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask12", excelLabel.Due_Date);
//		String date=tomorrowsDate;
//		
//		String[] taskUIdata= {Smoke_Task1LogACallSubject,"--None--",Smoke_TaskINS3Name+","+Smoke_TaskFund1Name+","+taskCustomObj1Name,Smoke_Task1LogACallComment,olddate,Smoke_Task1LogACallPriority,Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName,Status.Completed.toString()};
//		if (ip.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cop.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj1Name, 10)) {
//				log(LogStatus.INFO,"Clicked on custom : "+taskCustomObj1Name,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					WebElement ele=ip.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, Smoke_Task1LogACallSubject, action.SCROLLANDBOOLEAN, 10);
//					if (ele!=null) {
//						if (click(driver, ele, "task page", action.BOOLEAN)) {
//							flag=true;
//						}
//						else {
//							log(LogStatus.ERROR, "could not click on task link",YesNo.Yes);
//							sa.assertTrue(false, "could not click on task link");
//						}
//					}else {
//						log(LogStatus.ERROR, "task link not found",YesNo.Yes);
//						sa.assertTrue(false, "task link not found");
//					}
//					if(flag) {
//						parentID=switchOnWindow(driver);
//						if (parentID!=null) {
//							
//						if (click(driver, tp.getEditButton(projectName, 10), "edit button", action.SCROLLANDBOOLEAN)) {
//							if (ip.verifyUIOfCreateNewTaskWindow(projectName,crmUser1FirstName+" "+crmUser1LastName,taskUIdata,false )) {
//								log(LogStatus.INFO, "successfully verified task ui edit mode", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "could not verify create new task ui", YesNo.Yes);
//								sa.assertTrue(false, "could not verify create new task ui");
//							}
//							if (ip.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(), false, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "clicked on cross icon of contact 3",YesNo.No);	
//
//							} else {
//								sa.assertTrue(false,"could not click on cross icon of contact 3");
//								log(LogStatus.ERROR, "could not click on cross icon of contact 3",YesNo.Yes);
//
//							}
//							if (ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(), TabName.TaskTab, Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "successfully selected contact 4 for name field", YesNo.No);
//							} else {
//								sa.assertTrue(false,"could not select contact 4 for name field");
//								log(LogStatus.ERROR, "could not select contact 4 for name field",YesNo.Yes);
//							}
//							//cross button to ins 3 in RA
//							if (ip.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), true, Smoke_TaskINS3Name, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "clicked on cross icon of ins 3", YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"could not click on cross icon of ins 3");
//								log(LogStatus.ERROR, "could not click on cross icon of ins 3",YesNo.Yes);
//							}
//							//cross button to fund/deal1 in RA
//							if (ip.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), false, Smoke_TaskFund1Name, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "clicked on cross icon of "+Smoke_TaskFund1Name, YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"could not click on cross icon of "+Smoke_TaskFund1Name);
//								log(LogStatus.ERROR, "could not click on cross icon of "+Smoke_TaskFund1Name,YesNo.Yes);
//							}
//							//cross button to test custom obj 1 in RA
//							if (ip.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), false, taskCustomObj1Name, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "clicked on cross icon of "+taskCustomObj1Name, YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"could not click on cross icon of "+taskCustomObj1Name);
//								log(LogStatus.ERROR, "could not click on cross icon of "+taskCustomObj1Name,YesNo.Yes);
//							}
//							//select test custom obj 2 in RA
//							if (ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab,taskCustomObj2Name, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "successfully selected taskCustomObj2Name for Related_Associations field", YesNo.No);
//							} else {
//								sa.assertTrue(false,"could not select taskCustomObj2Name for Related_Associations field");
//								log(LogStatus.ERROR, "could not select taskCustomObj2Name for Related_Associations field",YesNo.Yes);
//							}
//							
//							if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TaskPage, PageLabel.Assigned_To.toString(),false, crmUser1FirstName+" "+crmUser1LastName, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO, "Clicked on Cross Button against : "+crmUser1LastName+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.No);	
//								
//								ThreadSleep(2000);
//								// Assigned To
//								String owner = AdminUserFirstName+" "+AdminUserLastName;
//								flag=tp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(), TabName.TaskTab, owner, action.BOOLEAN, 10);		
//								if (flag) {
//									log(LogStatus.INFO,"Selected "+owner+" For  Drown Down Value For Label "+PageLabel.Assigned_To,YesNo.No);
//									ThreadSleep(1000);
//								}
//								else {
//									sa.assertTrue(false,"could not select "+owner+" for assigned to field");
//									log(LogStatus.ERROR, "could not select "+owner+" for assigned to field",YesNo.Yes);
//								}
//							}else {
//								sa.assertTrue(false,"could not click cross on "+ crmUser1FirstName+" "+crmUser1LastName+" for assigned to field");
//								log(LogStatus.ERROR, "could not click cross on "+ crmUser1FirstName+" "+crmUser1LastName+" for assigned to field",YesNo.Yes);
//							}
//							if (ip.selectDropDownValueonTaskPopUp(projectName, PageName.TestCustomObjectPage, PageLabel.Priority.toString(),Smoke_Task1LogACallUpdatedPriority, action.SCROLLANDBOOLEAN, 15)) {
//								log(LogStatus.INFO,"Selected "+Smoke_Task1LogACallUpdatedPriority+" For  drop Down Value For Label "+PageLabel.Priority,YesNo.No);
//							}
//							else {
//								sa.assertTrue(false,"could not click on "+ Smoke_Task1LogACallUpdatedPriority+" for Priority field");
//								log(LogStatus.ERROR, "could not click on "+ Smoke_Task1LogACallUpdatedPriority+" for Priority field",YesNo.Yes);
//							}
//							if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_Task1LogACallUpdatedSubject,  PageLabel.Subject.toString(), action.SCROLLANDBOOLEAN)) {
//								if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), tomorrowsDate, "due date", action.SCROLLANDBOOLEAN)) {
//									if (click(driver, ip.getCustomTabSaveBtn(projectName, 10),"save", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO, "successfully clicked on save and edited task", YesNo.No);
//										String relatedAssoctaion=tp.Comment(projectName, PageLabel.Related_Associations, taskCustomObj2Name);
//										String comment = relatedAssoctaion+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_Task1LogACallComment;
//										
//										String[][] fieldsWithValues= {{PageLabel.Assigned_To.toString(),AdminUserFirstName+" "+AdminUserLastName},
//												{PageLabel.Subject.toString(),Smoke_Task1LogACallUpdatedSubject},
//												{PageLabel.Name.toString(), Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName},
//												{PageLabel.Due_Date.toString(),date},
//												{PageLabel.Comments.toString(),comment},
//												{PageLabel.Priority.toString(),Smoke_Task1LogACallUpdatedPriority},
//												{PageLabel.Related_Associations.toString(),taskCustomObj2Name}};
//										
//											ThreadSleep(10000);
//											if (tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.SCROLLANDBOOLEAN, 30)) {
//												log(LogStatus.INFO, "successfully verified all labels on task page", YesNo.No);
//											}
//											else {
//												log(LogStatus.ERROR, "could not verif all labels on task page", YesNo.Yes);
//												sa.assertTrue(false,"could not verif all labels on task page");
//											}
//										
//									}
//									else {
//										sa.assertTrue(false,"could not click cross on save, so cannot edit task");
//										log(LogStatus.ERROR, "could not click cross on save, so cannot edit task",YesNo.Yes);
//									}
//								}else {
//									sa.assertTrue(false,"due date field is visible, so cannot edit task");
//									log(LogStatus.ERROR, "due date field is visible, so cannot edit task",YesNo.Yes);
//								}
//							}
//							else {
//								sa.assertTrue(false,"subject field is visible, so cannot edit task");
//								log(LogStatus.ERROR, "subject field is visible, so cannot edit task",YesNo.Yes);
//							}
//						}else {
//							sa.assertTrue(false,"could not click edit button, so cannot edit task");
//							log(LogStatus.ERROR, "could not click edit button, so cannot edit task",YesNo.Yes);
//						}
//						driver.close();
//						driver.switchTo().window(parentID);
//						}
//						else {
//							sa.assertTrue(false,"could not switch to new window, so cannot edit task");
//							log(LogStatus.ERROR, "could not switch to new window, so cannot edit task",YesNo.Yes);
//						}
//					}
//					else {
//						sa.assertTrue(false,"task link on custom object page not clickable, so cannot edit task");
//						log(LogStatus.ERROR, "task link on custom object page not clickable, so cannot edit task",YesNo.Yes);
//					}
//				}else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}else {
//				log(LogStatus.ERROR, "could not find new custom object record on custom tab",YesNo.Yes);
//				sa.assertTrue(false, "could not find new custom object record on customtab");
//			}
//		}else {
//			log(LogStatus.ERROR, "custom object tab is not clickable",YesNo.Yes);
//			sa.assertTrue(false, "custom object tab is not clickable");
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc025_VerifyEditLogACall_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		List<String> taskstd1=new LinkedList<String>();
//		
//		taskstd1.add(Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName);
//		taskstd1.add(Smoke_TaskINS3Name+" +2");
//		taskstd1.add(Status.Completed.toString());
//		taskstd1.add(crmUser1FirstName+" "+crmUser1LastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Call.toString());
//		taskstd1.add(Links.View.toString());	
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS3Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					WebElement ele = ip.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, Smoke_Task1LogACallUpdatedSubject, action.BOOLEAN, 5);
//					if (ele==null) {
//						log(LogStatus.INFO, "successfully verified absence of "+Smoke_Task1LogACallUpdatedSubject, YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task "+Smoke_Task1LogACallUpdatedSubject +"is present but it should not be on "+PageName.Object1Page, YesNo.Yes);
//						sa.assertTrue(false,"task "+Smoke_Task1LogACallUpdatedSubject +"is present but it should not be on "+PageName.Object1Page);
//					}
//					
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "inst is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"inst is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "inst/account tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"inst/account tab is not clickable, so could not verify activities task data" );
//		}
//		
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					WebElement ele = ip.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, Smoke_Task1LogACallUpdatedSubject, action.BOOLEAN, 5);
//					if (ele==null) {
//						log(LogStatus.INFO, "successfully verified absence of "+Smoke_Task1LogACallUpdatedSubject, YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task "+Smoke_Task1LogACallUpdatedSubject +"is present but it should not be on "+PageName.Object1Page, YesNo.Yes);
//						sa.assertTrue(false,"task "+Smoke_Task1LogACallUpdatedSubject +"is present but it should not be on "+PageName.Object1Page);
//					}
//					
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "inst is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"inst is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "inst/account tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"inst/account tab is not clickable, so could not verify activities task data" );
//		}
//		
//		if (ip.clickOnTab(projectName, TabName.Object3Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_TaskFund1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object3Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					WebElement ele = ip.getAllLinksOnSubTab(projectName, PageName.Object3Page, RelatedTab.Activities, Smoke_Task1LogACallUpdatedSubject, action.BOOLEAN, 5);
//					if (ele==null) {
//						log(LogStatus.INFO, "successfully verified absence of "+Smoke_Task1LogACallUpdatedSubject, YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task "+Smoke_Task1LogACallUpdatedSubject +"is present but it should not be on "+PageName.Object1Page, YesNo.Yes);
//						sa.assertTrue(false,"task "+Smoke_Task1LogACallUpdatedSubject +"is present but it should not be on "+PageName.Object1Page);
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "fund/deal is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"fund/deal is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "fund/deal tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"fund/deal tab is not clickable, so could not verify activities task data" );
//		}
//		
//		if (ip.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					WebElement ele = ip.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, Smoke_Task1LogACallUpdatedSubject, action.BOOLEAN, 5);
//					if (ele==null) {
//						log(LogStatus.INFO, "successfully verified absence of "+Smoke_Task1LogACallUpdatedSubject, YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task "+Smoke_Task1LogACallUpdatedSubject +"is present but it should not be on "+PageName.Object1Page, YesNo.Yes);
//						sa.assertTrue(false,"task "+Smoke_Task1LogACallUpdatedSubject +"is present but it should not be on "+PageName.Object1Page);
//					}
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "created custom record is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"created custom record is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "custom tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"custom tab is not clickable, so could not verify activities task data" );
//		}
//		if (ip.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					WebElement ele = ip.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_Task1LogACallUpdatedSubject, action.BOOLEAN, 5);
//					if (ele==null) {
//						log(LogStatus.INFO, "successfully verified absence of "+Smoke_Task1LogACallUpdatedSubject, YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task "+Smoke_Task1LogACallUpdatedSubject +"is present but it should not be on "+PageName.Object2Page, YesNo.Yes);
//						sa.assertTrue(false,"task "+Smoke_Task1LogACallUpdatedSubject +"is present but it should not be on "+PageName.Object2Page);
//					}
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "contact3 is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"contact3 is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "Object2Tab tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"Object2Tab tab is not clickable, so could not verify activities task data" );
//		}
//		
//		if (ip.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					WebElement ele = ip.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_Task1LogACallUpdatedSubject, action.BOOLEAN, 5);
//					if (ele==null) {
//						log(LogStatus.INFO, "successfully verified absence of "+Smoke_Task1LogACallUpdatedSubject, YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task "+Smoke_Task1LogACallUpdatedSubject +"is present but it should not be on "+PageName.Object2Page, YesNo.Yes);
//						sa.assertTrue(false,"task "+Smoke_Task1LogACallUpdatedSubject +"is present but it should not be on "+PageName.Object2Page);
//					}
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "contact 1 is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"contact 1 is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "Object2Tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"Object2Tab is not clickable, so could not verify activities task data" );
//		}
//		
//		
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS2Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					WebElement ele = ip.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, Smoke_Task1LogACallUpdatedSubject, action.BOOLEAN, 10);
//					if (ele!=null) {
//						log(LogStatus.INFO, "successfully verified presence of "+Smoke_Task1LogACallUpdatedSubject, YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task "+Smoke_Task1LogACallUpdatedSubject +"is absent but it should be on "+PageName.Object1Page, YesNo.Yes);
//						sa.assertTrue(false,"task "+Smoke_Task1LogACallUpdatedSubject +"is absent but it should be on "+PageName.Object1Page);
//					}
//					
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "inst is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"inst is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "inst/account tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"inst/account tab is not clickable, so could not verify activities task data" );
//		}
//		
//		
//		if (lp.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab,  Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					WebElement ele = ip.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_Task1LogACallUpdatedSubject, action.BOOLEAN, 10);
//					if (ele!=null) {
//						log(LogStatus.INFO, "successfully verified presence of "+Smoke_Task1LogACallUpdatedSubject, YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "task "+Smoke_Task1LogACallUpdatedSubject +"is absent but it should be on "+PageName.Object2Page, YesNo.Yes);
//						sa.assertTrue(false,"task "+Smoke_Task1LogACallUpdatedSubject +"is absent but it should be on "+PageName.Object2Page);
//					}
//					
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "contact4 is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"contact4 is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "Object2Tab tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"Object2Tab tab is not clickable, so could not verify activities task data" );
//		}
//		
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc026_AddDueDataAndStatusField(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		SetupPageBusinessLayer setup=new SetupPageBusinessLayer(driver);
//		HomePageBusineesLayer home=new HomePageBusineesLayer(driver);
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		String parentID=null;
//		//lp.switchToClassic();
//		String mode="Lightning";
//		if (home.clickOnSetUpLink()) {
//			parentID=switchOnWindow(driver);
//			if (parentID!=null) {
//			List<String> layoutName = new ArrayList<String>();
//			layoutName.add("Log a Call");
//			HashMap<String, String> sourceANDDestination = new HashMap<String, String>();
//			sourceANDDestination.put(PageLabel.Due_Date.toString(),PageLabel.Subject.toString());
//			sourceANDDestination.put(PageLabel.Status.toString(),PageLabel.Subject.toString());
//			
//			//scn.next();
//			List<String> abc = setup.DragNDrop("", mode, object.Global_Actions, objectFeatureName.pageLayouts, layoutName, sourceANDDestination);
//			ThreadSleep(10000);
//			if (!abc.isEmpty()) {
//				log(LogStatus.FAIL, "field not added/already present 1", YesNo.Yes);
//				sa.assertTrue(false, "field not added/already present 1");
//			}else{
//				log(LogStatus.INFO, "field added/already present 1", YesNo.Yes);
//			}
//			}
//			driver.close();
//			driver.switchTo().window(parentID);
//		}else {
//			log(LogStatus.FAIL, "could not click on setup link", YesNo.Yes);
//			sa.assertTrue(false, "could not click on setup link");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc027_CreateStandardCallAndVerifyCreatedCallInActivitiesTab_Action(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop = new CustomObjPageBusinessLayer(driver);
//		GlobalActionPageBusinessLayer gp = new GlobalActionPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		System.out.println(Smoke_Task2UpdatedSubject);
//		System.out.println(Smoke_Task2UpdatedPriority);
//		WebElement ele ;
//		String date=todaysDate;
//		
//		if (click(driver, gp.getGlobalActionIcon(projectName, 15), "Global Action Related item", action.BOOLEAN)) {
//			log(LogStatus.INFO,"Clicked on Global Action Related item",YesNo.No);
//			if (clickUsingJavaScript(driver, gp.getActionItem(projectName, GlobalActionItem.Log_a_Call, 15), "log call Link", action.BOOLEAN)) {
//				log(LogStatus.INFO,"Clicked on log call Link",YesNo.Yes);
//				ThreadSleep(2000);	
//
//				ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN,5);
//
//				if (ele==null) {
//					log(LogStatus.INFO,"Related Association Field is not present",YesNo.No);	
//				} else {
//					sa.assertTrue(false,"Related Association Field should not be present");
//					log(LogStatus.SKIP,"Related Association Field should not be present",YesNo.Yes);
//				}
//
//				// subject
//				ele=gp.getLabelTextBoxForGobalAction(projectName, GlobalActionItem.Log_a_Call, PageLabel.Subject.toString(),10);
//				
//				try {
//					ele.sendKeys(" ");
//				} catch (Exception e) {
//					// TODO Auto-generated catch block
//					e.printStackTrace();
//				}
//				
//				if (sendKeys(driver, ele, Smoke_TaskSTDLogACall1Subject, "Subject", action.SCROLLANDBOOLEAN)) {
//					log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//					ThreadSleep(1000);
//
//					// Due Date
//					if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), todaysDate, PageLabel.Due_Date.toString(), action.SCROLLANDBOOLEAN)) {
//						log(LogStatus.INFO, "Entered value to Due Date Text Box", YesNo.Yes);
//						ThreadSleep(1000);
//
//						// comment 
//						if (sendKeys(driver, ip.getcommentsTextBox(projectName, 10), Smoke_TaskSTDLogACall1Comment, "comments", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.ERROR, "entered value in Comment Text Area", YesNo.Yes);	
//						}
//						else {
//							log(LogStatus.ERROR, "comments textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"comments textbox is not visible so task could not be created" );
//						}
//
//
//						ele=ip.getDropdownOnTaskPopUp(projectName, PageName.NewEventPopUp, PageLabel.Status.toString(), action.SCROLLANDBOOLEAN, 10);
//						if (click(driver, ele, "Drop Down : "+PageLabel.Status.toString(),action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "Clicked on "+PageLabel.Status.toString()+" Drop Down", YesNo.Yes);	
//							ThreadSleep(2000);
//							
//							if (ip.SelectDropDownValue(projectName, PageName.NewEventPopUp, PageLabel.Status.toString(), Smoke_TaskSTDLogACall1Status, action.SCROLLANDBOOLEAN, 10)) {
//								log(LogStatus.INFO, "Selected : None For Label : "+PageLabel.Status.toString(), YesNo.Yes);	
//								ThreadSleep(1000);
//								
//							} else {
//								log(LogStatus.ERROR, "Not ABle to Select :  For Label : "+PageLabel.Status.toString(), YesNo.Yes);
//								sa.assertTrue(false,"Not ABle to Select :  For Label : "+PageLabel.Status.toString() );
//							}
//						}
//						// Name
//						ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TaskPage, PageLabel.Name.toString(), action.SCROLLANDBOOLEAN,15);
//						if (sendKeys(driver, ele, contactName,"Name Text Label", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Enter Value to Name Text Box : "+contactName,YesNo.Yes);	
//							ThreadSleep(1000);
//							ele =  cp.getContactNameOrRelatedAssociationNameOnTask(projectName, PageName.TaskPage, PageLabel.Name.toString(),contactName, action.SCROLLANDBOOLEAN,15);
//							if (click(driver, ele, "Select Name From Label : "+PageLabel.Name, action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on : "+contactName,YesNo.Yes);
//							} else {
//								sa.assertTrue(false,"Not Able to Click on : "+contactName);
//								log(LogStatus.SKIP,"Not Able to Click on : "+contactName,YesNo.Yes);	
//							}
//
//						}else {
//							sa.assertTrue(false,"Not Able to Enter Value to Name Text Box : "+contactName);
//							log(LogStatus.SKIP,"Not Able to Enter Value to Name Text Box : "+contactName,YesNo.Yes);	
//						}
//
//
//
//						// Related To
//						click(driver, ip.getrelatedAssociationsdropdownButton(projectName, PageName.TaskPage,PageLabel.Related_To.toString()
//								, action.SCROLLANDBOOLEAN, 10),"dropdown button", action.SCROLLANDBOOLEAN);
//						if (cp.SelectRelatedAssociationsdropdownButton(projectName, PageName.TaskPage, PageLabel.Related_To.toString(), TabName.TestCustomObjectTab, action.SCROLLANDBOOLEAN, 20)) {
//							log(LogStatus.INFO,"Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//							ThreadSleep(2000);	
//
//							ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TaskPage, PageLabel.Related_To.toString(), action.SCROLLANDBOOLEAN,15);
//							if (sendKeys(driver, ele,taskCustomObj1Name, "Related To Text Label", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Enter Value to Related To Text Box : "+taskCustomObj1Name,YesNo.Yes);	
//								ThreadSleep(1000);
//
//								ele =  cp.getContactNameOrRelatedAssociationNameOnTask(projectName, PageName.TaskPage, PageLabel.Related_To.toString(),taskCustomObj1Name, action.SCROLLANDBOOLEAN,15);
//								if (click(driver, ele, "Select TestCustomObject From Label : "+PageLabel.Related_To, action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"Clicked on : "+taskCustomObj1Name,YesNo.Yes);
//								} else {
//									sa.assertTrue(false,"Not Able to Click on : "+taskCustomObj1Name);
//									log(LogStatus.SKIP,"Not Able to Click on : "+taskCustomObj1Name,YesNo.Yes);	
//								}
//
//
//							}else {
//								sa.assertTrue(false,"Not Able to Enter Value to Related To Text Box : "+taskCustomObj1Name);
//								log(LogStatus.SKIP,"Not Able to Enter Value to Related To Text Box : "+taskCustomObj1Name,YesNo.Yes);	
//							}
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//						}
//						appLog.info(">>>");
//						//scn.next();
//						if (clickUsingJavaScript(driver, gp.getSaveButtonForEvent(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"successfully created task : "+Smoke_TaskSTDLogACall1Subject,  YesNo.Yes);
//							ThreadSleep(1000);
//							ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask15", excelLabel.Due_Date);
//							if (ip.clickOnTab(projectName, TabName.TaskTab)) {
//								log(LogStatus.INFO, "Clicked on Refesh Button", YesNo.No);	
//								ThreadSleep(1000);
//								ele=tp.getTaskNameLinkInSideMMenu(projectName, Smoke_TaskSTDLogACall1Subject, 15);
//								
//								if (click(driver, ele, Smoke_TaskSTDLogACall1Subject, action.BOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on "+Smoke_TaskSTDLogACall1Subject+" on SideMenu", YesNo.No);	
//									ThreadSleep(1000);
//									
//									String[][] fieldsWithValues= {{PageLabel.Subject.toString(),Smoke_TaskSTDLogACall1Subject},
//											{PageLabel.Due_Date.toString(),date},
//											{PageLabel.Related_To.toString(),taskCustomObj1Name},
//											{PageLabel.Comments.toString(),Smoke_TaskSTDLogACall1Comment},
//											{PageLabel.Name.toString(),contactName},
//											{PageLabel.Related_Associations.toString(),"Assign Multiple Associations"}};
//									
//									if (tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10)) {
//										log(LogStatus.INFO, "successfully verified "+Smoke_TaskSTDLogACall1Subject+" on task page", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "Not Able to verify "+Smoke_TaskSTDLogACall1Subject+" on task page", YesNo.Yes);
//										sa.assertTrue(false,"Not Able to verify "+Smoke_TaskSTDLogACall1Subject+" on task page");
//									}
//								} else {
//									log(LogStatus.ERROR, "Not Able to Click on "+Smoke_TaskSTDLogACall1Subject+" on SideMenu", YesNo.Yes);
//									sa.assertTrue(false,"Not Able to Click on "+Smoke_TaskSTDLogACall1Subject+" on SideMenu");
//								}
//								
//							} else {
//								log(LogStatus.ERROR, "Not Able to Click on task tab", YesNo.Yes);
//								sa.assertTrue(false,"Not Able to Click on task tab" );
//							}
//							
//						}
//						else {
//							log(LogStatus.ERROR, "save button is not clickable so task not created : "+Smoke_TaskSTDLogACall1Subject, YesNo.Yes);
//							sa.assertTrue(false,"save button is not clickable so task not created : "+Smoke_TaskSTDLogACall1Subject );
//						}
//
//					}else {
//						log(LogStatus.ERROR, "duedate textbox is not visible so task could not be created", YesNo.Yes);
//						sa.assertTrue(false,"duedate textbox is not visible so task could not be created" );
//					}
//				}
//				else {
//					log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//					sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on New Task Button for show more action");
//				log(LogStatus.SKIP,"Not Able to Click on New Task Button for show more action",YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TaskTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TaskTab,YesNo.Yes);
//		}
//		
//		
//		
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc027_CreateStandardCallAndVerifyCreatedCallInActivitiesTab_Impact(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop = new CustomObjPageBusinessLayer(driver);
//		GlobalActionPageBusinessLayer gp = new GlobalActionPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName);
//		taskstd1.add(taskCustomObj1Name);
//		taskstd1.add(Smoke_TaskSTDLogACall1Status);
//		taskstd1.add(crmUser1FirstName+" "+crmUser1LastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Call.toString());
//		taskstd1.add(Links.View.toString());
//		WebElement ele=null;
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask15", excelLabel.Due_Date);
//		if (ip.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_TaskSTDLogACall1Subject, taskstd1, action.BOOLEAN, 10);
//					ele = ip.viewLinkWRTsubjectRelatedTab(projectName, PageName.TestCustomObjectPage, Smoke_TaskSTDLogACall1Subject);
//					if (click(driver, ele, "view link", action.BOOLEAN)) {
//						String s=getText(driver, ip.getcommentsTextOnPopup(projectName, 20), "comments popup text", action.BOOLEAN);
//						if (s.contains(Smoke_TaskSTDLogACall1Comment)) {
//							log(LogStatus.INFO, "successfully verified "+Smoke_TaskSTDLogACall1Comment+" present on popup", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,  "not verified "+Smoke_TaskSTDLogACall1Comment+" on popup", YesNo.Yes);
//							sa.assertTrue(false,"not verified "+Smoke_TaskSTDLogACall1Comment+" on popup");
//
//						}
//						click(driver, ip.getCrossIconRAorComment(projectName,"Comment", 10), "cross icon", action.BOOLEAN);
//					}else {
//						log(LogStatus.ERROR,  "view link not clickable", YesNo.Yes);
//						sa.assertTrue(false,"view link not clickable");
//
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "created custom record1 is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"created custom record1 is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "custom tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"custom tab is not clickable, so could not verify activities task data" );
//		}
//		if (ip.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_TaskSTDLogACall1Subject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "contact4 is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"contact4 is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "Object2Tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"Object2Tab is not clickable, so could not verify activities task data" );
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc028_VerifyAssignMultipleAssociationsLinkForStandardTAsk_Action(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		WebElement ele ;
//		String parentID=driver.getWindowHandle();
//		String firstChildWin=null;
//		String secondChildWin=null;
//		String actualValue;
//		boolean flag=false;
//		String date=todaysDate;
//		
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 60), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//
//
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Meetings, Smoke_TaskSTDLogACall1Subject, action.BOOLEAN, 10);
//					if (ele!=null) {
//						log(LogStatus.INFO,Smoke_TaskSTDLogACall1Subject+" link present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);	
//
//						if (click(driver, ele, Smoke_TaskSTDLogACall1Subject, action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on : "+Smoke_TaskSTDLogACall1Subject,YesNo.No);
//							parentID = switchOnWindow(driver);
//							if (parentID!=null) {
//								log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+Smoke_TaskSTDLogACall1Subject,YesNo.Yes);
//								ThreadSleep(1000);
//								ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, Smoke_TaskSTDLogACall1Subject, action.BOOLEAN, 10);
//								if (ele!=null) {
//									log(LogStatus.INFO,"Landing Page Verified for : "+Smoke_TaskSTDLogACall1Subject,YesNo.No);	
//								} else {
//									sa.assertTrue(false,"Landing Page Not Verified for : "+Smoke_TaskSTDLogACall1Subject);
//									log(LogStatus.SKIP,"Landing Page Not Verified for : "+Smoke_TaskSTDLogACall1Subject,YesNo.Yes);
//								}
//								for (int k = 0; k < 3; k++) {
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 60, tp.getTaskPageFrame(projectName,60));
//
//									ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, TaskPagePageErrorMessage.RelatedAssociationText, action.BOOLEAN, 10);
//									if (click(driver, ele, TaskPagePageErrorMessage.RelatedAssociationText, action.BOOLEAN)) {
//										log(LogStatus.INFO,"Clicked on Link :  "+TaskPagePageErrorMessage.RelatedAssociationText,YesNo.No);	
//
//
//										firstChildWin = driver.getWindowHandle();
//										System.err.println("First Child Window ID: " + firstChildWin);
//
//										Set<String> allWindows = driver.getWindowHandles();
//										int i = 0;
//										for (String string : allWindows) {
//											System.err.println("IDs " + (++i) + ": " + string);
//										}
//										Iterator<String> i1 = allWindows.iterator();
//
//										while (i1.hasNext()) {
//											secondChildWin = i1.next();
//											if (!secondChildWin.equalsIgnoreCase(firstChildWin) && !secondChildWin.equalsIgnoreCase(parentID)) {
//												driver.switchTo().window(secondChildWin);
//												log(LogStatus.INFO,"Switch To Edit Task Window",YesNo.No);	
//												ThreadSleep(2000);
//
//												ele = tp.getTaskPoUpEditHeader(projectName, 10);
//												if (ele!=null) {
//													log(LogStatus.INFO,"Edit Header Ele Found",YesNo.No);	
//													actualValue=ele.getText().trim();
//
//													actualValue = ele.getText().trim();
//													String expectedValue=PageLabel.Edit.toString()+" "+Smoke_TaskSTDLogACall1Subject;
//													if (actualValue.contains(PageLabel.Edit.toString()) && actualValue.contains(Smoke_TaskSTDLogACall1Subject)) {
//														log(LogStatus.INFO,expectedValue+" matched msg for Edit PopUp", YesNo.No);
//
//													} else {
//														log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched msg for Edit PopUp", YesNo.Yes);
//														BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched msg for Edit PopUp");
//													}
//
//												} else {
//													sa.assertTrue(false,"Edit Header Ele Not Found");
//													log(LogStatus.SKIP,"Edit Header Ele Not Found",YesNo.Yes);
//												}
//
//
//												if (k==0) {
//													ele=tp.getcrossIcon(projectName, 5);
//												} else if(k==1) {
//													ele=tp.getCancelButton(projectName, 5);
//												}
//
//												if (k==0 || k==1) {
//													if (clickUsingJavaScript(driver, ele, "Cross/Cancel Button",action.BOOLEAN)) {
//														log(LogStatus.INFO,"Clicked on Cross/Cancel Button",YesNo.No);	
//														flag=true;
//													} else {
//														sa.assertTrue(false,"Not Able to Click on Cross/Cancel Button");
//														log(LogStatus.SKIP,"Not Able to Click on Cross/Cancel Button",YesNo.Yes);
//													}	
//
//													if (flag) {
//														log(LogStatus.INFO,"No Error",YesNo.No);
//													} else {
//														sa.assertTrue(false,"Some Error");
//														log(LogStatus.SKIP,"Some Error",YesNo.Yes);
//													}
//													flag=false;
//													try {
//														driver.switchTo().window(firstChildWin);
//													} catch (Exception e) {
//														// TODO Auto-generated catch block
//														e.printStackTrace();
//													}
//
//												}
//
//												if(k==2){
//
//
//													flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object1Tab, Smoke_TaskINS5Name, action.SCROLLANDBOOLEAN, 10);		
//													if (flag) {
//														log(LogStatus.SKIP,"Selected "+Smoke_TaskINS5Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object1Tab)+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//													} else {
//														sa.assertTrue(false,"Not Able to Select "+Smoke_TaskINS5Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.Object1Tab)+" For Label "+PageLabel.Related_Associations);
//														log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskINS5Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object1Tab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//													}
//
//													flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object3Tab, Smoke_TaskFund2Name, action.SCROLLANDBOOLEAN, 10);		
//													if (flag) {
//														log(LogStatus.SKIP,"Selected "+Smoke_TaskFund2Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object3Tab)+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//													} else {
//														sa.assertTrue(false,"Not Able to Select "+Smoke_TaskFund2Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.Object3Tab)+" For Label "+PageLabel.Related_Associations);
//														log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskFund2Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object3Tab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//													}
//
//													flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, taskCustomObj2Name, action.SCROLLANDBOOLEAN, 10);		
//													if (flag) {
//														log(LogStatus.SKIP,"Selected "+taskCustomObj2Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//													} else {
//														sa.assertTrue(false,"Not Able to Select "+taskCustomObj2Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations);
//														log(LogStatus.SKIP,"Not Able to Select "+taskCustomObj2Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//													}
//
//													// Subject
//
//													if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.TaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_TaskSTDLogACall1UpdatedSubject, "Subject", action.SCROLLANDBOOLEAN)) {
//														log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//														ThreadSleep(1000);
//
//														//  Priority
//
//														ele=cp.getDropdownOnTaskPopUp(projectName, PageName.Object2Page,PageLabel.Priority.toString(), action.SCROLLANDBOOLEAN, 10);
//														if (click(driver, ele, "Drop Down : "+PageLabel.Priority.toString(),action.SCROLLANDBOOLEAN)) {
//															log(LogStatus.ERROR, "Select/Click on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);	
//															ThreadSleep(2000);
//
//															if (cp.SelectDropDownValue(projectName, PageName.Object2Page, PageLabel.Priority.toString(), Smoke_TaskSTDLogACall1UpdatedPriority, action.SCROLLANDBOOLEAN, 10)) {
//																log(LogStatus.ERROR, "Selected : "+Smoke_TaskSTDLogACall1UpdatedPriority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);	
//																ThreadSleep(1000);
//
//															} else {
//																log(LogStatus.ERROR, "Not ABle to Select : "+Smoke_TaskSTDLogACall1UpdatedPriority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);
//																sa.assertTrue(false,"Not ABle to Select : "+Smoke_TaskSTDLogACall1UpdatedPriority+" For Label : "+PageLabel.Priority.toString() );
//															}
//
//														} else {
//															log(LogStatus.ERROR, "Click on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);
//															sa.assertTrue(false,"Click on "+PageLabel.Priority.toString()+" Drop Down" );
//														}
//
//														// comment 
//
//														if (sendKeys(driver, ip.getcommentsTextBox(projectName, 10), Smoke_TaskSTDLogACall1UpdatedComment, "comments", action.SCROLLANDBOOLEAN)) {
//															log(LogStatus.ERROR, "entered value in Comment Text Area", YesNo.Yes);	
//														}
//														else {
//															log(LogStatus.ERROR, "comments textbox is not visible so task could not be created", YesNo.Yes);
//															sa.assertTrue(false,"comments textbox is not visible so task could not be created" );
//														}
//														
//														System.err.println(">>>>>>>>>>>>>>>>>>>>>>Save Button<<<<<<<<<<<<<<<<<<<<<<<<<");
//														// 
//														if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//															
//															log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//															flag=true;
//															ThreadSleep(2000);
//
//															/*ele = cp.getCreatedConfirmationMsg(projectName, 15);
//															if (ele!=null) {
//																actualValue = ele.getText().trim();
//																String expectedValue=tp.taskCreatesMsg(projectName, Smoke_TaskSTDLogACall1UpdatedSubject);
//																if (actualValue.equals(expectedValue)) {
//																	log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//																} else {
//																	log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//																	BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//																}
//															} else {
//																sa.assertTrue(false,"Created Task Msg Ele not Found");
//																log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//															}*/
//															
//															switchToDefaultContent(driver);
//															switchToFrame(driver, 60, tp.getFrame(PageName.TaskPage,60));
//
//															ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, Smoke_TaskFund2Name, action.BOOLEAN, 10);
//															if (click(driver, ele, Smoke_TaskFund1Name, action.BOOLEAN)) {
//																ThreadSleep(5000);
//																ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, Smoke_TaskFund2Name, action.BOOLEAN, 10);
//																if (ele!=null) {
//																	log(LogStatus.INFO, "successfully verified opening of "+Smoke_TaskFund2Name+" detail page", YesNo.No);
//																}
//																else {
//																	log(LogStatus.ERROR, "fund detail page could not be opened", YesNo.Yes);
//																	sa.assertTrue(false,"fund detail page could not be opened" );
//																}
//																driver.navigate().back();
//															}
//															else {
//																log(LogStatus.ERROR, "fund/deal name is not clickable", YesNo.Yes);
//																sa.assertTrue(false,"fund/deal name is not clickable" );
//														
//															}
//															String[][] fieldsWithValues= {{PageLabel.Subject.toString(),Smoke_TaskSTDLogACall1UpdatedSubject},
//																	{PageLabel.Priority.toString(),Smoke_TaskSTDLogACall1UpdatedPriority}};
//
//															tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);
//
//															// Related Association
//															ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), action.BOOLEAN, 10);
//															if (ele!=null) {
//																actualValue = ele.getText().trim();
//																log(LogStatus.INFO,"Actual Value For Related Association Link : "+actualValue, YesNo.No);
//																String expectedValue=Smoke_TaskINS5Name+", "+Smoke_TaskFund2Name+", "+taskCustomObj2Name;
//																if (actualValue.equals(expectedValue)) {
//																	log(LogStatus.INFO,expectedValue+" matched FOR Related Association Label", YesNo.No);
//
//																} else {
//																	log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Related Association Label", YesNo.Yes);
//																	BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Related Association LABEL");
//																}
//
//																// Comment
//																ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Comments.toString(), action.BOOLEAN, 10);
//																if (ele!=null) {
//																	actualValue = ele.getText().trim();
//																	log(LogStatus.INFO,"Actual Value For Comment : "+actualValue, YesNo.No);
//																	String[] commentValue = {expectedValue,TaskPagePageErrorMessage.Dots,Smoke_TaskSTDLogACall1UpdatedComment};
//																	for (String comment : commentValue) {
//																		if (actualValue.contains(comment)) {
//																			log(LogStatus.INFO,comment+" matched for Comment Label", YesNo.No);
//
//																		} else {
//																			log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched for Comment Label", YesNo.Yes);
//																			BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched for Comment Label");
//																		}
//																	}
//																} else {
//																	sa.assertTrue(false,"Comment Label Ele not Found");
//																	log(LogStatus.SKIP,"Comment Label Ele not Found",YesNo.Yes);
//																}
//
//															} else {
//																sa.assertTrue(false,"Comment Label Ele not Found");
//																log(LogStatus.SKIP,"Comment Label Ele not Found",YesNo.Yes);
//
//															}
//															System.err.println(">>>>>>>>>>>>>>>>>>>>>>Save222222222222222 Button<<<<<<<<<<<<<<<<<<<<<<<<<");
//															// 	
//														}
//
//														else {
//															log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//															sa.assertTrue(false,"save button is not clickable so task not created" );
//														}
//
//
//
//													}
//													else {
//														log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//														sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//													}
//
//
//												}
//
//											}
//
//										}
//
//									} else {
//										sa.assertTrue(false,"Not Able to Click on Link :  "+TaskPagePageErrorMessage.RelatedAssociationText);
//										log(LogStatus.SKIP,"Not Able to Click on Link :  "+TaskPagePageErrorMessage.RelatedAssociationText,YesNo.Yes);
//									}
//
//
//								}
//
//							} else {
//								sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+Smoke_TaskSTD1Subject);
//								log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+Smoke_TaskSTD1Subject,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on : "+Smoke_TaskSTD1Subject);
//							log(LogStatus.SKIP,"Not Able to Click on : "+Smoke_TaskSTD1Subject,YesNo.Yes);
//						}
//					} else {
//						sa.assertTrue(false,Smoke_TaskSTD1Subject+" link not present on Sub Tab : "+RelatedTab.Meetings);
//						log(LogStatus.SKIP,Smoke_TaskSTD1Subject+" link not present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact Not Found : "+contactName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//		Set<String> allWindows=driver.getWindowHandles();
//		for (String s:allWindows) {
//			driver.switchTo().window(s);
//			if (!s.equalsIgnoreCase(parentID))
//				driver.close();
//		}
//		driver.switchTo().window(parentID);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc028_VerifyAssignMultipleAssociationsLinkForStandardTAsk_Impact(String projectName) {
//	LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//	InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//	ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//	TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//	lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//	String contactName = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//	String owner = crmUser1FirstName+" "+crmUser1LastName;
//	List<String> taskstd1=new LinkedList<String>();
//	String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask15", excelLabel.Due_Date);
//	
//	taskstd1.add(contactName);
//	taskstd1.add(taskCustomObj1Name+" +3");
//	taskstd1.add(Smoke_TaskSTDLogACall1Status);
//	taskstd1.add(owner);
//	taskstd1.add("");
//	taskstd1.add(Activity.Call.toString());
//	taskstd1.add(Links.View.toString());	
//
//	RelatedTab[] relatabTabs = {RelatedTab.Activities};
//	String[] testCustomObjects = {taskCustomObj1Name,taskCustomObj2Name};
//	for (String testCustomObject : testCustomObjects) {
//		if (cp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, testCustomObject, 20)) {
//				log(LogStatus.INFO,"Clicked on Test Custom Object : "+testCustomObject,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//						ThreadSleep(10000);
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 10, cp.getFrame(PageName.ActivitiesOrMeetings, 10));
//						WebElement ele=ip.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, Smoke_TaskSTDLogACall1UpdatedSubject, action.SCROLLANDBOOLEAN, 10);
//						if (ele!=null) {
//							log(LogStatus.INFO, "successfully verified presence of task",YesNo.No);
//							cp.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, date, Smoke_TaskSTDLogACall1UpdatedSubject, taskstd1, action.BOOLEAN, 10);
//
//						}
//						else {
//							log(LogStatus.ERROR, "---bug----task link not found, it should be present",YesNo.Yes);
//							sa.assertTrue(false, "---bug----task link not found, it should be present");
//						}
//						
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//					}
//				}
//
//			} else {
//				sa.assertTrue(false,"Test custom object Not Found : "+testCustomObject);
//				log(LogStatus.SKIP,"Test custom object  Not Found : "+testCustomObject,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//	}
//
//	switchToDefaultContent(driver);
//	if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//		log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//		ThreadSleep(1000);
//		if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS5Name, 20)) {
//			log(LogStatus.INFO,"Clicked on Entity/Account : "+Smoke_TaskINS5Name,YesNo.No);
//			ThreadSleep(1000);
//			for (RelatedTab relatedTab : relatabTabs) {
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//					ThreadSleep(10000);
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, ip.getFrame(PageName.ActivitiesOrMeetings,10));
//					WebElement ele=ip.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, Smoke_TaskSTDLogACall1UpdatedSubject, action.SCROLLANDBOOLEAN, 10);
//					if (ele!=null) {
//						log(LogStatus.INFO, "successfully verified presence of task",YesNo.No);
//						cp.verifyingRelatedTabData2(projectName, PageName.Object1Page, relatedTab,date, Smoke_TaskSTDLogACall1UpdatedSubject, taskstd1, action.BOOLEAN, 10);
//					}
//					else {
//						log(LogStatus.ERROR, "---bug----task link not found, it should be present",YesNo.Yes);
//						sa.assertTrue(false, "---bug----task link not found, it should be present");
//					}
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//			}
//
//		} else {
//			sa.assertTrue(false,"Entity/Account Not Found : "+Smoke_TaskINS5Name);
//			log(LogStatus.SKIP,"Entity/Account  Not Found : "+Smoke_TaskINS5Name,YesNo.Yes);
//		}
//
//	} else {
//		sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//		log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//	}
//
//	switchToDefaultContent(driver);
//	if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//		log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//		ThreadSleep(1000);
//		if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//			log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//			ThreadSleep(1000);
//			for (RelatedTab relatedTab : relatabTabs) {
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(10000);
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getFrame(PageName.ActivitiesOrMeetings,10));
//					WebElement ele=ip.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, Smoke_TaskSTDLogACall1UpdatedSubject, action.SCROLLANDBOOLEAN, 10);
//					if (ele!=null) {
//						log(LogStatus.INFO, "successfully verified presence of task",YesNo.No);
//						cp.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab,date, Smoke_TaskSTDLogACall1UpdatedSubject, taskstd1, action.BOOLEAN, 10);
//					}
//					else {
//						log(LogStatus.ERROR, "---bug----task link not found, it should be present",YesNo.Yes);
//						sa.assertTrue(false, "---bug----task link not found, it should be present");
//					}
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//			}
//
//		} else {
//			sa.assertTrue(false,"Contact Not Found : "+contactName);
//			log(LogStatus.SKIP,"Contact  Not Found : "+contactName,YesNo.Yes);
//		}
//
//	} else {
//		sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//		log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//	}
//	switchToDefaultContent(driver);
//	lp.CRMlogout();
//	sa.assertAll();
//}
//
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc029_VerifyNewLogACallAtPackageObjectFundOrDeal(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		boolean flag=false;
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contactName);
//		taskstd1.add(Smoke_TaskFund1Name);
//		taskstd1.add(Status.Completed.toString().replace("_", " "));
//		taskstd1.add(owner);
//		taskstd1.add("");
//		taskstd1.add(Activity.Call.toString());
//		taskstd1.add(Links.View.toString());	
//		RelatedTab relatedTab = RelatedTab.Activities;
//		String date=todaysDate;
//		
//		if (cp.clickOnTab(projectName, TabName.Object3Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object3Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_TaskFund1Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Fund/Deal : "+Smoke_TaskFund1Name,YesNo.No);
//				ThreadSleep(1000);
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object3Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//
//					if (clickUsingJavaScript(driver,fp.getButtonLogCallMultiple(projectName, 60), "log call Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New task button on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//						ThreadSleep(2000);	
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.Object3Page,PageLabel.New_Task.toString(), action.BOOLEAN, 30);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						ele = cp.getRelatedAssciationDefaultSelectedDropDown(projectName, TabName.Object1Tab, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO, "Default Selected For "+PageLabel.Related_Associations.toString()+" Verified",YesNo.No);	
//
//
//						} else {
//							sa.assertTrue(false,"Default Selected object For "+PageLabel.Related_Associations.toString()+" Not Verified");
//							log(LogStatus.ERROR, "Default Selected object For "+PageLabel.Related_Associations.toString()+" Not Verified",YesNo.Yes);
//
//						}
//
//						List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.Object3Page, PageLabel.Related_Associations.toString(),false, action.SCROLLANDBOOLEAN, 15);
//						if (!eleList.isEmpty() && eleList.size()==1) {
//							log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//							ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(),false, Smoke_TaskFund1Name, action.SCROLLANDBOOLEAN, 15);
//							if (ele!=null) {
//								log(LogStatus.INFO, Smoke_TaskFund1Name+" is prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//
//							} else {
//								sa.assertTrue(false,Smoke_TaskFund1Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString());
//								log(LogStatus.ERROR, Smoke_TaskFund1Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//							}
//
//						} else {
//							sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), TabName.Object2Tab, contactName, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+contactName+" For Label "+PageLabel.Name,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+contactName+" For Label "+PageLabel.Name);
//							log(LogStatus.SKIP,"Not Able to Select "+contactName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//						}
//
//
//						
//							appLog.info(">>>>>");
//							if (clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//
//
//								ele = cp.getCreatedConfirmationMsg(projectName, 15);
//								if (ele!=null) {
//									String actualValue = ele.getText().trim();
//									String expectedValue=tp.taskCreatesMsg(projectName, Activity.Call.toString());
//									if (actualValue.contains(expectedValue)) {
//										log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//									} else {
//										log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//										BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//									}
//								} else {
//									sa.assertTrue(false,"Created Task Msg Ele not Found");
//									log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//								}
//								appLog.info(">>>>>");
//								refresh(driver);
//								click(driver, cp.getRelatedTab(projectName, PageName.Object3Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN);
//								log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//
//
//								switchToDefaultContent(driver);
//								switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//
//								//ele = cp.verifyingRelatedTabData(projectName, PageName.Object3Page, relatedTab, "", Smoke_BoardMeetingTaskSubject, contactName, Smoke_TaskFund1Name, null, Status.Not_Started.toString(), owner, "", Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//								cp.verifyingRelatedTabData2(projectName, PageName.Object3Page, relatedTab, date, Activity.Call.toString(), taskstd1, action.BOOLEAN, 15);
//								
//
//							}
//							else {
//								log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//							}
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings);
//						log(LogStatus.SKIP,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Fund/Deal Not Found : "+Smoke_TaskFund1Name);
//				log(LogStatus.SKIP,"Fund/Deal  Not Found : "+Smoke_TaskFund1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc030_VerifyLogaCallAtCustomObjectPage(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop = new CustomObjPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		String date=todaysDate;
//		
//		WebElement ele ;
//		boolean flag=false;
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contactName);
//		taskstd1.add(taskCustomObj2Name);
//		taskstd1.add(Status.Completed.toString());
//		taskstd1.add(AdminUserFirstName+" "+AdminUserLastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Call.toString());
//		taskstd1.add(Links.View.toString());	
//		RelatedTab relatedTab = RelatedTab.Activities;
//
//		if (cp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cop.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj2Name, 10)){
//				log(LogStatus.INFO,"Clicked on custom tab record : "+taskCustomObj2Name,YesNo.No);
//				ThreadSleep(1000);
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//
//					if (clickUsingJavaScript(driver, cp.getButtonLogCallMultiple(projectName, 60), "Log call Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New task button on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//						ThreadSleep(2000);	
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.TestCustomObjectPage,PageLabel.New_Task.toString(), action.BOOLEAN, 30);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						ele = cp.getRelatedAssciationDefaultSelectedDropDown(projectName, TabName.Object1Tab, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO, "Default Selected For "+PageLabel.Related_Associations.toString()+" Verified",YesNo.No);	
//
//
//						} else {
//							sa.assertTrue(false,"Default Selected object For "+PageLabel.Related_Associations.toString()+" Not Verified");
//							log(LogStatus.ERROR, "Default Selected object For "+PageLabel.Related_Associations.toString()+" Not Verified",YesNo.Yes);
//
//						}
//
//						List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(),false, action.SCROLLANDBOOLEAN, 15);
//						if (!eleList.isEmpty() && eleList.size()==1) {
//							log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//							ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(),false, taskCustomObj2Name, action.SCROLLANDBOOLEAN, 15);
//							if (ele!=null) {
//								log(LogStatus.INFO, taskCustomObj2Name+" is prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//
//							} else {
//								sa.assertTrue(false,taskCustomObj2Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString());
//								log(LogStatus.ERROR, taskCustomObj2Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//							}
//
//						} else {
//							sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//						// Assigned_To Cross Button Click
//						if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(),false, owner, action.SCROLLANDBOOLEAN, 15)) {
//							log(LogStatus.INFO, "Clicked on Cross Button against : "+owner+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.No);	
//							
//							ThreadSleep(2000);
//							// Assigned To
//							owner = AdminUserFirstName+" "+AdminUserLastName;
//							flag=tp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(), TabName.TestCustomObjectTab, owner, action.BOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.INFO,"Selected "+owner+" For  Drown Down Value For Label "+PageLabel.Assigned_To,YesNo.No);
//								ThreadSleep(1000);
//								
//							} else {
//								sa.assertTrue(false,"could not select admin name in "+PageLabel.Assigned_To.toString());
//								log(LogStatus.ERROR, "could not select admin name in "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//
//							}
//						}
//						 else {
//								sa.assertTrue(false,"cross button could not be clicked on "+PageLabel.Assigned_To.toString());
//								log(LogStatus.ERROR, "cross button could not be clicked on "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//
//							}
//						
//						//name
//						
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(), TabName.Object2Tab, contactName, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+contactName+" For Label "+PageLabel.Name,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+contactName+" For Label "+PageLabel.Name);
//							log(LogStatus.SKIP,"Not Able to Select "+contactName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//						}
//
//
//						// Subject
//						ele= cp.getLabelTextBox(projectName, PageName.TaskPage.toString(), PageLabel.Subject.toString(),20);
//						scrollDownThroughWebelement(driver, ele, "subject");
//						if (sendKeys(driver,ele, Smoke_TaskSendLetterSubject, PageLabel.Subject.toString(), action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//							ThreadSleep(1000);
//							if (sendKeys(driver, cp.getcommentsTextBox(projectName, 10), Smoke_TaskSendLetterComment, "comments", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO, "Entered value to comments Text Box "+Smoke_TaskSendLetterComment, YesNo.Yes);
//									
//							}else {
//								sa.assertTrue(false,"comments text box is not visible");
//								log(LogStatus.ERROR,"comments text box is not visible",YesNo.Yes);
//
//							}
//							appLog.info(">>>>>");
//							//scn.next();
//							if (clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//								
//								ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask17", excelLabel.Due_Date);
//								
//								ele = cp.getCreatedConfirmationMsg(projectName, 15);
//								if (ele!=null) {
//									String actualValue = ele.getText().trim();
//									String expectedValue=tp.taskCreatesMsg(projectName, Smoke_TaskSendLetterSubject);
//									if (actualValue.contains(expectedValue)) {
//										log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//									} else {
//										log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//										sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//									}
//								} else {
//									sa.assertTrue(false,"Created Task Msg Ele not Found");
//									log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//								}
//								appLog.info(">>>>>");
//							//	 
//								switchToDefaultContent(driver);
//								if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//									
//									switchToFrame(driver, 10, cop.getFrame(PageName.ActivitiesOrMeetings, 10));
//									log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//									//ele = cp.verifyingRelatedTabData(projectName, PageName.Object3Page, relatedTab, "", Smoke_BoardMeetingTaskSubject, contactName, Smoke_TaskFund1Name, null, Status.Not_Started.toString(), owner, "", Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//								cp.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, date, Smoke_TaskSendLetterSubject, taskstd1, action.BOOLEAN, 15);
//								}
//								else {
//									log(LogStatus.ERROR, "related tab activities is not clickable so cannot verify task", YesNo.Yes);
//									sa.assertTrue(false,"related tab activities is not clickable so cannot verify task" );
//										
//								}
//
//								if (sendKeys(driver, cp.getsearchTextboxActivities(projectName, 10), Smoke_TaskSendLetterSubject, "search textbox", action.SCROLLANDBOOLEAN)) {
//									if (cp.getsearchCrossActivities(projectName, 10)!=null) {
//										log(LogStatus.INFO, "search cross icon is successfully present after entering text", YesNo.No);
//									}else {
//										log(LogStatus.ERROR, "related tab activities is not clickable so cannot verify task", YesNo.Yes);
//										sa.assertTrue(false,"related tab activities is not clickable so cannot verify task" );
//									}
//									if (click(driver, cp.getsearchIconActivities(projectName, 10), "search icon activities", action.SCROLLANDBOOLEAN)) {
//										cp.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, date, Smoke_TaskSendLetterSubject, taskstd1, action.BOOLEAN, 15);
//										
//									}else {
//										log(LogStatus.ERROR, "search icon is not clickable, so cannot verify search functionality", YesNo.Yes);
//										sa.assertTrue(false,"search icon is not clickable, so cannot verify search functionality" );
//									}
//								}else {
//									log(LogStatus.ERROR, "search textbox is not visible, so cannot verify search functionality", YesNo.Yes);
//									sa.assertTrue(false,"search textbox is not visible, so cannot verify search functionality" );
//								}
//							}
//							else {
//								log(LogStatus.ERROR, "save button is not clickable so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"save button is not clickable so task could not be created" );
//							}
//
//						}else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on New task button on Sub Tab : "+RelatedTab.Activities);
//						log(LogStatus.SKIP,"Not Able to Click on New task button on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Fund/Deal Not Found : "+Smoke_TaskFund1Name);
//				log(LogStatus.SKIP,"Fund/Deal  Not Found : "+Smoke_TaskFund1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc031_1_CreateEventsWithMeetingTypeAction(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		GlobalActionPageBusinessLayer gp = new GlobalActionPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		boolean flag1=false,flag2=false;
//		String contactName= Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		TabName tabName;
//		String relatedValue;
//		String meetingType="--None--";
//		String startDate = null,startDateToWrite=null;
//		String endDate = null,endDateToWrite=null;
//		String meetingEventSubject = null;
//
//		for (int k = 0; k < 6; k++) {
//			
//			
//			if (click(driver, gp.getGlobalActionIcon(projectName, 15), "Global Action Related item", action.BOOLEAN)) {
//				log(LogStatus.INFO,"Clicked on Global Action Related item",YesNo.No);
//				if (clickUsingJavaScript(driver, gp.getActionItem(projectName, GlobalActionItem.New_Event, 15), "New Event Link", action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on New Event Link",YesNo.Yes);
//					ThreadSleep(2000);	
//
//					click(driver, gp.getMaximizeIcon(projectName, 15), "Maximize Icon", action.BOOLEAN);
//					if (k<=2) {
//						startDate = tomorrowsDate;
//						endDate = dayAfterTomorrowsDate;
//						startDateToWrite=tomorrowsDate;
//						endDateToWrite=dayAfterTomorrowsDate;
//						
//					} else {
//						startDate = dayBeforeYesterdaysDate;
//						endDate = yesterdaysDate;
//						startDateToWrite=dayBeforeYesterdaysDate;
//						endDateToWrite=yesterdaysDate;
//						
//						
//					}
//					
//					
//					if (k==0 || k==3) {
//						tabName=TabName.Object1Tab;
//						relatedValue = Smoke_TaskINS4Name;
//					} else if(k==1 || k==4) {
//						tabName=TabName.Object3Tab;
//						relatedValue = Smoke_TaskFund1Name;
//					}else {
//						tabName=TabName.TestCustomObjectTab;
//						relatedValue = taskCustomObj1Name;
//					}
//					meetingEventSubject=ExcelUtils.readData(testCasesFilePath, "Events", excelLabel.Variable_Name,"AATASKUPEV"+(k+1), excelLabel.Subject);
//					ExcelUtils.writeData(startDateToWrite, "Events", excelLabel.Variable_Name, "AATASKUPEV"+(k+1), excelLabel.Start_Date);
//					ExcelUtils.writeData(endDateToWrite, "Events", excelLabel.Variable_Name, "AATASKUPEV"+(k+1), excelLabel.End_Date);
//					
//					String[][] event1 = {{PageLabel.Subject.toString(),meetingEventSubject},
//							{PageLabel.Start_Date.toString(),startDate},{PageLabel.Start_Time.toString(),startingTime},
//							{PageLabel.End_Date.toString(),endDate},{PageLabel.End_Time.toString(),endTime},
//							{PageLabel.Name.toString(),contactName}};
//
//					flag1=gp.enterValueForNewEvent(projectName, GlobalActionItem.New_Event, event1, 10);
//					clickUsingJavaScript(driver, lp.getrelatedAssociationsdropdownButton(projectName, PageName.TaskPage,PageLabel.Related_To.toString()
//							, action.BOOLEAN, 10),"dropdown button", action.BOOLEAN);
//					
//					flag2 = gp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.NewEventPopUp, PageLabel.Related_To.toString(), tabName, relatedValue, action.SCROLLANDBOOLEAN,10);		
//					
//					appLog.info("using related value : "+relatedValue);
//					appLog.info(">>>>");
//				//	 
//					if (flag1) {
//						if (flag2) {
//							log(LogStatus.INFO,"Selected "+relatedValue+" For Label "+PageLabel.Related_To,YesNo.No);
//							if (click(driver, gp.getSaveButtonForEvent(projectName, 10), "Save Button", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Click on Save Button For Event : "+meetingEventSubject,YesNo.No);		
//								ThreadSleep(500);
//							}
//							else {
//								sa.assertTrue(false,"Not Able to Click on Save Button For Event : "+meetingEventSubject);
//								log(LogStatus.SKIP,"Not Able to Click on Save Button For Event : "+meetingEventSubject,YesNo.Yes);	
//							}
//
//						} else {
//							BaseLib.sa.assertTrue(false,"Not Able to Select "+relatedValue+" For Label "+PageLabel.Related_To);
//							log(LogStatus.ERROR,"Not Able to Select "+relatedValue+" For Label "+PageLabel.Related_To,YesNo.Yes);
//
//						}
//					}else {
//						BaseLib.sa.assertTrue(false,"Event can not created as Some data is not entered : "+meetingEventSubject);
//						log(LogStatus.ERROR,"Event can not created as Some data is not entered : "+meetingEventSubject,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on New Event Link");
//					log(LogStatus.SKIP,"Not Able to Click on New Event Link",YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Global Action Related item");
//				log(LogStatus.SKIP,"Not Able to Click on Global Action Related item",YesNo.Yes);
//			}
//			
//		}
//	
//
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc031_2_verifyCreatedEventsAtMeetingTabImpact(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		WebElement ele ;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		int i=0;
//		String typeValue="Tasks and Events";
//		switchToDefaultContent(driver);
//		String startDate1=ExcelUtils.readData(testCasesFilePath, "Events", excelLabel.Variable_Name,"AATASKUPEV1", excelLabel.Start_Date);
//		String startDate2=ExcelUtils.readData(testCasesFilePath, "Events", excelLabel.Variable_Name,"AATASKUPEV4", excelLabel.Start_Date);
//		List<String> meetingEvent1=new LinkedList<String>();
//		meetingEvent1.add(contactName);
//		meetingEvent1.add(Smoke_TaskINS4Name);
//		meetingEvent1.add("");
//		meetingEvent1.add(owner);
//		meetingEvent1.add("");
//		meetingEvent1.add(Activity.Event.toString());
//		meetingEvent1.add(Links.View.toString());	
//		
//		List<String> meetingEvent2=new LinkedList<String>();
//		meetingEvent2.add(contactName);
//		meetingEvent2.add(Smoke_TaskFund1Name);
//		meetingEvent2.add("");
//		meetingEvent2.add(owner);
//		meetingEvent2.add("");
//		meetingEvent2.add(Activity.Event.toString());
//		meetingEvent2.add(Links.View.toString());
//		
//		List<String> meetingEvent3=new LinkedList<String>();
//		meetingEvent3.add(contactName);
//		meetingEvent3.add(taskCustomObj1Name);
//		meetingEvent3.add("");
//		meetingEvent3.add(owner);
//		meetingEvent3.add("");
//		meetingEvent3.add(Activity.Event.toString());
//		meetingEvent3.add(Links.View.toString());
//		
//		List<String> meetingEvent4=new LinkedList<String>();
//		meetingEvent4.add(contactName);
//		meetingEvent4.add(Smoke_TaskINS4Name);
//		meetingEvent4.add("");
//		meetingEvent4.add(owner);
//		meetingEvent4.add("");
//		meetingEvent4.add(Activity.Event.toString());
//		meetingEvent4.add(Links.View.toString());
//		
//		List<String> meetingEvent5=new LinkedList<String>();
//		meetingEvent5.add(contactName);
//		meetingEvent5.add(Smoke_TaskFund1Name);
//		meetingEvent5.add("");
//		meetingEvent5.add(owner);
//		meetingEvent5.add("");
//		meetingEvent5.add(Activity.Event.toString());
//		meetingEvent5.add(Links.View.toString());
//		
//		
//		List<String> meetingEvent6=new LinkedList<String>();
//		meetingEvent6.add(contactName);
//		meetingEvent6.add(taskCustomObj1Name);
//		meetingEvent6.add("");
//		meetingEvent6.add(owner);
//		meetingEvent6.add("");
//		meetingEvent6.add(Activity.Event.toString());
//		meetingEvent6.add(Links.View.toString());
//		RelatedTab relatedTab=RelatedTab.Activities;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, ip.getFrame(PageName.ActivitiesOrMeetings,10));
//
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, taskUpcomingEvent1Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskUpcomingEvent1Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskUpcomingEvent1Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskUpcomingEvent1Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, taskUpcomingEvent2Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskUpcomingEvent2Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskUpcomingEvent2Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskUpcomingEvent2Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, taskUpcomingEvent3Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskUpcomingEvent3Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskUpcomingEvent3Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskUpcomingEvent3Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, taskCompletedEvent1Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskCompletedEvent1Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskCompletedEvent1Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskCompletedEvent1Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, taskCompletedEvent2Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskCompletedEvent2Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskCompletedEvent2Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskCompletedEvent2Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, taskCompletedEvent3Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskCompletedEvent3Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskCompletedEvent3Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskCompletedEvent3Subject+" is present but it should not be");
//						}
//						
//
//							if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.BOOLEAN)) {
//								log(LogStatus.INFO,"Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.No);		
//								ThreadSleep(500);
//								if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Type.toString(), 10), typeValue, typeValue)) {
//									log(LogStatus.INFO, "successfully Selected "+typeValue, YesNo.No);
//									ThreadSleep(500);
//
//									if (click(driver, ip.clearApplyButtonOnAdvancedFilter(projectName,"apply", 10), "Apply Button", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Click on Apply Button : "+relatedTab+" so going to verify Event Data",YesNo.No);		
//										ThreadSleep(500);
//									}
//									else {
//										sa.assertTrue(false,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+contactName);
//										log(LogStatus.SKIP,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+contactName,YesNo.Yes);	
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Selected "+typeValue+" for "+contactName, YesNo.No);
//									sa.assertTrue(false, "Not Able to Selected "+typeValue+" for "+contactName);
//								}
//
//							}else {
//								sa.assertTrue(false,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+contactName);
//								log(LogStatus.SKIP,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+contactName,YesNo.Yes);		
//							}
//					
//					
//						
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, startDate1, taskUpcomingEvent1Subject, meetingEvent1, action.SCROLLANDBOOLEAN, 10);	
//					
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, startDate1, taskUpcomingEvent2Subject, meetingEvent2, action.SCROLLANDBOOLEAN, 10);	
//					
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, startDate1,taskUpcomingEvent3Subject, meetingEvent3, action.SCROLLANDBOOLEAN, 10);	
//					
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, startDate2, taskCompletedEvent1Subject, meetingEvent4, action.SCROLLANDBOOLEAN, 10);	
//					
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, startDate2, taskCompletedEvent2Subject, meetingEvent5, action.SCROLLANDBOOLEAN, 10);	
//					
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, startDate2, taskCompletedEvent3Subject, meetingEvent6, action.SCROLLANDBOOLEAN, 10);	
//					
//						
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName,YesNo.Yes);
//					}
//				
//
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact  Not Found : "+contactName,YesNo.Yes);
//			}
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		i=0;
//		if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS4Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Entity/Account : "+Smoke_TaskINS4Name,YesNo.No);
//				ThreadSleep(1000);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, ip.getFrame(PageName.ActivitiesOrMeetings,10));
//
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, taskUpcomingEvent1Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskUpcomingEvent1Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskUpcomingEvent1Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskUpcomingEvent1Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, taskUpcomingEvent2Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskUpcomingEvent2Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskUpcomingEvent2Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskUpcomingEvent2Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, taskUpcomingEvent3Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskUpcomingEvent3Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskUpcomingEvent3Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskUpcomingEvent3Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, taskCompletedEvent1Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskCompletedEvent1Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskCompletedEvent1Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskCompletedEvent1Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, taskCompletedEvent2Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskCompletedEvent2Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskCompletedEvent2Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskCompletedEvent2Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, taskCompletedEvent3Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskCompletedEvent3Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskCompletedEvent3Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskCompletedEvent3Subject+" is present but it should not be");
//						}
//						
//
//							if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.BOOLEAN)) {
//								log(LogStatus.INFO,"Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.No);		
//								ThreadSleep(500);
//								if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Type.toString(), 10), typeValue, typeValue)) {
//									log(LogStatus.INFO, "successfully Selected "+typeValue, YesNo.No);
//									ThreadSleep(500);
//
//									if (click(driver, ip.clearApplyButtonOnAdvancedFilter(projectName,"apply", 10), "Apply Button", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Click on Apply Button : "+relatedTab+" so going to verify Event Data",YesNo.No);		
//										ThreadSleep(500);
//									}
//									else {
//										sa.assertTrue(false,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTINS1Name);
//										log(LogStatus.SKIP,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTINS1Name,YesNo.Yes);	
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Selected "+typeValue+" for "+Smoke_TaskINS1Name, YesNo.No);
//									sa.assertTrue(false, "Not Able to Selected "+typeValue+" for "+Smoke_TaskINS1Name);
//								}
//
//							}else {
//								sa.assertTrue(false,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTINS1Name);
//								log(LogStatus.SKIP,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTINS1Name,YesNo.Yes);		
//							}
//						
//						ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, relatedTab, startDate1, taskUpcomingEvent1Subject, meetingEvent1, action.SCROLLANDBOOLEAN, 10);	
//						
//						ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, relatedTab, startDate2, taskCompletedEvent1Subject, meetingEvent4, action.SCROLLANDBOOLEAN, 10);	
//						
//						
//							
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+Smoke_TaskINS1Name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+Smoke_TaskINS1Name,YesNo.Yes);
//					}
//				
//
//			} else {
//				sa.assertTrue(false,"Entity/Account Not Found : "+Smoke_TaskINS1Name);
//				log(LogStatus.SKIP,"Entity/Account  Not Found : "+Smoke_TaskINS1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//		}
//
//
//
//		switchToDefaultContent(driver);
//		i=0;
//		if (cp.clickOnTab(projectName, TabName.Object3Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object3Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_TaskFund1Name, 20)) {
//				log(LogStatus.INFO,"Clicked on fund/deal : "+Smoke_TaskFund1Name,YesNo.No);
//				ThreadSleep(1000);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object3Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(5000);
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, ip.getFrame(PageName.ActivitiesOrMeetings,10));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object3Page, RelatedTab.Activities, taskUpcomingEvent1Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskUpcomingEvent1Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskUpcomingEvent1Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskUpcomingEvent1Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object3Page, RelatedTab.Activities, taskUpcomingEvent2Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskUpcomingEvent2Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskUpcomingEvent2Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskUpcomingEvent2Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object3Page, RelatedTab.Activities, taskUpcomingEvent3Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskUpcomingEvent3Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskUpcomingEvent3Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskUpcomingEvent3Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object3Page, RelatedTab.Activities, taskCompletedEvent1Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskCompletedEvent1Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskCompletedEvent1Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskCompletedEvent1Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object3Page, RelatedTab.Activities, taskCompletedEvent2Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskCompletedEvent2Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskCompletedEvent2Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskCompletedEvent2Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object3Page, RelatedTab.Activities, taskCompletedEvent3Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskCompletedEvent3Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskCompletedEvent3Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskCompletedEvent3Subject+" is present but it should not be");
//						}
//						
//
//							if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.BOOLEAN)) {
//								log(LogStatus.INFO,"Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.No);		
//								ThreadSleep(500);
//								if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Type.toString(), 10), typeValue, typeValue)) {
//									log(LogStatus.INFO, "successfully Selected "+typeValue, YesNo.No);
//									ThreadSleep(500);
//
//									if (click(driver, ip.clearApplyButtonOnAdvancedFilter(projectName,"apply", 10), "Apply Button", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Click on Apply Button : "+relatedTab+" so going to verify Event Data",YesNo.No);		
//										ThreadSleep(500);
//									}
//									else {
//										sa.assertTrue(false,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTFund1Name);
//										log(LogStatus.SKIP,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTFund1Name,YesNo.Yes);	
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Selected "+typeValue+" for "+Smoke_TaskFund1Name, YesNo.No);
//									sa.assertTrue(false, "Not Able to Selected "+typeValue+" for "+Smoke_TaskFund1Name);
//								}
//
//							}else {
//								sa.assertTrue(false,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTFund1Name);
//								log(LogStatus.SKIP,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTFund1Name,YesNo.Yes);		
//							}
//						
//
//						ip.verifyingRelatedTabData2(projectName, PageName.Object3Page, relatedTab, startDate1, taskUpcomingEvent2Subject, meetingEvent2, action.SCROLLANDBOOLEAN, 10);	
//						
//						ip.verifyingRelatedTabData2(projectName, PageName.Object3Page, relatedTab, startDate2, taskCompletedEvent2Subject, meetingEvent5, action.SCROLLANDBOOLEAN, 10);	
//						
//						
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+Smoke_TaskFund1Name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+Smoke_TaskFund1Name,YesNo.Yes);
//					}
//
//				
//			} else {
//				sa.assertTrue(false,"Entity/Account Not Found : "+Smoke_TaskFund1Name);
//				log(LogStatus.SKIP,"Entity/Account  Not Found : "+Smoke_TaskFund1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		String testCustomObject = taskCustomObj1Name;
//		i=0;
//		if (cp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, testCustomObject, 20)) {
//				log(LogStatus.INFO,"Clicked on Test Custom Object : "+testCustomObject,YesNo.No);
//				ThreadSleep(1000);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(5000);
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, ip.getFrame(PageName.ActivitiesOrMeetings,10));
//
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, taskUpcomingEvent1Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskUpcomingEvent1Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskUpcomingEvent1Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskUpcomingEvent1Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, taskUpcomingEvent2Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskUpcomingEvent2Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskUpcomingEvent2Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskUpcomingEvent2Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, taskUpcomingEvent3Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskUpcomingEvent3Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskUpcomingEvent3Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskUpcomingEvent3Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, taskCompletedEvent1Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskCompletedEvent1Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskCompletedEvent1Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskCompletedEvent1Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, taskCompletedEvent2Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskCompletedEvent2Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskCompletedEvent2Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskCompletedEvent2Subject+" is present but it should not be");
//						}
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, taskCompletedEvent3Subject, action.BOOLEAN, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfully verified absence of "+taskCompletedEvent3Subject, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,taskCompletedEvent3Subject+" is present but it should not be" , YesNo.Yes);
//							sa.assertTrue(false, taskCompletedEvent3Subject+" is present but it should not be");
//						}
//						
//							if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.BOOLEAN)) {
//								log(LogStatus.INFO,"Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.No);		
//								ThreadSleep(500);
//								if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Type.toString(), 10), typeValue, typeValue)) {
//									log(LogStatus.INFO, "successfully Selected "+typeValue, YesNo.No);
//									ThreadSleep(500);
//
//									if (click(driver, ip.clearApplyButtonOnAdvancedFilter(projectName,"apply", 10), "Apply Button", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Click on Apply Button : "+relatedTab+" so going to verify Event Data",YesNo.No);		
//										ThreadSleep(500);
//									}
//									else {
//										sa.assertTrue(false,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+testCustomObject);
//										log(LogStatus.SKIP,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+testCustomObject,YesNo.Yes);	
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Selected "+typeValue, YesNo.No);
//									sa.assertTrue(false, "Not Able to Selected "+typeValue);
//								}
//
//							}else {
//								sa.assertTrue(false,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+testCustomObject);
//								log(LogStatus.SKIP,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+testCustomObject,YesNo.Yes);		
//							}
//
//						
//						ip.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, startDate1, taskUpcomingEvent3Subject, meetingEvent3, action.SCROLLANDBOOLEAN, 10);	
//						
//						ip.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, startDate2, taskCompletedEvent3Subject, meetingEvent6, action.SCROLLANDBOOLEAN, 10);	
//						
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, taskUpcomingEvent3Subject, action.BOOLEAN, 10);
//						String parentID=null;
//						if (click(driver, ele, taskUpcomingEvent3Subject, action.BOOLEAN)) {
//							parentID=switchOnWindow(driver);
//							if (parentID!=null) {
//								ThreadSleep(4000);
//								if (getText(driver, ip.geteventName(projectName, 10), "event name", action.BOOLEAN).contains(taskUpcomingEvent3Subject)) {
//									log(LogStatus.INFO, "successfully verified event page opening", YesNo.No);
//								}
//								else {
//									sa.assertTrue(false,"Not Able to verify : "+taskUpcomingEvent3Subject);
//									log(LogStatus.FAIL,"Not Able to verify : "+taskUpcomingEvent3Subject, YesNo.Yes);		
//								
//								}
//								driver.close();
//								driver.switchTo().window(parentID);
//							} else {
//								sa.assertTrue(false,"not found new window for event page");
//								log(LogStatus.SKIP,"not found new window for event page",YesNo.Yes);
//							}
//						}else {
//							sa.assertTrue(false,"event subject name is not clickable");
//							log(LogStatus.SKIP,"event subject name is not clickable",YesNo.Yes);
//						}
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+testCustomObject);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+testCustomObject,YesNo.Yes);
//					}
//				
//
//			} else {
//				sa.assertTrue(false,"Test custom object Not Found : "+testCustomObject);
//				log(LogStatus.SKIP,"Test custom object  Not Found : "+testCustomObject,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	
//	
//	@Parameters({ "projectName"})
//	@Test	
//	public void AASmokeTc032_VerifyColumnsToDisplay_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp= new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		String[] finalOrder= {TaskPageFields.Name.toString(),"Name ID",TaskPageFields.Date.toString(),"Related To ID",
//				TaskPageFields.Activity.toString(),TaskPageFields.Owner.toString(),TaskPageFields.Priority.toString(),PageLabel.Meeting_Type.toString()};
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, cp.getmeetingOrActivitiesFrame(projectName,10));
//					if (click(driver,cp.getwrenchIcon(projectName, 10), "columns to display", action.BOOLEAN)) {
//						sendKeys(driver, ip.getsearchTextboxColToDisplay(projectName, 10), Keys.PAGE_DOWN+"", "page down", action.BOOLEAN);
//						if (sendKeys(driver, cp.getsearchTextboxColToDisplay(projectName, 10),ActivityRelatedLabel.Priority.toString(), 
//								"columns to display", action.BOOLEAN)) {
//							if (click(driver, cp.getsearchIconColToDisplay(projectName, 10), "search icon", action.BOOLEAN)) {
//								if (cp.verifyAvailableColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Priority.toString() ,20)) {
//									log(LogStatus.INFO, "successfully verified priority field in available dropdown",YesNo.No);
//								}else {
//									log(LogStatus.ERROR, "could not verify priority field in available dropdown",YesNo.Yes);
//									sa.assertTrue(false, "could not verify priority field in available dropdown");
//								}
//								if (cp.getsearchCrossColToDisplay(projectName, 10)!=null) {
//									log(LogStatus.INFO, "search cross icon is successfully verified",YesNo.No);
//								}else {
//									log(LogStatus.ERROR, "search cross icon is not visible on col to display",YesNo.Yes);
//									sa.assertTrue(false, "search cross icon is not visible on col to display");
//								}
//								if (click(driver, cp.getsearchCrossColToDisplay(projectName, 10), "cross", action.BOOLEAN)) {
//									if (getText(driver, cp.getsearchTextboxColToDisplay(projectName, 10), "search textbox", action.BOOLEAN).equalsIgnoreCase("")) {
//										log(LogStatus.INFO, "verified empty search textbox", YesNo.No);
//									}else {
//										log(LogStatus.ERROR, "could not verify empty search textbox after clicking cross icon",YesNo.Yes);
//										sa.assertTrue(false, "could not verify empty search textbox after clicking cross icon");
//									}
//								}else {
//									log(LogStatus.ERROR, "search cross icon is not clickable",YesNo.Yes);
//									sa.assertTrue(false, "search cross icon is not clickable");
//								}
//
//							}else {
//								log(LogStatus.ERROR, "search icon is not clickable, so cannot find priority in available fields",YesNo.Yes);
//								sa.assertTrue(false, "search icon is not clickable, so cannot find priority in available fields");
//							}
//						}else {
//							log(LogStatus.ERROR, "search textbox is not visible, so cannot find priority in available fields",YesNo.Yes);
//							sa.assertTrue(false, "search textbox is not visible, so cannot find priority in available fields");
//						}
//						if (sendKeys(driver, cp.getsearchTextboxColToDisplay(projectName, 10),ActivityRelatedLabel.Priority.toString(), 
//								"columns to display", action.SCROLLANDBOOLEAN)) {
//							if (click(driver, cp.getsearchIconColToDisplay(projectName, 10), "search icon", action.BOOLEAN)) {
//								if (cp.verifyAvailableColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Priority.toString(),20 )) {
//									if (clickUsingJavaScript(driver, ip.getmoveToSelectedColToDisplay(projectName,10),"right button")) {
//										if (cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Priority.toString(), 20 )) {
//											log(LogStatus.INFO, "successfully verified priority in slected grid", YesNo.Yes);
//										}
//										else {
//											log(LogStatus.ERROR, "so cannot verify priority in selected field",YesNo.Yes);
//											sa.assertTrue(false, "so cannot verify priority in selected field");
//										}
//									}else {
//										log(LogStatus.ERROR, "move to selected icon is not clickable, so cannot move priority to selected",YesNo.Yes);
//										sa.assertTrue(false, "move to selected icon is not clickable, so cannot move priority to selected");
//									}
//								}
//								else {
//									log(LogStatus.ERROR, "priorty field is not clickable, so cannot move priority to selected",YesNo.Yes);
//									sa.assertTrue(false, "priorty field is not clickable, so cannot move priority to selected");
//								}
//							}else {
//								log(LogStatus.ERROR, "search icon is not clickable, so cannot move priority to selected",YesNo.Yes);
//								sa.assertTrue(false, "search icon is not clickable, so cannot move priority to selected");
//							}
//						}
//						else {
//							log(LogStatus.ERROR, "search textbox is not visible, so cannot move priority to selected",YesNo.Yes);
//							sa.assertTrue(false, "search textbox is not visible, so cannot move priority to selected");
//						}
//						click(driver, ip.getsearchCrossColToDisplay(projectName, 10), "search cross", action.BOOLEAN);
//						if (cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Status.toString(), 20 )) {
//							if (clickUsingJavaScript(driver, cp.getmoveToAvailableColToDisplay(projectName, 10), "move to left", action.BOOLEAN)) {
//								if (!cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Status.toString(), 5 )) {
//									log(LogStatus.INFO, "successfully verfied absent status in selected fields", YesNo.No);
//								}else {
//									log(LogStatus.ERROR, "status is present in selected fields, but it should not be",YesNo.Yes);
//									sa.assertTrue(false, "status is present in selected fields, but it should not be");
//								}
//							}else {
//								log(LogStatus.ERROR, "move To Available is not clickable",YesNo.Yes);
//								sa.assertTrue(false, "move To Available is not clickable");
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click Status in selected column, so cannot move",YesNo.Yes);
//							sa.assertTrue(false, "could not click Status in selected column, so cannot move");
//						}
//						
//						ThreadSleep(5000);
//						//scrollDownThroughWebelement(driver, ip.getApplyColToDisplay(projectName, EnableDisable.Enable, 10), "apply");
//						if (cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Name.toString(), 20 )) {
//							ThreadSleep(3000);
//							if (click(driver, cp.getMoveTopColToDisplay(projectName, EnableDisable.Enable, 10), "top", action.BOOLEAN)) {
//								log(LogStatus.ERROR, "clicked on top button",YesNo.Yes);
//							}else {
//								log(LogStatus.ERROR, "move top icon is not clickable",YesNo.Yes);
//								sa.assertTrue(false, "move top icon is not clickable");
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click Priority in selected column",YesNo.Yes);
//							sa.assertTrue(false, "could not click Priority in selected column");
//						}
//						if (cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,PageLabel.Meeting_Type.toString(), 20 )) {
//							if (click(driver, cp.getMoveBottomColToDisplay(projectName, EnableDisable.Enable, 10), "bottom", action.BOOLEAN)) {
//								
//							}else {
//								log(LogStatus.ERROR, "move bottom icon is not clickable",YesNo.Yes);
//								sa.assertTrue(false, "move bottom icon is not clickable");
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click Meeting_Type in selected column",YesNo.Yes);
//							sa.assertTrue(false, "could not click Meeting_Type in selected column");
//						}
//						if (cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Date.toString(), 20 )) {
//							if (click(driver, cp.getMoveDownColToDisplay(projectName, EnableDisable.Enable, 10), "down", action.BOOLEAN)) {
//								
//							}else {
//								log(LogStatus.ERROR, "move down icon is not clickable",YesNo.Yes);
//								sa.assertTrue(false, "move down icon is not clickable");
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click Date in selected column",YesNo.Yes);
//							sa.assertTrue(false, "could not click Date in selected column");
//						}
//						if (cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Activity.toString(), 20 )) {
//							if (click(driver, cp.getMoveUpColToDisplay(projectName, EnableDisable.Enable, 10), "down", action.BOOLEAN)) {
//								List<WebElement> eles=ip.getSelectedFieldsList(projectName, 10);
//								for (int i=0;i<finalOrder.length;i++) {
//									if (eles.get(i).getText().trim().contains(finalOrder[i])) {
//										log(LogStatus.INFO, "successfully verified "+eles.get(i).getText()+" in correct order", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, eles.get(i).getText()+"found wrong w.r.t to "+finalOrder[i],YesNo.Yes);
//										sa.assertTrue(false, eles.get(i).getText()+"found wrong w.r.t to "+finalOrder[i]);
//									}
//								}
//								if (click(driver, ip.getApplyColToDisplay(projectName, EnableDisable.Enable, 10), "apply", action.BOOLEAN)) {
//									log(LogStatus.INFO, "successfully changed columns through cols to display popup", YesNo.No);
//								}else {
//									log(LogStatus.ERROR, "could not click apply button",YesNo.Yes);
//									sa.assertTrue(false, "could not click apply button");
//								}
//								
//								List<String> s=compareMultipleList(driver,ActivityRelatedLabel.Priority.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//								if (s.isEmpty()) {
//									log(LogStatus.INFO, "successfully verified priority present on grid", YesNo.No);
//								}
//								else {
//									log(LogStatus.ERROR, "not found priority on task grid",YesNo.Yes);
//									sa.assertTrue(false, "not found priority ot task grid");
//								}
//								s=compareMultipleList(driver,ActivityRelatedLabel.Status.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//								if (!s.isEmpty()) {
//									log(LogStatus.INFO, "successfully verified absence of status on grid", YesNo.No);
//								}
//								else {
//									log(LogStatus.ERROR, "found status on task grid, but it should not be",YesNo.Yes);
//									sa.assertTrue(false, "found status on task grid, but it should not be");
//								}
//							}else {
//								log(LogStatus.ERROR, "move up icon is not clickable",YesNo.Yes);
//								sa.assertTrue(false, "move up icon is not clickable");
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click activity in selected column",YesNo.Yes);
//							sa.assertTrue(false, "could not click activity in selected column");
//						}
//					}else {
//						log(LogStatus.ERROR, "wrench icon not clickable",YesNo.Yes);
//						sa.assertTrue(false, "wrench icon not clickable");
//					}
//				}else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}else {
//				log(LogStatus.ERROR, "not found contact"+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName,YesNo.Yes);
//				sa.assertTrue(false,"not found contact"+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName);
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "contact tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "contact tab not clickable");
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc032_VerifyColumnsToDisplay_Impact(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		SetupPageBusinessLayer setup=new SetupPageBusinessLayer(driver);
//		HomePageBusineesLayer home=new HomePageBusineesLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		RelatedTab[] rt= {RelatedTab.Activities,RelatedTab.Meetings};
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 10)) {
//				for (int i = 0;i<rt.length;i++) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, rt[i], 20),rt[i].toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+rt[i],YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					List<String> s=compareMultipleList(driver,ActivityRelatedLabel.Priority.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified priority present on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "not found priority on task grid",YesNo.Yes);
//						sa.assertTrue(false, "not found priority ot task grid");
//					}
//					s=compareMultipleList(driver,ActivityRelatedLabel.Status.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (!s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified absence of status on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "found status on task grid, but it should not be",YesNo.Yes);
//						sa.assertTrue(false, "found status on task grid, but it should not be");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}
//			}
//			else {
//				log(LogStatus.ERROR, "not found "+Smoke_TaskINS1Name,YesNo.Yes);
//				sa.assertTrue(false,"not found "+Smoke_TaskINS1Name);
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "account/entity tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "account/entity tab not clickable");
//		}
//		
//		if (lp.clickOnTab(projectName, TabName.Object3Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_TaskFund1Name, 10)) {
//				for (int i =0;i<rt.length;i++) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object3Page, rt[i], 20),  rt[i].toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+ rt[i],YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					List<String> s=compareMultipleList(driver,ActivityRelatedLabel.Priority.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified priority present on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "not found priority on task grid",YesNo.Yes);
//						sa.assertTrue(false, "not found priority ot task grid");
//					}
//					s=compareMultipleList(driver,ActivityRelatedLabel.Status.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (!s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified absence of status on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "found status on task grid, but it should not be",YesNo.Yes);
//						sa.assertTrue(false, "found status on task grid, but it should not be");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}
//			}
//			else {
//				log(LogStatus.ERROR, "not found "+Smoke_TaskINS1Name,YesNo.Yes);
//				sa.assertTrue(false,"not found "+Smoke_TaskINS1Name);
//			}
//		}else {
//			log(LogStatus.ERROR, "fund tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "fund tab not clickable");
//		}
//		if (lp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj1Name, 10)) {
//				for (int i = 0;i<rt.length;i++) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.TestCustomObjectPage,rt[i], 20),rt[i].toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+rt[i],YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					List<String> s=compareMultipleList(driver,ActivityRelatedLabel.Priority.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified priority present on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "not found priority on task grid",YesNo.Yes);
//						sa.assertTrue(false, "not found priority ot task grid");
//					}
//					s=compareMultipleList(driver,ActivityRelatedLabel.Status.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (!s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified absence of status on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "found status on task grid, but it should not be",YesNo.Yes);
//						sa.assertTrue(false, "found status on task grid, but it should not be");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}
//			}
//			else {
//				log(LogStatus.ERROR, "not found "+Smoke_TaskINS1Name,YesNo.Yes);
//				sa.assertTrue(false,"not found "+Smoke_TaskINS1Name);
//			}
//		}else {
//			log(LogStatus.ERROR, "TestCustomObjectTab tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "TestCustomObjectTab tab not clickable");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc033_VerifyRevertToDefaultsColumnsToDisplay_Action(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		SetupPageBusinessLayer setup=new SetupPageBusinessLayer(driver);
//		HomePageBusineesLayer home=new HomePageBusineesLayer(driver);
//		String[] finalOrder= {TaskPageFields.Date.toString(),TaskPageFields.Name.toString(),"Name ID","Related To ID",
//		TaskPageFields.Status.toString(),TaskPageFields.Owner.toString(),PageLabel.Meeting_Type.toString(),TaskPageFields.Activity.toString()};
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		if (lp.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					if (click(driver, ip.getwrenchIcon(projectName, 10), "wrench icon", action.BOOLEAN)) {
//						sendKeys(driver, ip.getsearchTextboxColToDisplay(projectName, 10), Keys.PAGE_DOWN+"", "scroll down", action.BOOLEAN);
//						if (click(driver, ip.getrevertToDefaultColToDisplay(projectName, EnableDisable.Enable, 10), "revert to defaults", action.BOOLEAN)) {
//							List<WebElement> eles=ip.getSelectedFieldsList(projectName, 10);
//							for (int i=0;i<finalOrder.length;i++) {
//								if (eles.get(i).getText().trim().contains(finalOrder[i])) {
//									log(LogStatus.INFO, "successfully verified "+eles.get(i).getText()+" in correct order", YesNo.No);
//								}
//								else {
//									log(LogStatus.ERROR, eles.get(i).getText()+"found wrong w.r.t to "+finalOrder[i],YesNo.Yes);
//									sa.assertTrue(false, eles.get(i).getText()+"found wrong w.r.t to "+finalOrder[i]);
//								}
//							}
//							if (click(driver, ip.getApplyColToDisplay(projectName, EnableDisable.Enable, 10), "apply", action.BOOLEAN)) {
//								log(LogStatus.INFO, "successfully reverted to default settings",YesNo.No);
//								
//								List<String> s=compareMultipleList(driver,ActivityRelatedLabel.Priority.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//								if (!s.isEmpty()) {
//									log(LogStatus.INFO, "priority absent on grid as expected", YesNo.No);
//								}
//								else {
//									log(LogStatus.ERROR, "found priority on task grid, but it should not be",YesNo.Yes);
//									sa.assertTrue(false, "found priority on task grid, but it should not be");
//								}
//								s=compareMultipleList(driver,ActivityRelatedLabel.Status.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//								if (s.isEmpty()) {
//									log(LogStatus.INFO, "successfully verified presence of status on grid", YesNo.No);
//								}
//								else {
//									log(LogStatus.ERROR, "not found status on task grid",YesNo.Yes);
//									sa.assertTrue(false, "not found status on task grid");
//								}
//								
//							}
//							else {
//								log(LogStatus.ERROR, "could not click on apply button", YesNo.Yes);
//								sa.assertTrue(false, "could not click on apply button");
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click on revertToDefault button", YesNo.Yes);
//							sa.assertTrue(false, "could not click on revertToDefault button");
//						}
//					}else {
//						log(LogStatus.ERROR, "could not click on wrench icon", YesNo.Yes);
//						sa.assertTrue(false, "could not click on wrench icon");
//					}
//					switchToDefaultContent(driver);
//				}else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//
//				}
//			}else {
//				log(LogStatus.ERROR, "not found contact"+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName,YesNo.Yes);
//				sa.assertTrue(false,"not found contact"+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName);
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "contact tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "contact tab not clickable");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc033_VerifyRevertToDefaultsColumnsToDisplay_Impact(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		SetupPageBusinessLayer setup=new SetupPageBusinessLayer(driver);
//		HomePageBusineesLayer home=new HomePageBusineesLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		RelatedTab[] rt= {RelatedTab.Activities,RelatedTab.Meetings};
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 10)) {
//				for (int i =0;i<rt.length;i++) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, rt[i], 20), rt[i].toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					List<String> s=compareMultipleList(driver,ActivityRelatedLabel.Priority.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (!s.isEmpty()) {
//						log(LogStatus.INFO, "priority absent on grid as expected", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "found priority on task grid, but it should not be",YesNo.Yes);
//						sa.assertTrue(false, "found priority on task grid, but it should not be");
//					}
//					s=compareMultipleList(driver,ActivityRelatedLabel.Status.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified presence of status on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "not found status on task grid",YesNo.Yes);
//						sa.assertTrue(false, "not found status on task grid");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR,  rt[i]+" related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false,  rt[i]+" related tab not clickable");
//				}
//			}
//			}
//			else {
//				log(LogStatus.ERROR, "not found "+Smoke_TaskINS1Name,YesNo.Yes);
//				sa.assertTrue(false,"not found "+Smoke_TaskINS1Name);
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "account/entity tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "account/entity tab not clickable");
//		}
//		
//		if (lp.clickOnTab(projectName, TabName.Object3Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_TaskFund1Name, 10)) {
//				for (int i =0;i<rt.length;i++) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object3Page,rt[i], 20), rt[i].toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+rt[i],YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					List<String> s=compareMultipleList(driver,ActivityRelatedLabel.Priority.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (!s.isEmpty()) {
//						log(LogStatus.INFO, "priority absent on grid as expected", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "found priority on task grid, but it should not be",YesNo.Yes);
//						sa.assertTrue(false, "found priority on task grid, but it should not be");
//					}
//					s=compareMultipleList(driver,ActivityRelatedLabel.Status.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified presence of status on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "not found status on task grid",YesNo.Yes);
//						sa.assertTrue(false, "not found status on task grid");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR,rt[i]+ " related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, rt[i]+" related tab not clickable");
//				}
//			}
//			}
//			else {
//				log(LogStatus.ERROR, "not found "+Smoke_TaskFund1Name,YesNo.Yes);
//				sa.assertTrue(false,"not found "+Smoke_TaskFund1Name);
//			}
//		}else {
//			log(LogStatus.ERROR, "fund tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "fund tab not clickable");
//		}
//		if (lp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj1Name, 10)) {
//				for (int i = 0;i<rt.length;i++) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.TestCustomObjectPage, rt[i], 20), rt[i].toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+rt[i],YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					List<String> s=compareMultipleList(driver,ActivityRelatedLabel.Priority.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (!s.isEmpty()) {
//						log(LogStatus.INFO, "priority absent on grid as expected", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "found priority on task grid, but it should not be",YesNo.Yes);
//						sa.assertTrue(false, "found priority on task grid, but it should not be");
//					}
//					s=compareMultipleList(driver,ActivityRelatedLabel.Status.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified presence of status on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "not found status on task grid",YesNo.Yes);
//						sa.assertTrue(false, "not found status on task grid");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, rt[i]+" related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false,rt[i]+ " related tab not clickable");
//				}
//			}
//			}
//			else {
//				log(LogStatus.ERROR, "not found "+taskCustomObj1Name,YesNo.Yes);
//				sa.assertTrue(false,"not found "+taskCustomObj1Name);
//			}
//		}else {
//			log(LogStatus.ERROR, "TestCustomObjectTab tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "TestCustomObjectTab tab not clickable");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc034_VerifyRangPickListActivities(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		BasePageBusinessLayer bp = new BasePageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		SetupPageBusinessLayer setup=new SetupPageBusinessLayer(driver);
//		HomePageBusineesLayer home=new HomePageBusineesLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String date=todaysDate;
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName);
//		taskstd1.add(taskCustomObj2Name);
//		taskstd1.add(Status.Completed.toString());
//		taskstd1.add(AdminUserFirstName+" "+AdminUserLastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Call.toString());
//		taskstd1.add(Links.View.toString());	
//		RelatedTab relatedTab = RelatedTab.Activities;
//
//		if (lp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj2Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					if (selectVisibleTextFromDropDown(driver, lp.getrangeDropdown(projectName, 10), "range", "Today")) {
//						List<WebElement> datesFromPage=bp.listOfDatesOnActivitiesRelatedTab(projectName, 20);
//						if (!datesFromPage.isEmpty()) {
//							boolean flag=true;String value="";
//							for (WebElement ele:datesFromPage) {
//								value=ele.getText().trim();
//								if (ip.verifyDate(todaysDate, value))
//									log(LogStatus.INFO, "date present is todays date", YesNo.No);
//								else
//								{
//									log(LogStatus.ERROR, "date is not todays date, it is "+ele.getText().trim(), YesNo.Yes);
//									sa.assertTrue(false,  "date is not todays date, it is "+ele.getText().trim());
//								}
//							}
//						}else
//						{
//							log(LogStatus.ERROR, "date is not visible", YesNo.Yes);
//							sa.assertTrue(false,  "date is not visible");
//						}
//						bp.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, date, Smoke_TaskSendLetterSubject, taskstd1, action.BOOLEAN, 15);
//						
//					}else{
//						log(LogStatus.ERROR, "range dropdown is not visible", YesNo.Yes);
//						sa.assertTrue(false,  "range dropdown is not visible");
//					}
//					switchToDefaultContent(driver);
//				}else{
//					log(LogStatus.ERROR, "activities related tab is not found", YesNo.Yes);
//					sa.assertTrue(false,  "activities related tab is not found");
//				}
//			}else{
//				log(LogStatus.ERROR, taskCustomObj2Name+" is not found on custom object page", YesNo.Yes);
//				sa.assertTrue(false,  taskCustomObj2Name+" is not found on custom object page");
//			}
//		}else{
//			log(LogStatus.ERROR, "custom object tab is not clickable", YesNo.Yes);
//			sa.assertTrue(false,  "custom object tab is not clickable");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc035_VerifyAdditionalFilterActivities(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		BasePageBusinessLayer bp = new BasePageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		SetupPageBusinessLayer setup=new SetupPageBusinessLayer(driver);
//		HomePageBusineesLayer home=new HomePageBusineesLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask17", excelLabel.Due_Date);
//		
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName);
//		taskstd1.add(taskCustomObj2Name);
//		taskstd1.add(Status.Completed.toString());
//		taskstd1.add(AdminUserFirstName+" "+AdminUserLastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Call.toString());
//		taskstd1.add(Links.View.toString());	
//		RelatedTab relatedTab = RelatedTab.Activities;
//		WebElement ele=null;
//		String statusValue="Completed activities",typeVale="Tasks and Events",ownerValue="My Activities";
//		if (lp.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					if (click(driver, ip.getadvancedFilterImg(projectName, 10), "advanced filter", action.SCROLLANDBOOLEAN)) {
//						ele= bp.getAdvancedFilteDropdowns(projectName, PageLabel.Status.toString(),
//								10);
//						scrollDownThroughWebelement(driver, ele,  "status dropdown");
//						if (selectVisibleTextFromDropDown(driver,ele, "status dropdown", statusValue)) {
//							log(LogStatus.INFO, "successfully selected status dropdown value "+statusValue, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,"could not select status dropdown" , YesNo.Yes);
//							sa.assertTrue(false, "could not select status dropdown");
//
//						}
//						ele=bp.getAdvancedFilteDropdowns(projectName, PageLabel.Type.toString(),
//								10);
//						scrollDownThroughWebelement(driver, ele, "Type dropdown" );
//						if (selectVisibleTextFromDropDown(driver,ele , "Type dropdown", typeVale)) {
//							log(LogStatus.INFO, "successfully selected type dropdown value "+typeVale, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,"could not select type dropdown" , YesNo.Yes);
//							sa.assertTrue(false, "could not select type dropdown");
//
//						}
//						if (click(driver, bp.clearApplyButtonOnAdvancedFilter(projectName, "apply", 10), "apply", action.BOOLEAN)) {
//							log(LogStatus.INFO, "clicked on apply button of advanced filter", YesNo.No);
//							bp.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, date, Smoke_TaskSendLetterSubject, taskstd1, action.BOOLEAN, 15);
//
//						}
//						else {
//							log(LogStatus.ERROR,"could not click apply button" , YesNo.Yes);
//							sa.assertTrue(false, "could not click apply button");
//
//						}
//					}else {
//						log(LogStatus.ERROR,"could not advanced filter toggle button" , YesNo.Yes);
//						sa.assertTrue(false, "could not advanced filter toggle button");
//
//					}
//					if (click(driver, ip.getadvancedFilterImg(projectName, 10), "advanced filter", action.SCROLLANDBOOLEAN)) {
//						ele=bp.getAdvancedFilteDropdowns(projectName, PageLabel.Owner.toString(),
//								10);
//						scrollDownThroughWebelement(driver, ele, "Owner dropdown" );
//						
//						if (selectVisibleTextFromDropDown(driver,ele , "Owner dropdown", ownerValue)) {
//							log(LogStatus.INFO, "successfully selected owner dropdown value "+ownerValue, YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR,"could not select owner dropdown" , YesNo.Yes);
//							sa.assertTrue(false, "could not select owner dropdown");
//
//						}if (click(driver, bp.clearApplyButtonOnAdvancedFilter(projectName, "apply", 10), "apply", action.BOOLEAN)) {
//							log(LogStatus.INFO, "clicked on apply button of advanced filter", YesNo.No);
//							ThreadSleep(5000);
//							ele = bp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_TaskSendLetterSubject, action.BOOLEAN, 5);
//							if (ele==null) {
//								log(LogStatus.INFO, "successfully verified absence of send letter subject", YesNo.No);
//
//							}else {
//								log(LogStatus.ERROR,"send letter task is present on activities grid but it should not be" , YesNo.Yes);
//								sa.assertTrue(false, "send letter task is present on activities grid but it should not be");
//
//							}
//						}
//						else {
//							log(LogStatus.ERROR,"could not click apply button" , YesNo.Yes);
//							sa.assertTrue(false, "could not click apply button");
//
//						}
//						
//					}else {
//						log(LogStatus.ERROR,"could not advanced filter toggle button" , YesNo.Yes);
//						sa.assertTrue(false, "could not advanced filter toggle button");
//					}
//				}else{
//					log(LogStatus.ERROR, "activities related tab is not found", YesNo.Yes);
//					sa.assertTrue(false,  "activities related tab is not found");
//				}
//			}else{
//				log(LogStatus.ERROR, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" is not found on contact page", YesNo.Yes);
//				sa.assertTrue(false,  Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" is not found on contact page");
//			}
//		}else{
//			log(LogStatus.ERROR, "contact tab is not clickable", YesNo.Yes);
//			sa.assertTrue(false,  "contact tab is not clickable");
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc036_VerifyAddRowAddFilterLogicAndClearButtonFunctionalityAtAdditionalFilter(String projectName) {
//
//
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		WebElement ele ;
//		RelatedTab[] relatabTabs = {RelatedTab.Activities};
//
//		String field="";
//		String operator="";
//		String value="";
//		switchToDefaultContent(driver);
//		String parenTiD=null;
//		String Xpath =null;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						//	 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20,ip.getFrame(PageName.ActivitiesOrMeetings,10));
//
//						if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.BOOLEAN)) {
//							log(LogStatus.INFO,"Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.No);		
//							ThreadSleep(500);
//
//							// Add Row Link and Cross Icon 
//							if(click(driver, cp.getAddRowLink(projectName,10), "Add Row Link", action.BOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on Add row link",YesNo.No);
//								ThreadSleep(1000);
//
//								if (!cp.getRowRemoveIcon().isEmpty() && cp.getRowRemoveIcon().size()==1) {
//									log(LogStatus.PASS,"1 Row Added",YesNo.Yes);
//
//									if(click(driver, cp.getRowRemoveIcon().get(0), "remove icon", action.BOOLEAN)) {
//										log(LogStatus.INFO,"clicked on remove row link",YesNo.No);
//										ThreadSleep(1000);
//										if (cp.getRowRemoveIcon1(projectName, 3)==null) {
//											log(LogStatus.PASS,"Row Removed",YesNo.Yes);
//										} else {
//											log(LogStatus.FAIL,"Row Not Removed",YesNo.Yes);
//											sa.assertTrue(false, "Row Not Removed");
//										}
//
//									}else {
//										appLog.error("Not able to click on remove row link so cannot check remove functionality");
//										log(LogStatus.FAIL,"Not able to click on remove row link so cannot check remove functionality",YesNo.Yes);
//										sa.assertTrue(false,"Not able to click on remove row link so cannot check remove functionality");
//									}
//									ThreadSleep(2000);
//
//								} else {
//									log(LogStatus.FAIL,"1 Row Not Added",YesNo.Yes);
//									sa.assertTrue(false, "1 Row Not Added");
//								}
//
//
//							}else {
//								appLog.error("Not able to click on Add row link so cannot check remove functionality");
//								log(LogStatus.FAIL,"Not able to click on Add row link so cannot check remove functionality",YesNo.Yes);
//								sa.assertTrue(false,"Not able to click on Add row link so cannot check remove functionality");
//							}
//
//							// Filter Logic Link Functionality 
//							ele=cp.getfilterLogicLink(projectName, 10);
//							if(ele!=null) {
//								log(LogStatus.INFO,"find add filter logic Link",YesNo.No);	
//								if(click(driver, ele, "add Filter Logic Button", action.BOOLEAN)) {
//
//									log(LogStatus.INFO,"clicked on add Filter Logic Button",YesNo.No);	
//									ThreadSleep(2000);
//
//
//									ele=cp.getFilterLogicInputBox(projectName, 10)	;
//									if(ele!=null) {
//										log(LogStatus.INFO,"find add filter logic text box",YesNo.No);	
//									}else {
//										log(LogStatus.FAIL,"Not able find add filter logic text box",YesNo.Yes);
//										sa.assertTrue(false, "Not able find add filter logic text box  ");
//									}
//
//
//
//									if (click(driver, cp.getInfoLink(projectName,10), "Info Link", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO,"click on Info Link",YesNo.No);
//										ThreadSleep(2000);
//										//										parenTiD = switchOnWindow(driver);
//										//
//										//										if (parenTiD!=null) {
//										//											log(LogStatus.INFO,"New Window is open",YesNo.No);
//										//											Xpath = "//h1//*[text()='Add Filter Logic']";
//										//											ele=isDisplayed(driver,FindElement(driver, Xpath, "Add filter logic Window", action.BOOLEAN,10), "Visibility", 10, "Add filter logic text box");
//										//											if(ele!=null) {
//										//												log(LogStatus.INFO,"Add Filter Logic Window is open",YesNo.No);	
//										//											}else {
//										//												log(LogStatus.FAIL,"Add Filter Logic Window is not open",YesNo.Yes);
//										//												sa.assertTrue(false, "Add Filter Logic Window is not open");
//										//											}
//										//											driver.close();
//										//											driver.switchTo().window(parenTiD);
//										//										} else {
//										//											log(LogStatus.FAIL,"No New Window is open on Clicking Info Link",YesNo.Yes);
//										//											sa.assertTrue(false, "No New Window is open on Clicking Info Link");
//										//										}
//									} else {
//										log(LogStatus.FAIL,"Not able to click on Info Link",YesNo.Yes);
//										sa.assertTrue(false, "Not able to click on Info Link");
//									}
//
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//									// 2 row added and Clear Filter Logic Functionality
//									for (int j = 0; j < 2; j++) {
//										if(click(driver, cp.getAddRowLink(projectName,10), "Add Row Link", action.BOOLEAN)) {
//											log(LogStatus.INFO,"Clicked on Add row link : "+j,YesNo.No);
//											ThreadSleep(2000);
//										}else {
//											log(LogStatus.FAIL,"Not able to click on Add row link "+j,YesNo.Yes);
//											sa.assertTrue(false,"Not able to click on Add row link "+j);
//										}
//									}
//
//									if (!cp.getRowRemoveIcon().isEmpty() && cp.getRowRemoveIcon().size()==2) {
//										log(LogStatus.PASS,"2 Row Added",YesNo.Yes);
//									}else {
//										log(LogStatus.FAIL,"2 Row Not Added",YesNo.Yes);
//										sa.assertTrue(false, "2 Row Not Added");	
//									}
//
//									if (click(driver, cp.clearApplyButtonOnAdvancedFilter(projectName, "clear",10), "Clear Btn", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO,"Click on Clear Button on Filter Logic",YesNo.No);
//
//
//										if (cp.getRowRemoveIcon1(projectName, 3)==null) {
//											log(LogStatus.PASS,"All New Added Row Removed after Click on Clear Button",YesNo.Yes);
//										} else {
//											log(LogStatus.FAIL,"All New Added Row Not Removed after Click on Clear Button",YesNo.Yes);
//											sa.assertTrue(false, "All New Added Row Not Removed after Click on Clear Button");
//										}
//
//
//									} else {
//										log(LogStatus.FAIL,"Not able to click on Clear Button on  Filter Logic",YesNo.Yes);
//										sa.assertTrue(false, "Not able to click on Clear Button on Filter Logic");
//									}
//
//
//								}else {
//									log(LogStatus.FAIL,"Not able to click on add filter logic ",YesNo.Yes);
//									sa.assertTrue(false, "Not able to click on add filter logic ");
//
//								}
//							}else {
//								log(LogStatus.FAIL,"Not able find add filter logic link ",YesNo.Yes);
//								sa.assertTrue(false, "Not able find add filter logic link ");
//
//							}
//
//							// FilteR Logic Check
//
//							for (int j = 0; j < 2; j++) {
//								if(click(driver, cp.getAddRowLink(projectName,10), "Add Row Link", action.BOOLEAN)) {
//									log(LogStatus.INFO,"For Filter Check Clicked on Add row link : "+j,YesNo.No);
//									ThreadSleep(2000);
//								}else {
//									log(LogStatus.FAIL,"For Filter Check Not able to click on Add row link "+j,YesNo.Yes);
//									sa.assertTrue(false,"For Filter Check Not able to click on Add row link "+j);
//								}
//							}
//
//							getSystemDate("");
//							String[][] fieldsOperatorValues= {{"Activity:Date","equals",todaysDate},
//									{"Activity:Priority","equals","High, Normal, Low"},
//									{"Activity:Subject","not equal to",""}};
//
//							for (int j = 0; j < fieldsOperatorValues.length; j++) {
//
//								field=fieldsOperatorValues[j][0];
//								operator=fieldsOperatorValues[j][1];
//								value=fieldsOperatorValues[j][2];
//								log(LogStatus.INFO,"Field : "+field+"\t Operator : "+operator+"\t Value : "+value,YesNo.No);
//								if (cp.setFieldValue(projectName, PageName.Object2Page, relatedTab, field, j+1)) {
//									log(LogStatus.INFO,"Field Set    : "+field,YesNo.No);
//
//									if (cp.setOperatorValue(projectName, PageName.Object2Page, relatedTab, operator, j+1)) {
//										log(LogStatus.INFO,"Opeartor Set : "+operator,YesNo.No);
//
//										if (cp.setCriterionValue(projectName, PageName.Object2Page, relatedTab, "", value, j+1)) {
//											log(LogStatus.INFO,"Value Set    : "+value,YesNo.No);
//										} else {
//											sa.assertTrue(false,"Not Able Set Value : "+value);
//											log(LogStatus.SKIP,"Not Able Set Value : "+value,YesNo.Yes);	
//											break;
//										}
//									} else {
//										sa.assertTrue(false,"Not Able Set Operator : "+operator);
//										log(LogStatus.SKIP,"Not Able Set Operator : "+operator,YesNo.Yes);
//										break;
//									}
//								} else {
//									sa.assertTrue(false,"Not Able Set Field : "+field);
//									log(LogStatus.SKIP,"Not Able Set Field : "+field,YesNo.Yes);
//									break;
//								}
//							}
//
//							ele=cp.getfilterLogicLink(projectName, 10);
//							if(click(driver, ele, "Add Filter Logic Link", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Click on add filter logic Link",YesNo.No);	
//
//								ele=cp.getFilterLogicInputBox(projectName, 10);
//								String filterLogicCondition = "(1 OR 2 ) OR 3";
//								if(sendKeys(driver, ele,filterLogicCondition, "filter logic text box", action.SCROLLANDBOOLEAN)) {
//									appLog.info("pass value in filter logic text box : "+filterLogicCondition);
//									if (click(driver, cp.clearApplyButtonOnAdvancedFilter(projectName, "Apply",10), "Clear Btn", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO,"Click on Apply Button on Filter Logic",YesNo.No);
//										ThreadSleep(5000);
//
//										ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Meetings, Smoke_TaskSendLetterSubject, action.BOOLEAN, 10);
//										if (ele!=null) {
//											log(LogStatus.INFO,Smoke_TaskSendLetterSubject+" link present after applying Filter on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);		
//										} else {
//											sa.assertTrue(false,Smoke_TaskSendLetterSubject+" link not present after applying Filter on Sub Tab : "+RelatedTab.Meetings);
//											log(LogStatus.SKIP,Smoke_TaskSendLetterSubject+" link not present after applying Filter on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//										}
//
//									}else {
//										log(LogStatus.FAIL,"Not able to click on Apply Button on  Filter Logic",YesNo.Yes);
//										sa.assertTrue(false, "Not able to click on Apply Button Filter Logic");	
//									}
//
//								}else {
//									appLog.error("Not able to pass value on  filter logic text box "+filterLogicCondition);
//									log(LogStatus.SKIP,"Not able to pass value on  filter logic text box "+filterLogicCondition,YesNo.Yes);
//								}
//							}else {
//								appLog.error("Not able to click on Filter logic link");
//								log(LogStatus.SKIP,"Not able to click on Filter logic link",YesNo.Yes);
//							}
//
//						}else {
//							sa.assertTrue(false,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab);
//							log(LogStatus.SKIP,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.Yes);		
//						}
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName,YesNo.Yes);
//					}
//
//				}
//
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact  Not Found : "+contactName,YesNo.Yes);
//			}
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//
//
//	}
//	
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc037_VerifySearchActivitiesAttachmentSettings(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		Set<String> dropdownNames= new HashSet<String>();
//		dropdownNames.add("Owner");
//		dropdownNames.add("Type");
//		dropdownNames.add("Status");
//		int j=0;
//		String subjectValue=Smoke_TaskSendLetterSubject,priorityValue=Smoke_TaskSendLetterPriority;
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO, "clicked on tab "+TabName.Object2Tab, YesNo.No);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, 10)) {
//				log(LogStatus.INFO, "clicked on contact "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 10), "related tab", action.BOOLEAN)) {
//					log(LogStatus.INFO, "clicked on tab "+RelatedTab.Activities, YesNo.No);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					if(click(driver, cp.getadvancedFilterImg(projectName, 10), "advanced filter img", action.BOOLEAN)) {
//						log(LogStatus.INFO, "clicked on advanced filter ", YesNo.No);
//						for (int i=0;i<3;i++) {
//
//							if (click(driver, cp.getsearchActAttach(projectName,10), "search activities/attach", action.BOOLEAN)) {
//								Set<String> selectedoptions= new HashSet<String>();
//								List<WebElement> dropdowns=cp.getDropdownListOnSearchActivitiesAttachmentSettings(projectName, 10);
//								if (i==0) {
//									for (WebElement e:dropdowns) {
//										selectedoptions.add(getSelectedOptionOfDropDown(driver, e, "dropdown "+j, "text"));
//										j++;
//									}
//									if(dropdownNames.equals(selectedoptions)) {
//										log(LogStatus.INFO, dropdownNames+" successfully verified selected options of dropdowns "+selectedoptions, YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR,dropdownNames+" could not be verified with currently selected options of dropdowns "+selectedoptions , YesNo.Yes);
//										sa.assertTrue(false, dropdownNames+" could not be verified with currently selected options of dropdowns "+selectedoptions);
//										
//									}
//									if (ip.getCustomTabSaveBtn(projectName,10)!=null) {
//										log(LogStatus.INFO, " successfully verified save button", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "save button could not be verified", YesNo.Yes);
//										sa.assertTrue(false,  "save button could not be verified");
//									}
//									if (ip.getcancelForSearchActivitiesAttachment(projectName, 10)!=null) {
//										log(LogStatus.INFO, " successfully verified cancel button", YesNo.No);
//
//									}else {
//										log(LogStatus.ERROR, "cancel button could not be verified", YesNo.Yes);
//										sa.assertTrue(false,  "cancel button could not be verified");
//									}
//									if (click(driver, cp.getcrossIconForSearchActivitiesAttachment(projectName, 10), "cross icon", action.BOOLEAN)) {
//										log(LogStatus.INFO, " successfully clicked cross button", YesNo.No);
//									}else {
//										log(LogStatus.ERROR, "cross button could not be clicked", YesNo.Yes);
//										sa.assertTrue(false,  "cross button could not be clicked");
//									}
//									
//								}
//								else if(i==1) {
//									if (click(driver, cp.getcancelForSearchActivitiesAttachment(projectName, 10), "cancel", action.BOOLEAN)) {
//										log(LogStatus.INFO, " successfully clicked cancel button", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "cancel button could not be clicked", YesNo.Yes);
//										sa.assertTrue(false,  "cancel button could not be clicked");
//									}
//									
//								}
//								else {
//									//+ icon below type field
//									if (sendKeys(driver, cp.getTextBoxInSearchActAttachSettings(projectName, LeftRight.Left, 1, 10), 
//											PageLabel.Subject.toString(), "search textbox", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO, "passed "+PageLabel.Subject.toString()+" in new field textbox", YesNo.No);
//										if (cp.selectSuggestionInTextboxInSearchActAttach(projectName, PageLabel.Subject.toString(), 10)) {
//											log(LogStatus.INFO, "successfully selected "+PageLabel.Subject.toString(), YesNo.No);
//										}
//										else {
//											log(LogStatus.ERROR, "could not select "+PageLabel.Subject.toString(),  YesNo.Yes);
//											sa.assertTrue(false,  "could not select "+PageLabel.Subject.toString());
//										}
//									}
//									else {
//										log(LogStatus.ERROR, "textbox for field adding is not visible", YesNo.Yes);
//										sa.assertTrue(false,  "textbox for field adding is not visible");
//									}
//									if (click(driver, cp.getPlusIconInSearchActAttach(projectName, LeftRight.Left, 1, 10), "plus icon below type", action.BOOLEAN)) {
//										if (sendKeys(driver, cp.getTextBoxInSearchActAttachSettings(projectName, LeftRight.Left, 2, 10), 
//												PageLabel.Priority.toString(), "search textbox", action.SCROLLANDBOOLEAN)) {
//											if (cp.selectSuggestionInTextboxInSearchActAttach(projectName, PageLabel.Priority.toString(), 10)) {
//												log(LogStatus.INFO, "successfully selected "+PageLabel.Priority.toString(), YesNo.No);
//											}
//											else {
//												log(LogStatus.ERROR, "could not select "+PageLabel.Priority.toString(),  YesNo.Yes);
//												sa.assertTrue(false,  "could not select "+PageLabel.Priority.toString());
//											}
//										}
//										else {
//											log(LogStatus.ERROR, "textbox for field adding is not visible", YesNo.Yes);
//											sa.assertTrue(false,  "textbox for field adding is not visible");
//										}
//									}
//									else {
//										log(LogStatus.ERROR, "+ icon not clickable so could not add priority", YesNo.Yes);
//										sa.assertTrue(false,  "+ icon not clickable so could not add priority");
//									}
//									clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,10),"save");
//								}
//							}
//							else {
//								log(LogStatus.ERROR, "search settings icon not clickable so could not add fields", YesNo.Yes);
//								sa.assertTrue(false,  "search settings icon not clickable so could not add fields");
//							}
//						}
//						if (sendKeys(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Subject.toString(), 10),
//								subjectValue, "subject on advanced filter", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "passed "+subjectValue+" in subject textbox", YesNo.No);
//
//							if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Priority.toString()
//									, 10), "priority dropdown", priorityValue)) {
//								log(LogStatus.INFO, "passed "+priorityValue+" in Priority Dropdowns", YesNo.No);
//								if (click(driver, cp.clearApplyButtonOnAdvancedFilter(projectName, "apply", 10), "apply", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO, "clicked apply button", YesNo.No);
//									
//									WebElement ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_TaskSendLetterSubject, action.BOOLEAN, 10);
//									if (ele!=null) {
//										log(LogStatus.INFO, "successfully verified "+Smoke_TaskSendLetterSubject+" after changing filter", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "could not verify "+Smoke_TaskSendLetterSubject+" on grid after filter", YesNo.Yes);
//										sa.assertTrue(false,  "could not verify "+Smoke_TaskSendLetterSubject+" on grid after filter");
//										
//									}
//									ThreadSleep(5000);
//								}else {
//									log(LogStatus.ERROR, "apply button not clickable", YesNo.Yes);
//									sa.assertTrue(false,  "apply button not clickable");
//								}
//							}else {
//								log(LogStatus.ERROR, "subject textbox not visible onadvanced filter", YesNo.Yes);
//								sa.assertTrue(false,  "subject textbox not visible onadvanced filter");
//							}
//						}else {
//							log(LogStatus.ERROR, "priority dropdpown not visible onadvanced filter", YesNo.Yes);
//							sa.assertTrue(false,  "priority dropdpown not visible onadvanced filter");
//						}
//					}
//					else {
//						log(LogStatus.ERROR, "advanced filter icon not clickable so could not add fields", YesNo.Yes);
//						sa.assertTrue(false,  "advanced filter icon not clickable so could not add fields");
//					}
//				}
//				else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not found contact 3 name",YesNo.Yes);
//				sa.assertTrue(false,"not found contact 3 name");
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "contact tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "contact tab not clickable");
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc038_VerifySearchActivitiesAttachmentRevertToDefault(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		Set<String> dropdownNames= new HashSet<String>();
//		dropdownNames.add("Owner");
//		dropdownNames.add("Type");
//		dropdownNames.add("Status");
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO, "clicked on tab "+TabName.Object2Tab, YesNo.No);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, 10)) {
//				log(LogStatus.INFO, "clicked on contact "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 10), "related tab", action.BOOLEAN)) {
//					log(LogStatus.INFO, "clicked on tab "+RelatedTab.Activities, YesNo.No);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					if(click(driver, cp.getadvancedFilterImg(projectName, 10), "advanced filter img", action.BOOLEAN)) {
//						log(LogStatus.INFO, "clicked on advanced filter ", YesNo.No);
//						if (click(driver, cp.getsearchActAttach(projectName,10), "search activities/attach", action.BOOLEAN)) {
//							scrollDownThroughWebelement(driver, cp.revertToDefaultsSearchActivitiesAttachment(projectName, 
//									EnableDisable.Enable, 10), "revert to default button");
//							if (cp.revertToDefaultsSearchActivitiesAttachment(projectName, EnableDisable.Enable, 10)!=null) {
//								log(LogStatus.INFO, "successfully verified revert to default button", YesNo.No);
//								
//							}else {
//								log(LogStatus.ERROR, "could not verified revert to default button", YesNo.Yes);
//								sa.assertTrue(false, "could not verified revert to default button");
//							}
//							if (click(driver, cp.getCrossIconOfTextboxInSearchActivitiesAttachment(projectName, LeftRight.Left
//									, 2, 10), "cross icon beside textbox", action.SCROLLANDBOOLEAN)) {
//								if (click(driver, cp.revertToDefaultsSearchActivitiesAttachment(projectName, EnableDisable.Enable,
//										10), "revert to default", action.SCROLLANDBOOLEAN)) {
//									if (cp.getWarningPopupSearchActivitiesAttachmentYesOrNo(projectName, YesNo.No, 10)!=null) {
//										log(LogStatus.INFO, "successfully verified revert to default yes button", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "could not verified revert to default yes button", YesNo.Yes);
//										sa.assertTrue(false, "could not verified revert to default yes button");
//									}
//									if (cp.getWarningPopupSearchActivitiesAttachmentYesOrNo(projectName, YesNo.Yes, 10)!=null) {
//										log(LogStatus.INFO, "successfully verified revert to default no button", YesNo.No);
//
//									}else {
//										log(LogStatus.ERROR, "could not verified revert to default no button", YesNo.Yes);
//										sa.assertTrue(false, "could not verified revert to default no button");
//									}
//									if (cp.getrevertToDefaultErrorPopup(projectName, 10)!=null) {
//										if (cp.getrevertToDefaultErrorPopup(projectName,10).getText().trim().contains(BasePageErrorMessage.revertToDefaultError1) &&
//												cp.getrevertToDefaultErrorPopup(projectName,10).getText().trim().contains(BasePageErrorMessage.revertToDefaultError2)) {
//											log(LogStatus.INFO, "successfully verified revert to default error message", YesNo.No);
//										}
//										else {
//											log(LogStatus.ERROR, "could not verified revert to default error message", YesNo.Yes);
//											sa.assertTrue(false, "could not verified revert to default error message");
//
//										}
//									}else {
//										log(LogStatus.ERROR, "not present revert to default error message", YesNo.Yes);
//										sa.assertTrue(false, "not present revert to default error message");
//
//									}
//									if (click(driver, cp.revertToDefaultsSearchActivitiesAttachment(projectName, EnableDisable.Enable, 
//											10), "revert to default", action.SCROLLANDBOOLEAN)) {
//										if (click(driver, cp.getWarningPopupSearchActivitiesAttachmentYesOrNo(projectName, YesNo.No, 10), "n", action.BOOLEAN)) {
//											log(LogStatus.INFO, "successfully clicked revert to default yes button", YesNo.No);
//
//										}else {
//											log(LogStatus.ERROR, "could not click revert to default error message", YesNo.Yes);
//											sa.assertTrue(false, "could not click revert to default error message");
//
//										}
//									}
//									else {
//										log(LogStatus.ERROR, "could not click revert to default button", YesNo.Yes);
//										sa.assertTrue(false, "could not click revert to default button");
//
//									}
//								}
//								else {
//									log(LogStatus.ERROR, "could not click revert to default button", YesNo.Yes);
//									sa.assertTrue(false, "could not click revert to default button");
//
//								}
//							}else {
//								log(LogStatus.ERROR, "could not click cross icon in front of priority dropdown", YesNo.Yes);
//								sa.assertTrue(false, "could not click cross icon in front of priority dropdown");
//
//							}
//							if (click(driver, cp.revertToDefaultsSearchActivitiesAttachment(projectName, EnableDisable.Enable, 
//									10), "revert to default", action.SCROLLANDBOOLEAN)) {
//								if (click(driver, cp.getWarningPopupSearchActivitiesAttachmentYesOrNo(projectName, YesNo.No, 10), "no", action.BOOLEAN)) {
//									log(LogStatus.INFO, "successfully clicked revert to default yes button", YesNo.No);
//
//								}else {
//									log(LogStatus.ERROR, "could not click revert to default error message", YesNo.Yes);
//									sa.assertTrue(false, "could not click revert to default error message");
//
//								}
//							}
//							else {
//								log(LogStatus.ERROR, "could not click revert to default button", YesNo.Yes);
//								sa.assertTrue(false, "could not click revert to default button");
//
//							}
//							if (click(driver, cp.revertToDefaultsSearchActivitiesAttachment(projectName, EnableDisable.Enable, 
//									10), "revert to default", action.SCROLLANDBOOLEAN)) {
//								if (click(driver, cp.getWarningPopupSearchActivitiesAttachmentYesOrNo(projectName, YesNo.Yes, 10), "yes", action.BOOLEAN)) {
//									log(LogStatus.INFO, "successfully clicked revert to default yes button", YesNo.No);
//										
//								}else {
//									log(LogStatus.ERROR, "could not click revert to default error message", YesNo.Yes);
//									sa.assertTrue(false, "could not click revert to default error message");
//										
//								}
//							}
//							else {
//								log(LogStatus.ERROR, "could not click revert to default button", YesNo.Yes);
//								sa.assertTrue(false, "could not click revert to default button");
//									
//							}
//							//verify absence of subject and priority
//							scrollDownThroughWebelement(driver, cp.getAdvancedFilteDropdowns(projectName, PageLabel.Owner.toString(),10), "advanced filter page");
//							if (cp.getAdvancedFilteDropdowns(projectName, PageLabel.Subject.toString(), 5)==null) {
//								log(LogStatus.INFO, "successfully verified absence of Subject textbox", YesNo.No);
//								
//							}else {
//								log(LogStatus.ERROR, "Subject textbox is present, but it should not be", YesNo.Yes);
//								sa.assertTrue(false, "Subject textbox is present, but it should not be");
//									
//							}
//							if (cp.getAdvancedFilteDropdowns(projectName, PageLabel.Priority.toString(), 5)==null) {
//								log(LogStatus.INFO, "successfully verified absence of Priority Dropdowns", YesNo.No);
//									
//							}else {
//								log(LogStatus.ERROR, "Priority Dropdowns is present, but it should not be", YesNo.Yes);
//								sa.assertTrue(false, "Priority Dropdowns is present, but it should not be");
//									
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click search activities settings icon", YesNo.Yes);
//							sa.assertTrue(false, "could not click search activities settings icon");
//								
//						}
//					}else {
//						log(LogStatus.ERROR, "could not click advanced filter img", YesNo.Yes);
//						sa.assertTrue(false, "could not click advanced filter img");
//					}
//				}
//				else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not found contact 3 name",YesNo.Yes);
//				sa.assertTrue(false,"not found contact 3 name");
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "contact tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "contact tab not clickable");
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc039_VerifySendAnEmailWithAttachment_Action(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String attachmentPath= System.getProperty("user.dir")+"\\UploadFiles\\tc039\\Testing.pdf";
//		String date=todaysDate;
//		
//		System.out.println(attachmentPath);
//		lp.switchToClassic();
//		String mode="Classic",environment="";
//		if (cp.clickOnTab(projectName,environment, mode,TabName.Object2Tab)) {
//			log(LogStatus.INFO, "clicked on tab "+TabName.Object2Tab, YesNo.No);
//			if (cp.clickOnCreatedContact(environment, mode, Smoke_TaskContact3FName, Smoke_TaskContact3LName)) {
//			log(LogStatus.INFO, "clicked on contact "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, YesNo.No);
//				if (click(driver, cp.sendAnEmailButtonOnActivityHistory(projectName, 10), "send an email", action.SCROLLANDBOOLEAN)) {
//					if (cp.sendEmail(mode,projectName, Smoke_Task20Subject, Smoke_Task20Comment, true, attachmentPath, 20)) {
//						log(LogStatus.INFO, "successfully sent email to "+ Smoke_TaskContact3FName+" "+ Smoke_TaskContact3LName, YesNo.No);
//						ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask20", excelLabel.Due_Date);
//						
//					}
//					else {
//						log(LogStatus.ERROR, "could not send email", YesNo.Yes);
//						sa.assertTrue(false, "could not send email");
//					}
//				}else {
//					log(LogStatus.ERROR, "send email button is not clickable on contact page, could not send email", YesNo.Yes);
//					sa.assertTrue(false, "send email button is not clickable on contact page, could not send email");
//				}
//			}else {
//				log(LogStatus.ERROR,  Smoke_TaskContact3FName+" "+ Smoke_TaskContact3LName+" is not found on contact page, could not send email", YesNo.Yes);
//				sa.assertTrue(false, Smoke_TaskContact3FName+" "+ Smoke_TaskContact3LName+" is not found on contact page, could not send email");
//			}
//		}else {
//			log(LogStatus.ERROR, "contact tab is not clickable, so could not send email", YesNo.Yes);
//			sa.assertTrue(false, "contact tab is not clickable, so could not send email");
//		}
//		switchToDefaultContent(driver);
//		lp.switchToLighting();
//		
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc039_VerifySendAnEmailWithAttachment_Impact(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName);
//		taskstd1.add("");
//		taskstd1.add(Smoke_Task20Status);
//		taskstd1.add(crmUser1FirstName+" "+crmUser1LastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Email.toString());
//		taskstd1.add(Links.View.toString());	
//		List<String> taskstd2=new LinkedList<String>();
//		taskstd2.add("");
//		taskstd2.add(Smoke_Task20Subject);
//		taskstd2.add("");
//		taskstd2.add(crmUser1FirstName+" "+crmUser1LastName);
//		taskstd2.add("");
//		taskstd2.add("");
//		taskstd2.add("");	
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask20", excelLabel.Due_Date);
//		String fileName="Testing.pdf";
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		TabName[] tn= {TabName.Object2Tab,TabName.Object1Tab};
//		WebElement ele=null;
//		String records[]= {Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName,Smoke_TaskINS2Name};
//		PageName pn[]= {PageName.Object2Page,PageName.Object1Page};
//		for (int i = 0;i<tn.length;i++) {
//			if (cp.clickOnTab(projectName, tn[i])) {
//				log(LogStatus.INFO, "clicked on tab "+tn[i], YesNo.No);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tn[i],records[i] , 10)) {
//					log(LogStatus.INFO, "clicked on contact "+records[i], YesNo.No);
//					if (click(driver, cp.getRelatedTab(projectName, pn[i], RelatedTab.Activities, 10), "related tab", action.BOOLEAN)) {
//						log(LogStatus.INFO, "clicked on tab "+RelatedTab.Activities, YesNo.No);
//						switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//						lp.verifyingRelatedTabData2(projectName, pn[i], RelatedTab.Activities, date, "Email: "+Smoke_Task20Subject, taskstd1, action.BOOLEAN, 15);
//						if (i==0) {
//							if (click(driver,cp.getLinkOnSubTab(projectName, pn[i], RelatedTab.Activities, Smoke_Task20Subject,
//									"View", null, action.BOOLEAN, 10),"view", action.BOOLEAN)) {
//								ThreadSleep(3000);
//								if (cp.getcommentsTextOnPopup(projectName, 10)!=null) {
//									String text=cp.getcommentsTextOnPopup(projectName, 10).getText().trim();
//									scrollDownThroughWebelement(driver, ip.getOkButtonRAorComment(projectName,"Comment", 10), "ok");
//									appLog.info(text);
//									if (text.contains(Smoke_TaskContact3EmailID)) {
//										log(LogStatus.INFO, "successfully verified presence of "+Smoke_TaskContact3EmailID, YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "contact 3 email id not present on comments popup for 'to' "+Smoke_TaskContact3EmailID, YesNo.Yes);
//										sa.assertTrue(false, "contact 3 email id not present on comments popup for 'to' "+Smoke_TaskContact3EmailID);
//									}
//									if (text.contains(crmUser1EmailID)) {
//										log(LogStatus.INFO, "successfully verified presence of "+crmUser1EmailID, YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "user1 email id not present on comments popup on bcc "+crmUser1EmailID, YesNo.Yes);
//										sa.assertTrue(false, "user1 email id not present on comments popup on bcc "+crmUser1EmailID);
//									}
//									if (text.contains("Attachment: "+fileName)) {
//										log(LogStatus.INFO, "successfully verified presence of attachment "+fileName, YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "attachment name not present on comments popup", YesNo.Yes);
//										sa.assertTrue(false, "attachment name not present on comments popup");
//									}
//									if (text.contains("Subject: "+Smoke_Task20Subject)) {
//										log(LogStatus.INFO, "successfully verified presence of Subject "+Smoke_Task20Subject, YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "Subject not present on comments popup", YesNo.Yes);
//										sa.assertTrue(false, "Subject not present on comments popup");
//									}
//									if (text.contains(Smoke_Task20Comment)) {
//										log(LogStatus.INFO, "successfully verified presence of body "+Smoke_Task20Comment, YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "body text not present on comments popup", YesNo.Yes);
//										sa.assertTrue(false, "body text not present on comments popup");
//									}
//								}else {
//									log(LogStatus.ERROR, "comment text popup is not visible", YesNo.Yes);
//									sa.assertTrue(false, "comment text popup is not visible");
//								}
//								click(driver, ip.getOkButtonRAorComment(projectName,"Comment", 10), "ok icon", action.SCROLLANDBOOLEAN);
//							}
//							else {
//								log(LogStatus.ERROR, "view link is not clickable, so cannot verify comments popup", YesNo.Yes);
//								sa.assertTrue(false, "view link is not clickable, so cannot verify comments popup");
//
//							}
//						}
//						
//						if (!isSelected(driver, ip.getattachmentCheckbox(projectName, 10), "attachments")) {
//							click(driver,ip.getattachmentCheckbox(projectName, 10) , "attachments checkbox", action.BOOLEAN);
//							log(LogStatus.INFO, "attachments checkbox is now checked", YesNo.No);
//						}
//						else {
//							log(LogStatus.INFO, "attachments checkbox is already checked", YesNo.No);
//
//						}
//						lp.verifyingRelatedTabData2(projectName, pn[i], RelatedTab.Activities, date,fileName, taskstd2, action.BOOLEAN, 15);
//
//						ele = cp.getAllLinksOnSubTab(projectName, pn[i], RelatedTab.Activities,Smoke_Task20Subject, action.BOOLEAN, 10);
//						String parentId=null,secondWindow=null;
//						boolean flag=false;
//						if (click(driver, ele, "email subject", action.BOOLEAN)) {
//							parentId=switchOnWindow(driver);
//							if (parentId!=null) {
//								ThreadSleep(5000);
//								secondWindow=driver.getWindowHandle();
//								if (click(driver, ip.clickOnDocumentOnEmailPage(projectName, fileName, 10), "file name : "+fileName, action.BOOLEAN)) {
//									for (String win:driver.getWindowHandles()) {
//										if (!win.equals(parentId) && (!win.equals(secondWindow))) {
//											driver.switchTo().window(win);
//											flag=true;
//											break;
//										}
//									}
//									if (flag) {
//										log(LogStatus.INFO, "successfully verified document opening", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "new window is opened, but document is not verified on", YesNo.Yes);
//										sa.assertTrue(false, "new window is opened, but document is not verified");
//									}
//									driver.close();
//									driver.switchTo().window(secondWindow);
//								}
//								else {
//									log(LogStatus.ERROR, "could not click on document name on email", YesNo.Yes);
//									sa.assertTrue(false, "could not click on document name on email");
//								}
//								driver.close();
//								driver.switchTo().window(parentId);
//							}
//							else {
//								log(LogStatus.ERROR, "new window not found", YesNo.Yes);
//								sa.assertTrue(false, "new window not found");
//
//							}
//						}
//						else {
//							log(LogStatus.ERROR, "email subject is not clickable, so cannot verify email document", YesNo.Yes);
//							sa.assertTrue(false, "email subject is not clickable, so cannot verify email document");
//						}
//						switchToDefaultContent(driver);
//					}else {
//						log(LogStatus.ERROR, "activities related tab is not clickable, so cannot verify email document", YesNo.Yes);
//						sa.assertTrue(false, "activities related tab is not clickable, so cannot verify email document");
//					}
//					if (i==1) {
//						if (click(driver, cp.getRelatedTab(projectName, pn[i], RelatedTab.Meetings, 10), "related tab", action.BOOLEAN)) {
//							switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//							ele = cp.getAllLinksOnSubTab(projectName, pn[i], RelatedTab.Meetings,Smoke_Task20Subject, action.BOOLEAN, 5);
//							if (ele==null) {
//								log(LogStatus.INFO, "successfully verified absence of "+Smoke_Task20Subject, YesNo.No);
//							}else {
//								log(LogStatus.ERROR,Smoke_Task20Subject+ " is present on meetings tab but it should not be", YesNo.Yes);
//								sa.assertTrue(false,Smoke_Task20Subject+ " is present on meetings tab but it should not be");
//							}
//							if (!isSelected(driver, ip.getattachmentCheckbox(projectName, 10), "attachments")) {
//								click(driver,ip.getattachmentCheckbox(projectName, 10) , "attachments checkbox", action.BOOLEAN);
//								log(LogStatus.INFO, "attachments checkbox is now checked", YesNo.No);
//							}
//							else {
//								log(LogStatus.INFO, "attachments checkbox is already checked", YesNo.No);
//
//							}
//							lp.verifyingRelatedTabData2(projectName, pn[i], RelatedTab.Meetings, date,fileName, taskstd2, action.BOOLEAN, 15);
//							switchToDefaultContent(driver);
//						}else {
//							log(LogStatus.ERROR, "Meetings related tab is not clickable, so cannot verify email document", YesNo.Yes);
//							sa.assertTrue(false, "Meetings related tab is not clickable, so cannot verify email document");
//						}
//					}
//				}else {
//					log(LogStatus.ERROR, "could not find "+records[i]+" on "+tn[i], YesNo.Yes);
//					sa.assertTrue(false, "could not find "+records[i]+" on "+tn[i]);
//				}
//			}else {
//				log(LogStatus.ERROR, tn[i]+"tab is not clickable", YesNo.Yes);
//				sa.assertTrue(false, tn[i]+"tab is not clickable");
//			}
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//					
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc040_VerifySendListEmailWithAttachment_Action(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//			
//		String date=todaysDate;
//		String attachmentPath= System.getProperty("user.dir")+"\\UploadFiles\\tc040\\Testing List Email.docx";
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		WebElement ele=null;
//		PageName pn[]= {PageName.Object2Page,PageName.Object1Page};
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO, "clicked on tab "+TabName.Object2Tab, YesNo.No);
//			if (cp.sendListEmail(projectName, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+","+Smoke_TaskContact2FName+" "
//					+Smoke_TaskContact2LName, Smoke_TestListEmailSubject, Smoke_TestListEmailComment, attachmentPath)) {
//				log(LogStatus.INFO, "successfully sent email", YesNo.No);
//				ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask25", excelLabel.Due_Date);
//
//			}
//			else {
//				log(LogStatus.ERROR, "could not send email through send list email button", YesNo.Yes);
//				sa.assertTrue(false, "could not send email through send list email button" );
//			}
//		}else {
//			log(LogStatus.ERROR, "tab is not clickable", YesNo.Yes);
//			sa.assertTrue(false, "tab is not clickable" );
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//		
//
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc040_VerifySendListEmailWithAttachment_Impact(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName);
//		taskstd1.add(Smoke_TestListEmailSubject);
//		taskstd1.add(Status.Completed.toString());
//		taskstd1.add(crmUser1FirstName+" "+crmUser1LastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.ListEmail.toString());
//		taskstd1.add(Links.View.toString());	
//		List<String> taskstd2=new LinkedList<String>();
//		taskstd2.add(Smoke_TaskContact2FName+" "+Smoke_TaskContact2LName);
//		taskstd2.add(Smoke_TestListEmailSubject);
//		taskstd2.add(Status.Completed.toString());
//		taskstd2.add(crmUser1FirstName+" "+crmUser1LastName);
//		taskstd2.add("");
//		taskstd2.add(Activity.ListEmail.toString());
//		taskstd2.add(Links.View.toString());	
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask25", excelLabel.Due_Date);
//		String attachmentPath= System.getProperty("user.dir")+"\\UploadFiles\\tc040\\Testing List Email.docx";
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		WebElement ele=null;
//
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO, "clicked on tab "+TabName.Object2Tab, YesNo.No);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab,Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName , 10)) {
//				log(LogStatus.INFO, "clicked on contact "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName,PageName.Object2Page, RelatedTab.Activities, 10), "related tab", action.BOOLEAN)) {
//					log(LogStatus.INFO, "clicked on tab "+RelatedTab.Activities, YesNo.No);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					lp.verifyingRelatedTabData2(projectName,PageName.Object2Page, RelatedTab.Activities, date,"List Email: "+ Smoke_TestListEmailSubject, taskstd1, action.BOOLEAN, 15);
//					
//					ele=ip.getLinkOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_TestListEmailSubject,
//						"View",null , action.BOOLEAN, 10);
//					if (click(driver, ele, "view", action.BOOLEAN)) {
//						ele=cp.getcommentsTextOnPopup(projectName, 5);
//						if (ele==null) {
//							log(LogStatus.INFO, "successfullu verified empty comments text", YesNo.No);
//
//						}
//						else {
//							String text=cp.getcommentsTextOnPopup(projectName, 5).getText().trim();
//							if (text.equalsIgnoreCase("")) {
//								log(LogStatus.INFO, "successfullu verified empty comments text", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "could not verify empty comments text", YesNo.No);
//								sa.assertTrue(false, "could not verify empty comments text");
//							}
//						}
//						click(driver, ip.getCrossIconRAorComment(projectName,"Comment", 10), "ok icon", action.BOOLEAN);
//							
//					}else {
//						log(LogStatus.ERROR, "view link is not clickable, so cannot verify comments", YesNo.No);
//						sa.assertTrue(false, "view link is not clickable, so cannot verify comments");
//					}
//				ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_TestListEmailSubject, action.BOOLEAN, 10);
//				String parentId=null;
//				if (click(driver, ele, "email subject", action.BOOLEAN)) {
//					parentId=switchOnWindow(driver);
//					if (parentId!=null) {
//						ThreadSleep(5000);
//						if (cp.getHeaderTextForPage(projectName, PageName.ListEmail, Smoke_TestListEmailSubject, action.BOOLEAN, 10)!=null) {
//							
//							log(LogStatus.INFO, "successfullu verified list email detail page", YesNo.No);
//						}else {
//							log(LogStatus.ERROR, "could not verify list email detail page", YesNo.No);
//							sa.assertTrue(false, "could not verify list email detail page");
//						}
//						driver.close();
//						driver.switchTo().window(parentId);
//					}else {
//						log(LogStatus.ERROR, "new window could not be opened", YesNo.No);
//						sa.assertTrue(false, "new window could not be opened");
//					}
//				}else {
//					log(LogStatus.ERROR, "email subject link could not be opened", YesNo.No);
//					sa.assertTrue(false, "email subject link could not be opened");
//				}
//				}else {
//					log(LogStatus.ERROR, "Activities related tab is not clickable, so cannot verify email document", YesNo.Yes);
//					sa.assertTrue(false, "Activities related tab is not clickable, so cannot verify email document");
//				}
//			}else {
//				log(LogStatus.ERROR, "could not find "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName +" on object 2 tab", YesNo.Yes);
//				sa.assertTrue(false,"could not find "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName +" on object 2 tab");
//			}
//		}else {
//			log(LogStatus.ERROR, "contact tab is not clickable, so cannot verify email document", YesNo.Yes);
//			sa.assertTrue(false, "contact tab is not clickable, so cannot verify email document");
//		}
//		
//		switchToDefaultContent(driver);
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO, "clicked on tab "+TabName.Object2Tab, YesNo.No);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab,Smoke_TaskContact2FName+" "+Smoke_TaskContact2LName , 10)) {
//				log(LogStatus.INFO, "clicked on contact "+Smoke_TaskContact2FName+" "+Smoke_TaskContact2LName, YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName,PageName.Object2Page, RelatedTab.Activities, 10), "related tab", action.BOOLEAN)) {
//					log(LogStatus.INFO, "clicked on tab "+RelatedTab.Activities, YesNo.No);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					lp.verifyingRelatedTabData2(projectName,PageName.Object2Page, RelatedTab.Activities, date, "List Email: "+Smoke_TestListEmailSubject, taskstd2, action.BOOLEAN, 15);
//				}else {
//					log(LogStatus.ERROR, "related tab is not clickable, so cannot verify email document", YesNo.Yes);
//					sa.assertTrue(false, "related tab is not clickable, so cannot verify email document");
//				}
//			}else {
//				log(LogStatus.ERROR, "could not find "+Smoke_TaskContact2FName+" "+Smoke_TaskContact2LName +" on object 2 tab", YesNo.Yes);
//				sa.assertTrue(false,"could not find "+Smoke_TaskContact2FName+" "+Smoke_TaskContact2LName +" on object 2 tab");
//			}
//		}else {
//			log(LogStatus.ERROR, "contact tab is not clickable, so cannot verify email document", YesNo.Yes);
//			sa.assertTrue(false, "contact tab is not clickable, so cannot verify email document");
//		}
//		
//		switchToDefaultContent(driver);
//		if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO, "clicked on tab "+TabName.Object1Tab, YesNo.No);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab,Smoke_TaskINS2Name , 10)) {
//				log(LogStatus.INFO, "clicked on entity/account "+Smoke_TaskINS2Name, YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName,PageName.Object1Page, RelatedTab.Activities, 10), "related tab", action.BOOLEAN)) {
//					log(LogStatus.INFO, "clicked on tab "+RelatedTab.Activities, YesNo.No);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					lp.verifyingRelatedTabData2(projectName,PageName.Object1Page, RelatedTab.Activities, date,"List Email: "+ Smoke_TestListEmailSubject, taskstd1, action.BOOLEAN, 15);
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities,Smoke_TestListEmailSubject, action.BOOLEAN, 10);
//					String parentId=null;
//					if (click(driver, ele, "email subject", action.BOOLEAN)) {
//						parentId=switchOnWindow(driver);
//						if (parentId!=null) {
//							ThreadSleep(5000);
//							if (cp.getHeaderTextForPage(projectName, PageName.ListEmail, Smoke_TestListEmailSubject, action.BOOLEAN, 10)!=null) {
//								
//								log(LogStatus.INFO, "successfullu verified list email detail page", YesNo.No);
//							}else {
//								log(LogStatus.ERROR, "could not verify list email detail page", YesNo.No);
//								sa.assertTrue(false, "could not verify list email detail page");
//							}
//							driver.close();
//							driver.switchTo().window(parentId);
//						}else {
//							log(LogStatus.ERROR, "new window could not be opened", YesNo.No);
//							sa.assertTrue(false, "new window could not be opened");
//						}
//					}else {
//						log(LogStatus.ERROR, "email subject link could not be opened", YesNo.No);
//						sa.assertTrue(false, "email subject link could not be opened");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab activities is not clickable", YesNo.No);
//					sa.assertTrue(false, "related tab activities is not clickable");
//				}
//				if (click(driver, cp.getRelatedTab(projectName,PageName.Object1Page, RelatedTab.Meetings, 10), "related tab Meetings", action.BOOLEAN)) {
//					log(LogStatus.INFO, "clicked on tab "+RelatedTab.Meetings, YesNo.No);
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Meetings,Smoke_TestListEmailSubject, action.BOOLEAN, 5);
//					if (ele==null) {
//						log(LogStatus.INFO, "email subject link is absent on meetings as expected", YesNo.No);
//							
//					}else {
//						log(LogStatus.ERROR, "email subject link is present on meetings tab but it should not be", YesNo.No);
//						sa.assertTrue(false, "email subject link is present on meetings tab but it should not be");
//					}
//				}else {
//					log(LogStatus.ERROR, "related tab meetings is not clickable", YesNo.No);
//					sa.assertTrue(false, "related tab meetings is not clickable");
//				}
//			}else {
//				log(LogStatus.ERROR, "could not find "+Smoke_TaskINS2Name +" on object 2 tab", YesNo.Yes);
//				sa.assertTrue(false,"could not find "+Smoke_TaskINS2Name +" on object 2 tab");
//			}
//		}else {
//			log(LogStatus.ERROR, "entity/account tab is not clickable, so cannot verify email document", YesNo.Yes);
//			sa.assertTrue(false, "entity/account tab is not clickable, so cannot verify email document");
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//
///////////////////////////////////////  Azhar ////////////////////////////////////////////////////////////
//	
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc041_createDataRelaedToMeeting(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String value="";
//		String type="";
//		String[][] EntityOrAccounts = {
//				{ Smoke_MTINS1Name, Smoke_MTINS1RecordType }
//				, {Smoke_MTINS2Name,Smoke_MTINS2RecordType},
//				{Smoke_MTINS3Name,Smoke_MTINS3RecordType},
//				{Smoke_MTINS4Name,Smoke_MTINS4RecordType},
//				{Smoke_MTINS5Name,Smoke_MTINS5RecordType},
//				{Smoke_MTINS6Name,Smoke_MTINS6RecordType},
//				{Smoke_MTINS7Name,Smoke_MTINS7RecordType},
//				{Smoke_MTINS8Name,Smoke_MTINS8RecordType},
//				{Smoke_MTINS9Name,Smoke_MTINS9RecordType}
//		};
//		for (String[] accounts : EntityOrAccounts) {
//			if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//				log(LogStatus.INFO,"Click on Tab : "+TabName.Object1Tab,YesNo.No);	
//
//
//				value = accounts[0];
//				type = accounts[1];
//				if (ip.createEntityOrAccount(projectName, value, type, null, 15)) {
//					log(LogStatus.INFO,"Created Account/Entity : "+value+" of record type : "+type,YesNo.No);	
//				} else {
//					sa.assertTrue(false,"Not Able to Create Account/Entity : "+value+" of record type : "+type);
//					log(LogStatus.SKIP,"Not Able to Create Account/Entity : "+value+" of record type : "+type,YesNo.Yes);
//				}
//
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//			}
//		}
//
//		String fname="";
//		String lname="";
//		String mailID="";
//		String ins="";
//		String recordType="";
//		String[][] contactsInfo = { { Smoke_MTContact1FName, Smoke_MTContact1LName, Smoke_MTContact1INSName,
//			Smoke_MTContact1EmailID ,Smoke_MTContact1RecordType}
//		, {Smoke_MTContact2FName,Smoke_MTContact2LName,Smoke_MTContact2INSName,
//			Smoke_MTContact2EmailID,Smoke_MTContact2RecordType},
//		{Smoke_MTContact3FName,Smoke_MTContact3LName,Smoke_MTContact3INSName,
//				Smoke_MTContact3EmailID,Smoke_MTContact3RecordType},
//		{Smoke_MTContact4FName,Smoke_MTContact4LName,Smoke_MTContact4INSName,
//					Smoke_MTContact4EmailID,Smoke_MTContact4RecordType},
//		{Smoke_MTContact5FName,Smoke_MTContact5LName,Smoke_MTContact5INSName,
//						Smoke_MTContact5EmailID,Smoke_MTContact5RecordType}
//		};
//		int i=1;
//		for (String[] contacts : contactsInfo) {
//			if (lp.clickOnTab(projectName, TabName.Object2Tab)) {
//				log(LogStatus.INFO,"Click on Tab : "+TabName.Object2Tab,YesNo.No);	
//				fname = contacts[0];
//				lname = contacts[1];
//				ins=contacts[2];
//				recordType=contacts[4];
//				mailID=	lp.generateRandomEmailId(gmailUserName);
//				ExcelUtils.writeData(testCasesFilePath, mailID, "Contacts", excelLabel.Variable_Name, "AAMTC"+i,excelLabel.Contact_EmailId);
//
//				if (cp.createContact(projectName, fname, lname, ins, mailID,recordType, null, 15)) {
//					log(LogStatus.INFO,"Created Contact : "+fname+" "+lname,YesNo.No);	
//				} else {
//					sa.assertTrue(false,"Not Able to Create Contact : "+fname+" "+lname);
//					log(LogStatus.SKIP,"Not Able to Create Contact: "+fname+" "+lname,YesNo.Yes);
//				}
//
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//			}
//			i++;
//		}
//
//
//		String[][] fundsOrDeals = {{Smoke_MTFund1Name,Smoke_MTFund1Type,Smoke_MTFund1InvestmentCategory,Smoke_MTFund1RecordType},
//				{Smoke_MTFund2Name,Smoke_MTFund2Type,Smoke_MTFund2InvestmentCategory,Smoke_MTFund2RecordType}};
//		for (String[] funds : fundsOrDeals) {
//			if (lp.clickOnTab(projectName, TabName.Object3Tab)) {
//				log(LogStatus.INFO,"Click on Tab : "+TabName.Object3Tab,YesNo.No);	
//
//				if (ProjectName.MNA.toString().equals(projectName)) {
//					
//					if (fp.createDealMNA(projectName, "Sell-side Deal",funds[0], "Prospect", "Prospect",null, 15)) {
//						log(LogStatus.INFO,"Created Fund/Deal : "+funds[0],YesNo.No);	
//					} else {
//						sa.assertTrue(false,"Not Able to Create Fund/Deal  : "+funds[0]);
//						log(LogStatus.SKIP,"Not Able to Create Fund/Deal  : "+funds[0],YesNo.Yes);
//					}
//					
//				} else {
//
//					if (fp.createFundPE(projectName, funds[0], funds[3], funds[1], funds[2], null, 15)) {
//						log(LogStatus.INFO,"Not Able to Create Fund/Deal : "+funds[0],YesNo.No);	
//					} else {
//						sa.assertTrue(false,"Not Able to Create Fund/Deal  : "+funds[0]);
//						log(LogStatus.SKIP,"Not Able to Create Fund/Deal  : "+funds[0],YesNo.Yes);
//					}
//					
//				}
//				
//
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//			}
//		}
//		
//		
//		String[][] customObjValues = {{meetingCustomObj1Name,meetingCustomObj1RecordType},{meetingCustomObj2Name,meetingCustomObj2RecordType}};
//		for (String[] val : customObjValues) {
//			if (lp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//				log(LogStatus.INFO,"Click on Tab : "+TabName.TestCustomObjectTab,YesNo.No);	
//		
//				if (cop.createRecord(projectName, val[1], tabCustomObjField, val[0], false)) {
//					log(LogStatus.INFO,"successfully Created custom record : "+val[0],YesNo.No);	
//				} else {
//					sa.assertTrue(false,"Not Able to Create custom record  : "+val[0]);
//					log(LogStatus.SKIP,"Not Able to Create custom record  : "+val[0],YesNo.Yes);
//				}
//
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//			}
//		}
//		
//		
//
//
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc042_1_verifyNewTaskMultipleAssociation_Action(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact2Name = Smoke_MTContact2FName+" "+Smoke_MTContact2LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		boolean flag=false;
//
//		PageName pageName = PageName.Object1Page;
//		RelatedTab relatedTab = RelatedTab.Activities;
//		TabName tabName = TabName.Object1Tab;
//		String entity2 = Smoke_MTINS2Name;
//		String date=todaysDate;
//		if (cp.clickOnTab(projectName, tabName)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+tabName,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, tabName, entity2, 20)) {
//				log(LogStatus.INFO,"Clicked on Item : "+entity2,YesNo.No);
//				ThreadSleep(1000);
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, pageName, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//
//					if (clickUsingJavaScript(driver, cp.getButtonNewTaskMultipleAssociations(projectName, 10), "New Task Multiple Association Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New Task Multiple Association button on Sub Tab : "+relatedTab,YesNo.Yes);
//						ThreadSleep(2000);	
//
//						ele = cp.getHeaderTextForPage(projectName, pageName,PageLabel.New_Task.toString(), action.BOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, pageName, PageLabel.Related_Associations.toString(), TabName.Object3Tab, Smoke_MTFund1Name, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+Smoke_MTFund1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+Smoke_MTFund1Name+" For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select "+Smoke_MTFund1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//						}
//
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, pageName, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, meetingCustomObj1Name, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//						}
//
//
//
//
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, pageName, PageLabel.Name.toString(), TabName.Object2Tab, contact2Name, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+contact2Name+" For Label "+PageLabel.Name,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+contact2Name+" For Label "+PageLabel.Name);
//							log(LogStatus.SKIP,"Not Able to Select "+contact2Name+" For Label "+PageLabel.Name,YesNo.Yes);
//
//						}
//
//
//
//
//						// Subject
//
//						String[][] dropDownLabelWithValues = {{PageLabel.Meeting_Type.toString(),Smoke_Task1MeetingType,
//							PageLabel.Priority.toString(),Smoke_Task1Priority}};
//						if (tp.enteringSubjectAndSelectDropDownValuesonTaskPopUp(projectName, PageName.TestCustomObjectPage, Smoke_Task1Subject, dropDownLabelWithValues, action.SCROLLANDBOOLEAN, 10)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//							if (sendKeys(driver, tp.getdueDateTextBoxInNewTask(projectName, 20), todaysDate, "due date", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO, "Entered value to Date Text Box", YesNo.Yes);
//								if (sendKeys(driver, tp.getcommentsTextBox(projectName, 10), Smoke_Task1Comment, "comments", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO, "Entered value to Coment Text Box", YesNo.Yes);
//									ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask1", excelLabel.Due_Date);
//									 
//									if (clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//
//
//										ele = cp.getCreatedConfirmationMsg(projectName, 15);
//										if (ele!=null) {
//											String actualValue = ele.getText().trim();
//											String expectedValue=tp.taskCreatesMsg(projectName, Smoke_Task1Subject);
//											if (actualValue.contains(expectedValue)) {
//												log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//											} else {
//												log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//												BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//											}
//										} else {
//											sa.assertTrue(false,"Created Task Msg Ele not Found");
//											log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//										}
//
//										switchToDefaultContent(driver);
//										switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//										ele=cp.getRefreshIconOnSearchResultForMeeting(projectName, pageName,relatedTab,action.BOOLEAN, 20);
//										if (click(driver, ele, "Refresh Icon", action.BOOLEAN)) {
//											log(LogStatus.INFO, "Clicked on Refesh Button", YesNo.No);	
//											ThreadSleep(1000);	
//											ele=cp.getRefreshIconOnSearchResultForMeeting(projectName, pageName,relatedTab,action.BOOLEAN, 20);
//											click(driver, ele, "Refresh Icon", action.BOOLEAN);
//											switchToDefaultContent(driver);
//											
//
//										} else {
//											log(LogStatus.ERROR, "Not Able to Click on Refesh Button so can not check created : "+Smoke_Task1Subject, YesNo.Yes);
//											sa.assertTrue(false,"Not Able to Click on Refesh Button so can not check created : "+Smoke_Task1Subject );
//
//										}
//
//
//
//									}
//									else {
//										log(LogStatus.ERROR, "Save Button is not visible so task could not be created", YesNo.Yes);
//										sa.assertTrue(false,"Save Button is not visible so task could not be created" );
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR, "comments textbox is not visible so task could not be created", YesNo.Yes);
//									sa.assertTrue(false,"comments textbox is not visible so task could not be created" );
//								}
//							}else {
//								log(LogStatus.ERROR, "Date textbox is not visible so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"Date textbox is not visible so task could not be created" );
//							}
//
//
//
//
//						}
//
//						else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on New Task Multiple Association button on Sub Tab : "+relatedTab);
//						log(LogStatus.SKIP,"Not Able to Click on New Task Multiple Association button on Sub Tab : "+relatedTab,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//
//
//			} else {
//				sa.assertTrue(false,"Item Not Found : "+entity2);
//				log(LogStatus.SKIP,"Item  Not Found : "+entity2,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc042_2_verifyNewTaskMultipleAssociation_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		WebElement ele ;
//		String parentID=null;
//
//		String contact2Name = Smoke_MTContact2FName+" "+Smoke_MTContact2LName;
//		String entity2 = Smoke_MTINS2Name;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		String meetingSubject=Smoke_Task1Subject;
//		String crmUserName = crmUser1FirstName+" "+crmUser1LastName;
//		String date =Smoke_Task1Date;
//
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contact2Name);
//		taskstd1.add(entity2+" +"+2);
//		taskstd1.add(Status.Not_Started.toString());
//		taskstd1.add(owner);
//		taskstd1.add(Smoke_Task1MeetingType);
//		taskstd1.add(Activity.Task.toString());
//		taskstd1.add(Links.View.toString());	
//
//		TabName[] tabNames = {TabName.Object1Tab,TabName.Object1Tab,TabName.Object3Tab,TabName.TestCustomObjectTab};
//
//		String[] names = {Smoke_MTINS1Name,Smoke_MTINS2Name,Smoke_MTFund1Name,meetingCustomObj1Name};
//
//		TabName tabName ;
//		RelatedTab relatedTab;
//		int i=0;
//		RelatedTab[] relatedTabs = {RelatedTab.Activities,RelatedTab.Meetings};
//		for (String name : names) {
//			tabName=tabNames[i];
//			if (cp.clickOnTab(projectName, tabName)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+name,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tabName, name, 20)) {
//					log(LogStatus.INFO,"Clicked on  : "+name+" For : "+tabName,YesNo.No);
//					ThreadSleep(1000);
//					for (int j = 0; j < relatedTabs.length; j++) {
//						relatedTab=relatedTabs[j];
//						if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab+" For : "+name,YesNo.No);
//							ThreadSleep(2000);
//
//
//							switchToDefaultContent(driver);
//							switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//							ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, relatedTab, meetingSubject, action.BOOLEAN, 3);
//							if (relatedTab == RelatedTab.Activities) {
//								if (ele==null) {
//									log(LogStatus.INFO, "successfully verified absence of "+meetingSubject, YesNo.No);
//								} else {
//									sa.assertTrue(false,meetingSubject+" is present but should not be on Sub Tab : "+relatedTab+" For : "+name);
//									log(LogStatus.SKIP,meetingSubject+" is present but should not be on Sub Tab : "+relatedTab+" For : "+name,YesNo.Yes);
//								}
//							}
//							else {
//								if (ele!=null) {
//									log(LogStatus.INFO,meetingSubject+" link present on Sub Tab : "+relatedTab+" For : "+name,YesNo.No);	
//									cp.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, date, meetingSubject, taskstd1, action.BOOLEAN, 10);
//
//
//								} else {
//									sa.assertTrue(false,meetingSubject+" link Should be present on Sub Tab : "+relatedTab+" For : "+name);
//									log(LogStatus.SKIP,meetingSubject+" link Should be present on Sub Tab : "+relatedTab+" For : "+name,YesNo.Yes);
//								}
//							}
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+name);
//							log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+name,YesNo.Yes);
//						}
//						
//						
//					}
//					
//				} else {
//					sa.assertTrue(false,"Item Not Found : "+name+" For : "+tabName);
//					log(LogStatus.SKIP,"Item Not Found : "+name+" For : "+tabName,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+name);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+name,YesNo.Yes);
//			}
//			i++;
//			switchToDefaultContent(driver);
//		}
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc043_VerifyLinksAvailableInMeetingTab(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		
//		String contact2Name = Smoke_MTContact2FName+" "+Smoke_MTContact2LName;
//		String comment=Smoke_Task1Comment;
//		WebElement ele ;
//		String parentID=null;
//		
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		RelatedTab relatedTab= RelatedTab.Meetings;
//		TabName tabName=TabName.Object2Tab;
//		if (cp.clickOnTab(projectName, tabName)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+tabName,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, tabName, contact2Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contact2Name,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//					ThreadSleep(2000);
//
//					String[] links = {Smoke_Task1Subject,contact2Name,Smoke_MTINS2Name,owner,"2","2",Links.View.toString(),Links.View.toString()};
//					int i=0;
//					for (String link : links) {
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, relatedTab, link, action.BOOLEAN, 10);
//						if (ele!=null) {
//							log(LogStatus.INFO,link+" link present on Sub Tab : "+relatedTab,YesNo.Yes);	
//
//							if (click(driver, ele, link, action.BOOLEAN)) {
//								if (i<=3) {
//									log(LogStatus.INFO,"Clicked on : "+link,YesNo.No);
//									parentID = switchOnWindow(driver);
//									if (parentID!=null) {
//										log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+link,YesNo.Yes);
//										ThreadSleep(1000);
//
//										ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, link, action.BOOLEAN, 10);
//										if (ele!=null) {
//											log(LogStatus.INFO,"Landing Page Verified for : "+link,YesNo.No);	
//										} else {
//											sa.assertTrue(false,"Landing Page Not Verified for : "+link);
//											log(LogStatus.SKIP,"Landing Page Not Verified for : "+link,YesNo.Yes);
//										}
//
//										if (link.equals(Smoke_Task1Subject)) {
//											
//											String related = Smoke_MTINS2Name+", "+Smoke_MTFund1Name+", "+meetingCustomObj1Name;
//											String relatedAssoctaion=tp.Comment(projectName, PageLabel.Related_Associations, related);
//											String comment1 = relatedAssoctaion+"\n"+TaskPagePageErrorMessage.Dots+"\n"+comment;
//
//											String[][] fieldsWithValues= {{PageLabel.Assigned_To.toString(),owner},
//													{PageLabel.Status.toString(),Status.Not_Started.toString()},
//													{PageLabel.Subject.toString(),Smoke_Task1Subject},
//													{PageLabel.Name.toString(), contact2Name},
//													{PageLabel.Due_Date.toString(),Smoke_Task1Date},
//													{PageLabel.Related_To.toString(),""},
//													{PageLabel.Meeting_Type.toString(),Smoke_Task1MeetingType},
//													{PageLabel.Related_Associations.toString(),related},
//													{PageLabel.Priority.toString(),Smoke_Task1Priority},
//													{PageLabel.Comments.toString(),comment1}};
//
//											ThreadSleep(10000);
//											if (tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.SCROLLANDBOOLEAN, 5)) {
//												log(LogStatus.INFO, "successfully verified all labels on task page", YesNo.No);
//											}
//											else {
//												log(LogStatus.ERROR, "could not verif all labels on task page", YesNo.Yes);
//												sa.assertTrue(false,"could not verif all labels on task page");
//											}
//											
//											if (tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Related_Contacts.toString(), action.SCROLLANDBOOLEAN, 2)==null) {
//												log(LogStatus.INFO, PageLabel.Related_Contacts+" is not Present", YesNo.No);
//											}
//											else {
//												log(LogStatus.ERROR, PageLabel.Related_Contacts+" Should not Present", YesNo.Yes);
//												sa.assertTrue(false,PageLabel.Related_Contacts+" Should not Present");
//											}
//											
//										}
//										driver.close();
//										driver.switchTo().window(parentID);
//
//									} else {
//										sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+link);
//										log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+link,YesNo.Yes);
//									}
//								}else if(i==4) {
//									List<String> s=null;
//									s=compareMultipleList(driver, Smoke_MTFund1Name+","+meetingCustomObj1Name, ip.createdRelatedAssociationsOnWindow(projectName));
//									if (s.isEmpty()) {
//										log(LogStatus.INFO, "Successfully verified related association names on RA window", YesNo.No);
//										if (ip.verifyAllRecordsOnCreatedRelAssoc(projectName, PageName.TaskPage,Smoke_MTFund1Name+","+meetingCustomObj1Name)) {
//											log(LogStatus.INFO,"successfully verified rel assoc window", YesNo.No);
//										}
//										else {
//											log(LogStatus.ERROR,  "could not verify related association window opening links: ", YesNo.Yes);
//											sa.assertTrue(false,  "could not verify related association window opening links: ");
//										}
//									}
//									else {
//										for(String e:s) {
//											log(LogStatus.ERROR,  "could not verify related association: " +e.toString(), YesNo.Yes);
//											sa.assertTrue(false,  "could not verify related association: " +e.toString());
//										}
//									}
//									
//									click(driver, ip.getCrossIconRAorComment(projectName,"RA", 10), "cross icon", action.BOOLEAN);
//								}
//								else if(i==5 || i==7) {
//									String popup="";
//									if (i==5)
//										popup="RA";
//									else popup="Comment";
//									if (click(driver, ip.getOkButtonRAorComment(projectName,popup, 10), "ok icon", action.BOOLEAN)) {
//										log(LogStatus.INFO, "RA or Comment successfully popup closed", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR,  "RA or Comment popup is not closed", YesNo.Yes);
//										sa.assertTrue(false,  "RA or Comment popup is not closed");
//								
//									}
//									ThreadSleep(5000);
//								}
//								else if(i==6){
//									
//									String s=getText(driver, ip.getcommentsTextOnPopup(projectName, 20), "comments popup text", action.BOOLEAN);
//									if (s.contains(comment)) {
//										log(LogStatus.INFO, "successfully verified "+comment+" present on popup", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR,  "not verified "+comment+" on popup", YesNo.Yes);
//										sa.assertTrue(false,"not verified "+comment+" on popup");
//								
//									}
//									click(driver, ip.getCrossIconRAorComment(projectName,"Comment", 10), "cross icon", action.BOOLEAN);
//								ThreadSleep(5000);
//								}
//
//
//							} else {
//								sa.assertTrue(false,"Not Able to Click on : "+link);
//								log(LogStatus.SKIP,"Not Able to Click on : "+link,YesNo.Yes);
//							}
//						} else {
//							sa.assertTrue(false,link+" link not present on Sub Tab : "+relatedTab);
//							log(LogStatus.SKIP,link+" link not present on Sub Tab : "+relatedTab,YesNo.Yes);
//						}
//						i++;
//					}
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contact2Name);
//				log(LogStatus.SKIP,"Contact Not Found : "+contact2Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc044_CreateLogCallWithMeetingTypeAndverifyitOnMeetingtab_Action(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop = new CustomObjPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		String date=todaysDate;
//		
//		WebElement ele ;
//		boolean flag=false;
//		RelatedTab relatedTab = RelatedTab.Activities;
//
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cop.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 10)){
//				log(LogStatus.INFO,"Clicked on custom tab record : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//
//					if (clickUsingJavaScript(driver, cp.getButtonLogCallMultiple(projectName, 60), "Log call Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New task button on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//						ThreadSleep(2000);	
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page,PageLabel.New_Task.toString(), action.BOOLEAN, 30);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						ele = cp.getRelatedAssciationDefaultSelectedDropDown(projectName, TabName.Object1Tab, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO, "Default Selected For "+PageLabel.Related_Associations.toString()+" Verified",YesNo.No);	
//
//
//						} else {
//							sa.assertTrue(false,"Default Selected object For "+PageLabel.Related_Associations.toString()+" Not Verified");
//							log(LogStatus.ERROR, "Default Selected object For "+PageLabel.Related_Associations.toString()+" Not Verified",YesNo.Yes);
//
//						}
//
//						ele=cp.geDropdownOnTaskPopUp(projectName, PageLabel.Meeting_Type.toString(), action.SCROLLANDBOOLEAN, 10);
//						if (click(driver, ele, "Drop Down : "+PageLabel.Meeting_Type.toString(),action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.ERROR, "successfully clicked"+PageLabel.Meeting_Type.toString()+" Drop Down", YesNo.Yes);	
//							ThreadSleep(2000);
//
//							//meeting type
//							if (cp.SelectDropDownValue(projectName, PageName.Object2Page, PageLabel.Meeting_Type.toString(), Smoke_LogACall1MeetingType, action.SCROLLANDBOOLEAN, 10)) {
//								log(LogStatus.ERROR, "Selected : "+Smoke_LogACall1MeetingType+" For Label : "+PageLabel.Meeting_Type.toString(), YesNo.Yes);	
//								ThreadSleep(1000);
//
//							} else {
//								log(LogStatus.ERROR, "Not ABle to Select : "+Smoke_LogACall1MeetingType+" For Label : "+PageLabel.Meeting_Type.toString(), YesNo.Yes);
//								sa.assertTrue(false,"Not ABle to Select : "+Smoke_LogACall1MeetingType+" For Label : "+PageLabel.Meeting_Type.toString() );
//							}
//						} else {
//							log(LogStatus.ERROR, "Not ABle to Select : "+PageLabel.Meeting_Type.toString(), YesNo.Yes);
//							sa.assertTrue(false,"Not ABle to Select : "+PageLabel.Meeting_Type.toString() );
//						}
//						
//						// Assigned_To Cross Button Click
//						if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Assigned_To.toString(),false, owner, action.SCROLLANDBOOLEAN, 15)) {
//							log(LogStatus.INFO, "Clicked on Cross Button against : "+owner+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.No);	
//							
//							ThreadSleep(2000);
//							// Assigned To
//							owner = AdminUserFirstName+" "+AdminUserLastName;
//							flag=tp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Assigned_To.toString(), TabName.TestCustomObjectTab, owner, action.BOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.INFO,"Selected "+owner+" For  Drown Down Value For Label "+PageLabel.Assigned_To,YesNo.No);
//								ThreadSleep(1000);
//								
//							} else {
//								sa.assertTrue(false,"could not select admin name in "+PageLabel.Assigned_To.toString());
//								log(LogStatus.ERROR, "could not select admin name in "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//
//							}
//						}
//						 else {
//								sa.assertTrue(false,"cross button could not be clicked on "+PageLabel.Assigned_To.toString());
//								log(LogStatus.ERROR, "cross button could not be clicked on "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//
//							}
//						
//						//name
//					/*	
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), TabName.Object2Tab, contactName, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+contactName+" For Label "+PageLabel.Name,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+contactName+" For Label "+PageLabel.Name);
//							log(LogStatus.SKIP,"Not Able to Select "+contactName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//						}*/
//
//						//RA
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object1Tab, Smoke_MTINS1Name, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+Smoke_MTINS1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+Smoke_MTINS1Name+" For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select "+Smoke_MTINS1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//						}
//						//RA
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object3Tab, Smoke_MTFund1Name, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+Smoke_MTFund1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+Smoke_MTFund1Name+" For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select "+Smoke_MTFund1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//						}
//						//RA
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, meetingCustomObj1Name, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//						}
//						// Subject
//						ele= cp.getLabelTextBox(projectName, PageName.TaskPage.toString(), PageLabel.Subject.toString(),20);
//						scrollDownThroughWebelement(driver, ele, "subject");
//						if (sendKeys(driver,ele, Smoke_LogACall1Subject, PageLabel.Subject.toString(), action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//							ThreadSleep(1000);
//							if (sendKeys(driver, cp.getcommentsTextBox(projectName, 10), Smoke_LogACall1Comment, "comments", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO, "Entered value to comments Text Box "+Smoke_LogACall1Comment, YesNo.Yes);
//									
//							}else {
//								sa.assertTrue(false,"comments text box is not visible");
//								log(LogStatus.ERROR,"comments text box is not visible",YesNo.Yes);
//							}
//							
//							appLog.info(">>>>>");
//							if (clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//								
//								ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AACALL1", excelLabel.Due_Date);
//								
//								ele = cp.getCreatedConfirmationMsg(projectName, 15);
//								if (ele!=null) {
//									String actualValue = ele.getText().trim();
//									String expectedValue=tp.taskCreatesMsg(projectName, Smoke_LogACall1Subject);
//									if (actualValue.contains(expectedValue)) {
//										log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//									} else {
//										log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//										sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//									}
//								} else {
//									sa.assertTrue(false,"Created Task Msg Ele not Found");
//									log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//								}
//								appLog.info(">>>>>");
//							//	 
//								switchToDefaultContent(driver);
//								if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//									
//									switchToFrame(driver, 10, cop.getFrame(PageName.ActivitiesOrMeetings, 10));
//									log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//									ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, relatedTab, Smoke_LogACall1Subject, action.BOOLEAN, 10);
//									if (ele==null) {
//										log(LogStatus.INFO,Smoke_LogACall1Subject+" is not present on Sub Tab : "+relatedTab,YesNo.No);	
//									}else {
//										sa.assertTrue(false,Smoke_LogACall1Subject+" Should not present on Sub Tab : "+relatedTab);
//										log(LogStatus.SKIP,Smoke_LogACall1Subject+" Should not present on Sub Tab : "+relatedTab,YesNo.Yes);	
//									}
//								}
//								else {
//									log(LogStatus.ERROR, "related tab activities is not clickable so cannot verify task", YesNo.Yes);
//									sa.assertTrue(false,"related tab activities is not clickable so cannot verify task" );
//										
//								}
//
//								
//							}
//							else {
//								log(LogStatus.ERROR, "save button is not clickable so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"save button is not clickable so task could not be created" );
//							}
//
//						}else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on New task button on Sub Tab : "+RelatedTab.Activities);
//						log(LogStatus.SKIP,"Not Able to Click on New task button on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Fund/Deal Not Found : "+Smoke_MTFund1Name);
//				log(LogStatus.SKIP,"Fund/Deal  Not Found : "+Smoke_MTFund1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc044_CreateLogCallWithMeetingTypeAndverifyitOnMeetingtab_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		String owner = AdminUserFirstName+" "+AdminUserLastName;
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AACALL1", excelLabel.Due_Date);
//		WebElement ele ;
//		boolean flag=false;
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contactName);
//		taskstd1.add(Smoke_MTINS1Name+" +2");
//		taskstd1.add(Status.Completed.toString());
//		taskstd1.add(AdminUserFirstName+" "+AdminUserLastName);
//		taskstd1.add(Smoke_LogACall1MeetingType);
//		taskstd1.add(Activity.Call.toString());
//		taskstd1.add(Links.View.toString());	
//		
//		RelatedTab[] relatabTabs = {RelatedTab.Meetings,RelatedTab.Activities};
//		String[] entitiesOrAccounts = {Smoke_MTINS1Name,Smoke_MTINS2Name};
//		int i;
//		for (String entity : entitiesOrAccounts) {
//			i=0;
//			if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, entity, 20)) {
//					log(LogStatus.INFO,"Clicked on Entity/Account : "+entity,YesNo.No);
//					ThreadSleep(1000);
//					for (RelatedTab relatedTab : relatabTabs) {
//						if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//							ThreadSleep(10000);
//							 
//							switchToDefaultContent(driver);
//							switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//							if (i==0) {
//								cp.verifyingRelatedTabData2(projectName, PageName.Object1Page, relatedTab, date, Smoke_LogACall1Subject, taskstd1, action.BOOLEAN, 10);
//							} else {
//								ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, relatedTab, Smoke_LogACall1Subject, action.BOOLEAN, 10);
//								if (ele==null) {
//									log(LogStatus.INFO,Smoke_LogACall1Subject+" is not present on Sub Tab : "+relatedTab,YesNo.No);	
//								}else {
//									sa.assertTrue(false,Smoke_LogACall1Subject+" Should not present on Sub Tab : "+relatedTab);
//									log(LogStatus.SKIP,Smoke_LogACall1Subject+" Should not present on Sub Tab : "+relatedTab,YesNo.Yes);	
//								}
//							}
//							switchToDefaultContent(driver);
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//							log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//						}
//						i++;
//					}
//
//				} else {
//					sa.assertTrue(false,"Account/Entity Not Found : "+entity);
//					log(LogStatus.SKIP,"Account/Entity  Not Found : "+entity,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//			}
//
//		}
//
//		i=0;
//		if (cp.clickOnTab(projectName, TabName.Object3Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object3Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_MTFund1Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Fund/Deal : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object3Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//						ThreadSleep(10000);
//						 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//						if (i==0) {
//							cp.verifyingRelatedTabData2(projectName, PageName.Object1Page, relatedTab, date, Smoke_LogACall1Subject, taskstd1, action.BOOLEAN, 10);
//						} else {
//							ele = cp.getAllLinksOnSubTab(projectName, PageName.Object3Page, relatedTab, Smoke_LogACall1Subject, action.BOOLEAN, 10);
//							if (ele==null) {
//								log(LogStatus.INFO,Smoke_LogACall1Subject+" is not present on Sub Tab : "+relatedTab,YesNo.No);	
//							}else {
//								sa.assertTrue(false,Smoke_LogACall1Subject+" Should not present on Sub Tab : "+relatedTab);
//								log(LogStatus.SKIP,Smoke_LogACall1Subject+" Should not present on Sub Tab : "+relatedTab,YesNo.Yes);	
//							}
//						}
//						switchToDefaultContent(driver);
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//					}
//					i++;
//				}
//
//			} else {
//				sa.assertTrue(false,"Fund/Deal Not Found : "+Smoke_MTFund1Name);
//				log(LogStatus.SKIP,"Fund/Deal  Not Found : "+Smoke_MTFund1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//		}
//
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc045_VerifyNewMeetingButtonFromContactDetailPageWithBlankNameAndRelatedAssociation(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		WebElement ele ;
//		String parentID=null;
//
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Meetings, 20), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//
//					if (clickUsingJavaScript(driver, cp.getNewMeetingButton(projectName, 15), "New Meeting Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New Meeting button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//						ThreadSleep(2000);
//					
//						ele=cp.getmeetingTypeDropdown(projectName, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO, "Meeting Type Label is Present",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Meeting Type Label Should be Present");
//							log(LogStatus.ERROR, "Meeting Type Label Should be Present",YesNo.Yes);
//
//						}
//
//						List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Name.toString(),false, action.SCROLLANDBOOLEAN, 15);
//						if (!eleList.isEmpty() && eleList.size()==1) {
//							log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Name.toString(),YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//
//						ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Name.toString(),false, contactName, action.SCROLLANDBOOLEAN, 15);
//						if (ele!=null) {
//							log(LogStatus.INFO, contactName+" Found For Label "+PageLabel.Name.toString(),YesNo.No);	
//
//							if (clickUsingJavaScript(driver, ele, "Cross Button For "+contactName, action.BOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on Cross Button For "+contactName,YesNo.Yes);
//								ThreadSleep(2000);
//							}
//							else {
//								sa.assertTrue(false,"Not Able to Click on Cross Button For "+contactName);
//								log(LogStatus.SKIP,"Not Able to Click on Cross Button For "+contactName,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,contactName+" not Found For Label "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, contactName+" not Found For Label "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//						eleList = cp.getAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(),false, action.SCROLLANDBOOLEAN, 1);
//						if (eleList.isEmpty()) {
//							log(LogStatus.INFO, "Label field is blank for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Label field sholud be blank for "+PageLabel.Related_Associations.toString());
//							log(LogStatus.ERROR, "Label field sholud be blank for "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//						}
//
//						// New Contact Button For Name Label
//						ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.Object2Page, PageLabel.Name.toString(), action.SCROLLANDBOOLEAN,15);
//						if (clickUsingJavaScript(driver, ele, "Name Text Label", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Enter Value to Name Text Box",YesNo.Yes);	
//							ThreadSleep(1000);
//							ele = cp.getNewButtonElementFromTask(projectName, PageName.Object2Page, PlusNewButton.ContactNewButton, PageLabel.Name.toString(), action.SCROLLANDBOOLEAN, 15);
//							if (clickUsingJavaScript(driver, ele, "New Contact Button for Label : "+PageLabel.Name.toString(), action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on New Contact Button for "+PageLabel.Name.toString(),YesNo.No);	
//								ThreadSleep(1000);
//								parentID = switchOnWindow(driver);
//								if (parentID!=null) {
//									log(LogStatus.INFO,"New window is open Going to verify New Contact PopUP Landing Page ",YesNo.Yes);
//									ThreadSleep(1000);
//									//click next button if present(record type), if not then check header
//									click(driver, cp.getContinueOrNextButton(projectName, 5), "next button", action.SCROLLANDBOOLEAN);
//									
//									ele = cp.getHeaderTextForPage(projectName, PageName.Object1PagePopup, cp.getNewButtonFromTask(projectName, PlusNewButton.ContactNewButton), action.BOOLEAN, 10);
//									if (ele!=null) {
//										log(LogStatus.INFO,"New Contact PopUp is opened",YesNo.No);	
//									} else {
//										sa.assertTrue(false,"New Contact PopUp is not opened");
//										log(LogStatus.SKIP,"New Contact PopUp is not opened",YesNo.Yes);
//									}
//									driver.close();
//									driver.switchTo().window(parentID);
//								} else {
//									sa.assertTrue(false,"No new window is open so cannot verify New Contact PopUP Landing Page");
//									log(LogStatus.SKIP,"No new window is open so cannot verify New Contact PopUP Landing Page",YesNo.Yes);
//								}
//							} else {
//								sa.assertTrue(false,"Not Able to Click on New Contact Button for "+PageLabel.Name.toString());
//								log(LogStatus.SKIP,"Not Able to Click on New Contact Button for "+PageLabel.Name.toString(),YesNo.Yes);
//							}
//						}else {
//							sa.assertTrue(false,"Not Able to Enter Value to Name Text Box");
//							log(LogStatus.SKIP,"Not Able to Enter Value to Name Text Box",YesNo.Yes);	
//						}
//						
//						
//						
//						// New Account Button For Related Associations Label 
//						switchToDefaultContent(driver);
//						ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN,15);
//						if (clickUsingJavaScript(driver, ele, "Related Associations Text Label", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Enter Value to Related Associations Text Box",YesNo.Yes);	
//							ThreadSleep(1000);
//							
//							ele = cp.getNewButtonElementFromTask(projectName, PageName.Object2Page, PlusNewButton.EntityOrAccountNewButton, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 15);
//							if (clickUsingJavaScript(driver, ele, "New Entity/Account Button for Label : "+PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on New Entity/Account Button for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//								ThreadSleep(1000);
//								parentID = switchOnWindow(driver);
//								if (parentID!=null) {
//									log(LogStatus.INFO,"New window is open Going to verify New Entity/Account PopUP Landing Page ",YesNo.Yes);
//									ThreadSleep(1000);
//									//click next button if present(record type), if not then check header
//									click(driver, cp.getContinueOrNextButton(projectName, 5), "next button", action.SCROLLANDBOOLEAN);
//									
//									ele = cp.getHeaderTextForPage(projectName, PageName.Object1PagePopup, cp.getNewButtonFromTask(projectName, PlusNewButton.EntityOrAccountNewButton), action.BOOLEAN, 10);
//									if (ele!=null) {
//										log(LogStatus.INFO,"New Entity/Account PopUp is opened",YesNo.No);	
//									} else {
//										sa.assertTrue(false,"New Entity/Account PopUp is not opened");
//										log(LogStatus.SKIP,"New Entity/Account PopUp is not opened",YesNo.Yes);
//									}
//									driver.close();
//									driver.switchTo().window(parentID);
//								} else {
//									sa.assertTrue(false,"No new window is open so cannot verify New Entity/Account PopUP Landing Page");
//									log(LogStatus.SKIP,"No new window is open so cannot verify New Entity/Account PopUP Landing Page",YesNo.Yes);
//								}
//							} else {
//								sa.assertTrue(false,"Not Able to Click on New Entity/Account Button for "+PageLabel.Related_Associations.toString());
//								log(LogStatus.SKIP,"Not Able to Click on New Entity/Account Button for "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//							}
//						}else {
//							sa.assertTrue(false,"Not Able to Enter Value to Related Associations Text Box");
//							log(LogStatus.SKIP,"Not Able to Enter Value to Related Associations Text Box",YesNo.Yes);	
//						}
//						
//
//						// New Test Custom Object Button For Related Associations Label 
//						switchToDefaultContent(driver);
//						if (cp.SelectRelatedAssociationsdropdownButton(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, action.SCROLLANDBOOLEAN, 20)) {
//							log(LogStatus.SKIP,"Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//							ThreadSleep(2000);	
//							
//							ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN,15);
//							if (clickUsingJavaScript(driver, ele, "Related Associations Text Label", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Enter Value to Related Associations Text Box",YesNo.Yes);	
//								ThreadSleep(1000);
//								ele = cp.getNewButtonElementFromTask(projectName, PageName.Object2Page, PlusNewButton.TestCustomObjectNewButton, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 15);
//								if (clickUsingJavaScript(driver, ele, "New Test Object Button for Label : "+PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"Clicked on New Test Object Button for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//									ThreadSleep(1000);
//									parentID = switchOnWindow(driver);
//									if (parentID!=null) {
//										log(LogStatus.INFO,"New window is open Going to verify Test Object  PopUP Landing Page ",YesNo.Yes);
//										ThreadSleep(1000);
//										click(driver, cp.getContinueOrNextButton(projectName, 5), "next button", action.SCROLLANDBOOLEAN);
//										
//										ele = cp.getHeaderTextForPage(projectName, PageName.Object1PagePopup, cp.getNewButtonFromTask(projectName, PlusNewButton.TestCustomObjectNewButton), action.BOOLEAN, 10);
//										if (ele!=null) {
//											log(LogStatus.INFO,"New Test Object PopUp is opened",YesNo.No);	
//										} else {
//											sa.assertTrue(false,"New Test Object PopUp is not opened");
//											log(LogStatus.SKIP,"New Test Object PopUp is not opened",YesNo.Yes);
//										}
//										driver.close();
//										driver.switchTo().window(parentID);
//									} else {
//										sa.assertTrue(false,"No new window is open so cannot verify New Test Object PopUP Landing Page");
//										log(LogStatus.SKIP,"No new window is open so cannot verify New Test Object PopUP Landing Page",YesNo.Yes);
//									}
//								} else {
//									sa.assertTrue(false,"Not Able to Click on New Test Object Button for "+PageLabel.Related_Associations.toString());
//									log(LogStatus.SKIP,"Not Able to Click on New Test Object Button for "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//								}
//							}else {
//								sa.assertTrue(false,"Not Able to Enter Value to Related Associations Text Box");
//								log(LogStatus.SKIP,"Not Able to Enter Value to Related Associations Text Box",YesNo.Yes);	
//							}
//							
//						} else {
//							sa.assertTrue(false,"Not Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//						}
//						
//						
//						//  
//
//						if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_Meeting2Subject, "Subject", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//							ThreadSleep(1000);
//							if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), tomorrowsDate, PageLabel.Due_Date.toString(), action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO, "Entered value to Due Date Text Box", YesNo.Yes);
//								ThreadSleep(1000);
//								ele=cp.geDropdownOnTaskPopUp(projectName, PageLabel.Priority.toString(), action.SCROLLANDBOOLEAN, 10);
//								if (click(driver, ele, "Drop Down : "+PageLabel.Priority.toString(),action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.ERROR, "Not Able to Click on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);	
//									ThreadSleep(2000);
//									
//									if (cp.SelectDropDownValue(projectName, PageName.Object2Page, PageLabel.Priority.toString(), Smoke_Meeting2Priority, action.SCROLLANDBOOLEAN, 10)) {
//										log(LogStatus.ERROR, "Selected : "+Smoke_Meeting2Priority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);	
//										ThreadSleep(1000);
//										
//									} else {
//										log(LogStatus.ERROR, "Not ABle to Select : "+Smoke_Meeting2Priority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);
//										sa.assertTrue(false,"Not ABle to Select : "+Smoke_Meeting2Priority+" For Label : "+PageLabel.Priority.toString() );
//									}
//									
//									 
//									if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//										ExcelUtils.writeData(tomorrowsDate, "Task", excelLabel.Variable_Name, "AAMeetingTask2", excelLabel.Due_Date);
//										
//										
//										ThreadSleep(2000);
//										
//										ele = cp.getCreatedConfirmationMsg(projectName, 15);
//										if (ele!=null) {
//											String actualValue = ele.getText().trim();
//											String expectedValue=tp.taskCreatesMsg(projectName, Smoke_Meeting2Subject);
//											if (actualValue.contains(expectedValue)) {
//												log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//													
//											} else {
//												log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//												BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//											}
//										} else {
//											sa.assertTrue(false,"Created Task Msg Ele not Found");
//											log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//										
//										}
//										try {
//											System.err.println("msg "+ele.getText().trim());
//										} catch (Exception e) {
//											// TODO Auto-generated catch block
//											e.printStackTrace();
//										}
//										ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, Smoke_Meeting2Subject, action.BOOLEAN, 10);
//										
//										if (clickUsingJavaScript(driver, ele, Smoke_Meeting2Subject, action.BOOLEAN)) {
//											log(LogStatus.ERROR, "Clicked on  : "+Smoke_Meeting2Subject, YesNo.Yes);
//											ThreadSleep(2000);
//											String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AAMeetingTask2", excelLabel.Due_Date);
//											refresh(driver);
//											ThreadSleep(5000);
//											String[][] fieldsWithValues= {{PageLabel.Subject.toString(),Smoke_Meeting2Subject},
//													{PageLabel.Name.toString(),""},
//													{PageLabel.Due_Date.toString(),date},
//													{PageLabel.Priority.toString(),Smoke_Meeting2Priority},
//													{PageLabel.Related_Associations.toString(),"Assign Multiple Associations"}};
//											
//											tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);
//											
//											
//											
//										} else {
//											log(LogStatus.ERROR, "Not Able to Click : "+Smoke_Meeting2Subject, YesNo.Yes);
//											sa.assertTrue(false,"Not Able to Click : "+Smoke_Meeting2Subject );
//										}
//									}
//									else {
//										log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//										sa.assertTrue(false,"save button is not clickable so task not created" );
//									}
//										
//								} else {
//									log(LogStatus.ERROR, "Click on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);
//									sa.assertTrue(false,"Click on "+PageLabel.Priority.toString()+" Drop Down" );
//								}
//							}else {
//								log(LogStatus.ERROR, "duedate textbox is not visible so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"duedate textbox is not visible so task could not be created" );
//							}
//						}
//						else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings);
//						log(LogStatus.SKIP,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//					}
//
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact Not Found : "+contactName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//		 
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc046_CreateStandardTaskAndVerifyCreatedTaskInMeetingTab(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_MTContact4FName+" "+Smoke_MTContact4LName;
//		String date=todaysDate;
//				
//		WebElement ele ;
//		
//
//		if (cp.clickOnTab(projectName, TabName.TaskTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TaskTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnShowMoreActionDownArrow(projectName, PageName.TaskPage, ShowMoreActionDropDownList.New_Task, 15)) {
//				log(LogStatus.INFO,"Clicked on New Task Button for show more action",YesNo.No);
//				ThreadSleep(1000);
//
//				ele = cp.getHeaderTextForPage(projectName, PageName.NewTaskPopUP,PageLabel.New_Task.toString(), action.BOOLEAN, 10);
//				if (ele!=null) {
//					log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//				} else {
//					sa.assertTrue(false,"New Task PopUp is not opened");
//					log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//				}
//
//				ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN,5);
//
//				if (ele==null) {
//					log(LogStatus.INFO,"Related Association Field is not present",YesNo.No);	
//				} else {
//					sa.assertTrue(false,"Related Association Field should not be present");
//					log(LogStatus.SKIP,"Related Association Field should not be present",YesNo.Yes);
//				}
//
//				// subject
//				if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.TaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_STDTask1Subject, "Subject", action.SCROLLANDBOOLEAN)) {
//					log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//					ThreadSleep(1000);
//
//					// Due Date
//					if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), todaysDate, PageLabel.Due_Date.toString(), action.SCROLLANDBOOLEAN)) {
//						log(LogStatus.INFO, "Entered value to Due Date Text Box", YesNo.Yes);
//						ThreadSleep(1000);
//
//						//Meeting type drop own
//						ele=cp.getDropdownOnTaskPopUp(projectName,PageName.TaskPage, PageLabel.Meeting_Type.toString(), action.SCROLLANDBOOLEAN, 10);
//						if (click(driver, ele, "Drop Down : "+PageLabel.Meeting_Type.toString(),action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.ERROR, "Able to Click on "+PageLabel.Meeting_Type.toString()+" Drop Down", YesNo.No);	
//							ThreadSleep(2000);
//
//							if (cp.SelectDropDownValue(projectName, PageName.TaskPage, PageLabel.Meeting_Type.toString(), Smoke_STDTask1MeetingType, action.SCROLLANDBOOLEAN, 10)) {
//								log(LogStatus.ERROR, "Selected : "+Smoke_STDTask1MeetingType+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);	
//								ThreadSleep(1000);
//
//							} else {
//								log(LogStatus.ERROR, "Not ABle to Select : "+Smoke_STDTask1MeetingType+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);
//								sa.assertTrue(false,"Not ABle to Select : "+Smoke_STDTask1MeetingType+" For Label : "+PageLabel.Priority.toString() );
//							}
//
//
//						} else {
//							log(LogStatus.ERROR, "Click on "+PageLabel.Meeting_Type.toString()+" Drop Down", YesNo.Yes);
//							sa.assertTrue(false,"Click on "+PageLabel.Meeting_Type.toString()+" Drop Down" );
//						}
//
//
//						// comment 
//						if (sendKeys(driver, ip.getcommentsTextBox(projectName, 10), Smoke_STDTask1Comment, "comments", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.ERROR, "entered value in Comment Text Area", YesNo.Yes);	
//						}
//						else {
//							log(LogStatus.ERROR, "comments textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"comments textbox is not visible so task could not be created" );
//						}
//
//
//
//						// Name
//						ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TaskPage, PageLabel.Name.toString(), action.SCROLLANDBOOLEAN,15);
//						if (sendKeys(driver, ele, contactName,"Name Text Label", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Enter Value to Name Text Box : "+contactName,YesNo.Yes);	
//							ThreadSleep(1000);
//							ele =  cp.getContactNameOrRelatedAssociationNameOnTask(projectName, PageName.TaskPage, PageLabel.Name.toString(),contactName, action.SCROLLANDBOOLEAN,15);
//							if (click(driver, ele, "Select Name From Label : "+PageLabel.Name, action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on : "+contactName,YesNo.Yes);
//							} else {
//								sa.assertTrue(false,"Not Able to Click on : "+contactName);
//								log(LogStatus.SKIP,"Not Able to Click on : "+contactName,YesNo.Yes);	
//							}
//
//						}else {
//							sa.assertTrue(false,"Not Able to Enter Value to Name Text Box : "+contactName);
//							log(LogStatus.SKIP,"Not Able to Enter Value to Name Text Box : "+contactName,YesNo.Yes);	
//						}
//
//
//
//						// Related To
//
//						if (cp.SelectRelatedAssociationsdropdownButton(projectName, PageName.TaskPage, PageLabel.Related_To.toString(), TabName.TestCustomObjectTab, action.SCROLLANDBOOLEAN, 20)) {
//							log(LogStatus.INFO,"Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//							ThreadSleep(2000);	
//
//							ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TaskPage, PageLabel.Related_To.toString(), action.SCROLLANDBOOLEAN,15);
//							if (sendKeys(driver, ele,meetingCustomObj1Name, "Related To Text Label", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Enter Value to Related To Text Box : "+meetingCustomObj1Name,YesNo.Yes);	
//								ThreadSleep(1000);
//
//								ele =  cp.getContactNameOrRelatedAssociationNameOnTask(projectName, PageName.TaskPage, PageLabel.Related_To.toString(),meetingCustomObj1Name, action.SCROLLANDBOOLEAN,15);
//								if (click(driver, ele, "Select TestCustomObject From Label : "+PageLabel.Related_To, action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"Clicked on : "+meetingCustomObj1Name,YesNo.Yes);
//								} else {
//									sa.assertTrue(false,"Not Able to Click on : "+meetingCustomObj1Name);
//									log(LogStatus.SKIP,"Not Able to Click on : "+meetingCustomObj1Name,YesNo.Yes);	
//								}
//
//
//							}else {
//								sa.assertTrue(false,"Not Able to Enter Value to Related To Text Box : "+meetingCustomObj1Name);
//								log(LogStatus.SKIP,"Not Able to Enter Value to Related To Text Box : "+meetingCustomObj1Name,YesNo.Yes);	
//							}
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//						}
//
//						if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"successfully created task : "+Smoke_STDTask1Subject,  YesNo.Yes);
//							ThreadSleep(1000);
//							ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AASTDTask1", excelLabel.Due_Date);
//							refresh(driver);
//							log(LogStatus.INFO, "Clicked on Refesh Button", YesNo.No);	
//								ThreadSleep(3000);
//								ele=tp.getTaskNameLinkInSideMMenu(projectName, Smoke_STDTask1Subject, 15);
//								
//								if (click(driver, ele, Smoke_STDTask1Subject, action.BOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on "+Smoke_STDTask1Subject+" on SideMenu", YesNo.No);	
//									ThreadSleep(1000);
//									String[][] fieldsWithValues= {{PageLabel.Subject.toString(),Smoke_STDTask1Subject},
//											{PageLabel.Due_Date.toString(),date},
//											{PageLabel.Meeting_Type.toString(),Smoke_STDTask1MeetingType},
//											{PageLabel.Comments.toString(),Smoke_STDTask1Comment},
//											{PageLabel.Related_To.toString(),meetingCustomObj1Name},
//											{PageLabel.Name.toString(),contactName},
//											{PageLabel.Related_Associations.toString(),"Assign Multiple Associations"}};
//									
//									tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);
//									
//								} else {
//									log(LogStatus.ERROR, "Not Able to Click on "+Smoke_STDTask1Subject+" on SideMenu", YesNo.Yes);
//									sa.assertTrue(false,"Not Able to Click on "+Smoke_STDTask1Subject+" on SideMenu");
//							
//								}
//							
//						}
//						else {
//							log(LogStatus.ERROR, "save button is not clickable so task not created : "+Smoke_STDTask1Subject, YesNo.Yes);
//							sa.assertTrue(false,"save button is not clickable so task not created : "+Smoke_STDTask1Subject );
//						}
//						
//
//
//					}else {
//						log(LogStatus.ERROR, "duedate textbox is not visible so task could not be created", YesNo.Yes);
//						sa.assertTrue(false,"duedate textbox is not visible so task could not be created" );
//					}
//				}
//				else {
//					log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//					sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on New Task Button for show more action");
//				log(LogStatus.SKIP,"Not Able to Click on New Task Button for show more action",YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TaskTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TaskTab,YesNo.Yes);
//		}
//
//		 
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc047_VerifyAssignMultipleAssociationsLinkForStandardTAskWithFilledMeetingType_Action(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_MTContact4FName+" "+Smoke_MTContact4LName;
//		WebElement ele ;
//		String parentID=null;
//		String firstChildWin=null;
//		String secondChildWin=null;
//		String actualValue;
//		boolean flag=false;
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AASTDTask1", excelLabel.Due_Date);
//				
//	if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Meetings, 60), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//
//
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Meetings, Smoke_STDTask1Subject, action.BOOLEAN, 10);
//					if (ele!=null) {
//						log(LogStatus.INFO,Smoke_STDTask1Subject+" link present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);	
//
//						if (click(driver, ele, Smoke_STDTask1Subject, action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on : "+Smoke_STDTask1Subject,YesNo.No);
//							parentID = switchOnWindow(driver);
//							if (parentID!=null) {
//								log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+Smoke_STDTask1Subject,YesNo.Yes);
//								ThreadSleep(1000);
//								ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, Smoke_STDTask1Subject, action.BOOLEAN, 10);
//								if (ele!=null) {
//									log(LogStatus.INFO,"Landing Page Verified for : "+Smoke_STDTask1Subject,YesNo.No);	
//								} else {
//									sa.assertTrue(false,"Landing Page Not Verified for : "+Smoke_STDTask1Subject);
//									log(LogStatus.SKIP,"Landing Page Not Verified for : "+Smoke_STDTask1Subject,YesNo.Yes);
//								}
//
//
//								for (int k = 0; k < 3; k++) {
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 60, tp.getTaskPageFrame(projectName,60));
//
//									ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, TaskPagePageErrorMessage.RelatedAssociationText, action.BOOLEAN, 10);
//									if (click(driver, ele, TaskPagePageErrorMessage.RelatedAssociationText, action.BOOLEAN)) {
//										log(LogStatus.INFO,"Clicked on Link :  "+TaskPagePageErrorMessage.RelatedAssociationText,YesNo.No);	
//
//
//										firstChildWin = driver.getWindowHandle();
//										System.err.println("First Child Window ID: " + firstChildWin);
//
//										Set<String> allWindows = driver.getWindowHandles();
//										int i = 0;
//										for (String string : allWindows) {
//											System.err.println("IDs " + (++i) + ": " + string);
//										}
//										Iterator<String> i1 = allWindows.iterator();
//
//										while (i1.hasNext()) {
//											secondChildWin = i1.next();
//											if (!secondChildWin.equalsIgnoreCase(firstChildWin) && !secondChildWin.equalsIgnoreCase(parentID)) {
//												driver.switchTo().window(secondChildWin);
//												log(LogStatus.INFO,"Switch To Edit Task Window",YesNo.No);	
//												ThreadSleep(2000);
//
//												ele = tp.getTaskPoUpEditHeader(projectName, 10);
//												if (ele!=null) {
//													log(LogStatus.INFO,"Edit Header Ele Found",YesNo.No);	
//													actualValue=ele.getText().trim();
//
//													actualValue = ele.getText().trim();
//													String expectedValue=PageLabel.Edit.toString()+" "+Smoke_STDTask1Subject;
//													if (actualValue.contains(PageLabel.Edit.toString()) && actualValue.contains(Smoke_STDTask1Subject)) {
//														log(LogStatus.INFO,expectedValue+" matched msg for Edit PopUp", YesNo.No);
//
//													} else {
//														log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched msg for Edit PopUp", YesNo.Yes);
//														BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched msg for Edit PopUp");
//													}
//
//												} else {
//													sa.assertTrue(false,"Edit Header Ele Not Found");
//													log(LogStatus.SKIP,"Edit Header Ele Not Found",YesNo.Yes);
//												}
//												System.err.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>..");
//												 
//
//
//												if (k==0) {
//													ele=tp.getcrossIcon(projectName, 5);
//												} else if(k==1) {
//													ele=tp.getCancelButton(projectName, 5);
//												}
//
//												if (k==0 || k==1) {
//													if (clickUsingJavaScript(driver, ele, "Cross/Cancel Button",action.BOOLEAN)) {
//														log(LogStatus.INFO,"Clicked on Cross/Cancel Button",YesNo.No);	
//														flag=true;
//													} else {
//														sa.assertTrue(false,"Not Able to Click on Cross/Cancel Button");
//														log(LogStatus.SKIP,"Not Able to Click on Cross/Cancel Button",YesNo.Yes);
//													}	
//
//													if (flag) {
//														log(LogStatus.INFO,"No Error",YesNo.No);
//													} else {
//														sa.assertTrue(false,"Some Error");
//														log(LogStatus.SKIP,"Some Error",YesNo.Yes);
//													}
//													flag=false;
//													try {
//														driver.switchTo().window(firstChildWin);
//													} catch (Exception e) {
//														// TODO Auto-generated catch block
//														e.printStackTrace();
//													}
//
//												}
//
//												if(k==2){
//
//
//													flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object1Tab, Smoke_MTINS5Name, action.SCROLLANDBOOLEAN, 10);		
//													if (flag) {
//														log(LogStatus.SKIP,"Selected "+Smoke_MTINS5Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object1Tab)+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//													} else {
//														sa.assertTrue(false,"Not Able to Select "+Smoke_MTINS5Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.Object1Tab)+" For Label "+PageLabel.Related_Associations);
//														log(LogStatus.SKIP,"Not Able to Select "+Smoke_MTINS5Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object1Tab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//													}
//
//													flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object3Tab, Smoke_MTFund1Name, action.SCROLLANDBOOLEAN, 10);		
//													if (flag) {
//														log(LogStatus.SKIP,"Selected "+Smoke_MTFund1Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object3Tab)+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//													} else {
//														sa.assertTrue(false,"Not Able to Select "+Smoke_MTFund1Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.Object3Tab)+" For Label "+PageLabel.Related_Associations);
//														log(LogStatus.SKIP,"Not Able to Select "+Smoke_MTFund1Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object3Tab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//													}
//
//													flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, meetingCustomObj2Name, action.SCROLLANDBOOLEAN, 10);		
//													if (flag) {
//														log(LogStatus.SKIP,"Selected "+meetingCustomObj2Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//													} else {
//														sa.assertTrue(false,"Not Able to Select "+meetingCustomObj2Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations);
//														log(LogStatus.SKIP,"Not Able to Select "+meetingCustomObj2Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//													}
//
//													// Subject
//
//													if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.TaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_STDTask1UpdatedSubject, "Subject", action.SCROLLANDBOOLEAN)) {
//														log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//														ThreadSleep(1000);
//
//														//  Priority
//
//														ele=cp.getDropdownOnTaskPopUp(projectName, PageName.Object2Page,PageLabel.Priority.toString(), action.SCROLLANDBOOLEAN, 10);
//														if (click(driver, ele, "Drop Down : "+PageLabel.Priority.toString(),action.SCROLLANDBOOLEAN)) {
//															log(LogStatus.ERROR, "Select/Click on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);	
//															ThreadSleep(2000);
//
//															if (cp.SelectDropDownValue(projectName, PageName.Object2Page, PageLabel.Priority.toString(), Smoke_STDTask1UpdatedPriority, action.SCROLLANDBOOLEAN, 10)) {
//																log(LogStatus.ERROR, "Selected : "+Smoke_STDTask1UpdatedPriority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);	
//																ThreadSleep(1000);
//
//															} else {
//																log(LogStatus.ERROR, "Not ABle to Select : "+Smoke_STDTask1UpdatedPriority+" For Label : "+PageLabel.Priority.toString(), YesNo.Yes);
//																sa.assertTrue(false,"Not ABle to Select : "+Smoke_STDTask1UpdatedPriority+" For Label : "+PageLabel.Priority.toString() );
//															}
//
//														} else {
//															log(LogStatus.ERROR, "Click on "+PageLabel.Priority.toString()+" Drop Down", YesNo.Yes);
//															sa.assertTrue(false,"Click on "+PageLabel.Priority.toString()+" Drop Down" );
//														}
//
//														// comment 
//
//														if (sendKeys(driver, ip.getcommentsTextBox(projectName, 10), Smoke_STDTask1UpdatedComment, "comments", action.SCROLLANDBOOLEAN)) {
//															log(LogStatus.ERROR, "entered value in Comment Text Area", YesNo.Yes);	
//														}
//														else {
//															log(LogStatus.ERROR, "comments textbox is not visible so task could not be created", YesNo.Yes);
//															sa.assertTrue(false,"comments textbox is not visible so task could not be created" );
//														}
//														System.err.println(">>>>>>>>>>>>>>>>>>>>>>Save Button<<<<<<<<<<<<<<<<<<<<<<<<<");
//														 
//														if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//															log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//															flag=true;
//															ThreadSleep(2000);
//
//															/*ele = cp.getCreatedConfirmationMsg(projectName, 15);
//															if (ele!=null) {
//																actualValue = ele.getText().trim();
//																String expectedValue=tp.taskCreatesMsg(projectName, Smoke_STDTask1UpdatedSubject);
//																if (actualValue.equals(expectedValue)) {
//																	log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//																} else {
//																	log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//																	BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//																}
//															} else {
//																sa.assertTrue(false,"Created Task Msg Ele not Found");
//																log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//															}*/
//															String[][] fieldsWithValues= {{PageLabel.Subject.toString(),Smoke_STDTask1UpdatedSubject},
//																	{PageLabel.Priority.toString(),Smoke_STDTask1UpdatedPriority}};
//
//															tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);
//
//															// Related Association
//															ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), action.BOOLEAN, 10);
//															if (ele!=null) {
//																actualValue = ele.getText().trim();
//																log(LogStatus.INFO,"Actual Value For Related Association Link : "+actualValue, YesNo.No);
//																String expectedValue=Smoke_MTINS5Name+", "+Smoke_MTFund1Name+", "+meetingCustomObj2Name;
//																if (actualValue.equals(expectedValue)) {
//																	log(LogStatus.INFO,expectedValue+" matched FOR Related Association Label", YesNo.No);
//
//																} else {
//																	log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Related Association Label", YesNo.Yes);
//																	BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Related Association LABEL");
//																}
//
//																// Comment
//																ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Comments.toString(), action.BOOLEAN, 10);
//																if (ele!=null) {
//																	actualValue = ele.getText().trim();
//																	log(LogStatus.INFO,"Actual Value For Comment : "+actualValue, YesNo.No);
//																	String[] commentValue = {expectedValue,TaskPagePageErrorMessage.Dots,Smoke_STDTask1UpdatedComment};
//																	for (String comment : commentValue) {
//																		if (actualValue.contains(comment)) {
//																			log(LogStatus.INFO,comment+" matched for Comment Label", YesNo.No);
//
//																		} else {
//																			log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched for Comment Label", YesNo.Yes);
//																			BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched for Comment Label");
//																		}
//																	}
//																} else {
//																	sa.assertTrue(false,"Comment Label Ele not Found");
//																	log(LogStatus.SKIP,"Comment Label Ele not Found",YesNo.Yes);
//																}
//
//															} else {
//																sa.assertTrue(false,"Comment Label Ele not Found");
//																log(LogStatus.SKIP,"Comment Label Ele not Found",YesNo.Yes);
//
//															}
//															System.err.println(">>>>>>>>>>>>>>>>>>>>>>Save222222222222222 Button<<<<<<<<<<<<<<<<<<<<<<<<<");
//															 	
//															/////////////////////////////////////
//															
//															if (click(driver, tp.getAnyElement(Smoke_MTFund1Name), Smoke_MTFund1Name, action.SCROLLANDBOOLEAN)) {
//																log(LogStatus.INFO, "Click on : "+Smoke_MTFund1Name, YesNo.No);
//																ThreadSleep(5000);
//																
//																if (tp.getAnyElement(Smoke_MTFund1Name)!=null) {
//																	log(LogStatus.INFO, "Verified "+Smoke_MTFund1Name, YesNo.No);
//																	ThreadSleep(5000);
//																} else {
//																	log(LogStatus.ERROR, "Not Verified  "+Smoke_MTFund1Name, YesNo.Yes);
//																	sa.assertTrue(false,"Not Verified not "+Smoke_MTFund1Name);
//																}
//																
//															} else {
//																log(LogStatus.ERROR, "Not ABle to Click on : "+Smoke_MTFund1Name, YesNo.Yes);
//																sa.assertTrue(false,"Not ABle to Click on : "+Smoke_MTFund1Name);
//															}
//															///////////////////////////////////////
//														}
//
//														else {
//															log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//															sa.assertTrue(false,"save button is not clickable so task not created" );
//														}
//
//
//
//													}
//													else {
//														log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//														sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//													}
//
//
//												}
//
//											}
//
//										}
//
//										 
//									} else {
//										sa.assertTrue(false,"Not Able to Click on Link :  "+TaskPagePageErrorMessage.RelatedAssociationText);
//										log(LogStatus.SKIP,"Not Able to Click on Link :  "+TaskPagePageErrorMessage.RelatedAssociationText,YesNo.Yes);
//									}
//
//
//								}
//
//							} else {
//								sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+Smoke_STDTask1Subject);
//								log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+Smoke_STDTask1Subject,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on : "+Smoke_STDTask1Subject);
//							log(LogStatus.SKIP,"Not Able to Click on : "+Smoke_STDTask1Subject,YesNo.Yes);
//						}
//					} else {
//						sa.assertTrue(false,Smoke_STDTask1Subject+" link not present on Sub Tab : "+RelatedTab.Meetings);
//						log(LogStatus.SKIP,Smoke_STDTask1Subject+" link not present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact Not Found : "+contactName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//	
//	for (String s:driver.getWindowHandles()) {
//		driver.switchTo().window(s);
//		if (!s.equalsIgnoreCase(parentID))
//			driver.close();
//	}
//	driver.switchTo().window(parentID);
//	lp.CRMlogout();
//	sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc047_VerifyAssignMultipleAssociationsLinkForStandardTAskWithFilledMeetingType_Impact(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_MTContact4FName+" "+Smoke_MTContact4LName;
//		WebElement ele ;
//		String parentID=null;
//		String firstChildWin=null;
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AASTDTask1", excelLabel.Due_Date);
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contactName);
//		taskstd1.add(meetingCustomObj1Name+" +"+3);
//		taskstd1.add(Status.Not_Started.toString());
//		taskstd1.add(owner);
//		taskstd1.add(Smoke_STDTask1MeetingType);
//		taskstd1.add(Activity.Task.toString());
//		taskstd1.add(Links.View.toString());	
//
//			
//			RelatedTab[] relatabTabs = {RelatedTab.Meetings};
//			String[] testCustomObjects = {meetingCustomObj1Name,meetingCustomObj2Name};
//			int i;
//			for (String testCustomObject : testCustomObjects) {
//				if (cp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//					log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//					ThreadSleep(1000);
//					if (cp.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, testCustomObject, 20)) {
//						log(LogStatus.INFO,"Clicked on Test Custom Object : "+testCustomObject,YesNo.No);
//						ThreadSleep(1000);
//						for (RelatedTab relatedTab : relatabTabs) {
//							refresh(driver);
//							if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//								ThreadSleep(10000);
//								//	 
//								switchToDefaultContent(driver);
//								switchToFrame(driver, 60, cp.getMeetingFrameOnContactPage(projectName,60));
//								//ele = cp.verifyingRelatedTabData(projectName, PageName.TestCustomObjectPage, relatedTab, date, Smoke_STDTask1UpdatedSubject, contactName, meetingCustomObj1Name, "3", Status.Not_Started.toString(), owner, Smoke_STDTask1MeetingType, Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//								cp.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, date, Smoke_STDTask1UpdatedSubject, taskstd1, action.BOOLEAN, 10);
//									
//
//							} else {
//								sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//								log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//							}
//						}
//
//					} else {
//						sa.assertTrue(false,"Test custom object Not Found : "+testCustomObject);
//						log(LogStatus.SKIP,"Test custom object  Not Found : "+testCustomObject,YesNo.Yes);
//					}
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab);
//					log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab,YesNo.Yes);
//				}
//
//				switchToDefaultContent(driver);
//			}
//
//			switchToDefaultContent(driver);
//			if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_MTINS5Name, 20)) {
//					log(LogStatus.INFO,"Clicked on Entity/Account : "+Smoke_MTINS5Name,YesNo.No);
//					ThreadSleep(1000);
//					for (RelatedTab relatedTab : relatabTabs) {
//						refresh(driver);
//						if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//							ThreadSleep(10000);
//							 
//							switchToDefaultContent(driver);
//							switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//							//ele = cp.verifyingRelatedTabData(projectName, PageName.Object1Page, relatedTab, date, Smoke_STDTask1UpdatedSubject, contactName, meetingCustomObj1Name, "3", Status.Not_Started.toString(), owner, Smoke_STDTask1MeetingType, Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//							cp.verifyingRelatedTabData2(projectName, PageName.Object1Page, relatedTab, date, Smoke_STDTask1UpdatedSubject, taskstd1, action.BOOLEAN, 10);
//								
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//							log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//						}
//
//					}
//
//				} else {
//					sa.assertTrue(false,"Entity/Account Not Found : "+Smoke_MTINS5Name);
//					log(LogStatus.SKIP,"Entity/Account  Not Found : "+Smoke_MTINS5Name,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//			}
//
//			switchToDefaultContent(driver);
//			if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//					log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//					ThreadSleep(1000);
//					for (RelatedTab relatedTab : relatabTabs) {
//						refresh(driver);
//						if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//							ThreadSleep(10000);
//							 
//							switchToDefaultContent(driver);
//							switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//							//ele = cp.verifyingRelatedTabData(projectName, PageName.Object2Page, relatedTab, date, Smoke_STDTask1UpdatedSubject, contactName, meetingCustomObj1Name, "3", Status.Not_Started.toString(), owner, Smoke_STDTask1MeetingType, Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//							cp.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, date, Smoke_STDTask1UpdatedSubject, taskstd1, action.BOOLEAN, 10);
//							
//							
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//							log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//						}
//
//					}
//
//				} else {
//					sa.assertTrue(false,"Contact Not Found : "+contactName);
//					log(LogStatus.SKIP,"Contact  Not Found : "+contactName,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//			}
//
//
//		
//		switchToDefaultContent(driver);
//		 
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc048_VerifyNewMeetingButtonAtPackageObject(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		String date = getDateAccToTimeZone("America/New_York", "MM/dd/YYYY");
//		boolean flag=false;
//
//		RelatedTab relatedTab = RelatedTab.Meetings;
//		//ele = cp.verifyingRelatedTabData(projectName, PageName.Object3Page, relatedTab, "", Smoke_FinalDiscussionTaskSubject, contactName, Smoke_MTFund1Name, null, Status.Not_Started.toString(), owner, Smoke_FinalDiscussionTaskMeetingType, Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contactName);
//		taskstd1.add(Smoke_MTFund1Name);
//		taskstd1.add(Status.Not_Started.toString());
//		taskstd1.add(owner);
//		taskstd1.add(Smoke_FinalDiscussionTaskMeetingType);
//		taskstd1.add(Activity.Task.toString());
//		taskstd1.add(Links.View.toString());	
//
//		if (cp.clickOnTab(projectName, TabName.Object3Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object3Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_MTFund1Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Fund/Deal : "+Smoke_MTFund1Name,YesNo.No);
//				ThreadSleep(1000);
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object3Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//
//					if (clickUsingJavaScript(driver, cp.getNewMeetingButton(projectName, 60), "New Meeting Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New Meeting button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//						ThreadSleep(2000);	
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page,PageLabel.New_Task.toString(), action.BOOLEAN, 30);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						ele = cp.getRelatedAssciationDefaultSelectedDropDown(projectName, TabName.Object1Tab, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO, "Default Selected For "+PageLabel.Related_Associations.toString()+" Verified",YesNo.No);	
//
//
//						} else {
//							sa.assertTrue(false,"Default Selected For "+PageLabel.Related_Associations.toString()+" Not Verified");
//							log(LogStatus.ERROR, "Default Selected For "+PageLabel.Related_Associations.toString()+" Not Verified",YesNo.Yes);
//
//						}
//
//						List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(),false, action.SCROLLANDBOOLEAN, 15);
//						if (!eleList.isEmpty() && eleList.size()==1) {
//							log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//							ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(),false, Smoke_MTFund1Name, action.SCROLLANDBOOLEAN, 15);
//							if (ele!=null) {
//								log(LogStatus.INFO, Smoke_MTFund1Name+" is prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//
//							} else {
//								sa.assertTrue(false,Smoke_MTFund1Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString());
//								log(LogStatus.ERROR, Smoke_MTFund1Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//							}
//
//						} else {
//							sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), TabName.Object2Tab, contactName, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+contactName+" For Label "+PageLabel.Name,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+contactName+" For Label "+PageLabel.Name);
//							log(LogStatus.SKIP,"Not Able to Select "+contactName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//						}
//
//
//						// Subject
//
//						if (sendKeys(driver, cp.getLabelTextBox(projectName, PageName.TaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_FinalDiscussionTaskSubject, "Subject", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//							ThreadSleep(1000);
//
//							//  Priority
//
//							ele=cp.getDropdownOnTaskPopUp(projectName, PageName.Object2Page,PageLabel.Meeting_Type.toString(), action.SCROLLANDBOOLEAN, 10);
//							if (click(driver, ele, "Drop Down : "+PageLabel.Meeting_Type.toString(),action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.ERROR, "Select/Click on "+PageLabel.Meeting_Type.toString()+" Drop Down", YesNo.Yes);	
//								ThreadSleep(2000);
//
//								if (cp.SelectDropDownValue(projectName, PageName.Object2Page, PageLabel.Meeting_Type.toString(), Smoke_FinalDiscussionTaskMeetingType, action.SCROLLANDBOOLEAN, 10)) {
//									log(LogStatus.ERROR, "Selected : "+Smoke_FinalDiscussionTaskMeetingType+" For Label : "+PageLabel.Meeting_Type.toString(), YesNo.Yes);	
//									ThreadSleep(1000);
//
//
//
//									 
//									if (clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//
//
//										ele = cp.getCreatedConfirmationMsg(projectName, 15);
//										if (ele!=null) {
//											String actualValue = ele.getText().trim();
//											String expectedValue=tp.taskCreatesMsg(projectName, Smoke_FinalDiscussionTaskSubject);
//											if (actualValue.contains(expectedValue)) {
//												log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//											} else {
//												log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//												BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//											}
//										} else {
//											sa.assertTrue(false,"Created Task Msg Ele not Found");
//											log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//										}
//
//										 
//										refresh(driver);
//										click(driver, cp.getRelatedTab(projectName, PageName.Object3Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN);
//										log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//
//
//										switchToDefaultContent(driver);
//										switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//
//										//ele = cp.verifyingRelatedTabData(projectName, PageName.Object3Page, relatedTab, "", Smoke_FinalDiscussionTaskSubject, contactName, Smoke_MTFund1Name, null, Status.Not_Started.toString(), owner, Smoke_FinalDiscussionTaskMeetingType, Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//										cp.verifyingRelatedTabData2(projectName, PageName.Object3Page, relatedTab, "", Smoke_FinalDiscussionTaskSubject, taskstd1, action.BOOLEAN, 10);
//									
//
//									}
//									else {
//										log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//										sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//									}
//
//
//
//								} else {
//									log(LogStatus.ERROR, "Not ABle to Select : "+Smoke_FinalDiscussionTaskMeetingType+" For Label : "+PageLabel.Meeting_Type.toString(), YesNo.Yes);
//									sa.assertTrue(false,"Not ABle to Select : "+Smoke_FinalDiscussionTaskMeetingType+" For Label : "+PageLabel.Meeting_Type.toString() );
//								}
//
//							} else {
//								log(LogStatus.ERROR, "Click on "+PageLabel.Meeting_Type.toString()+" Drop Down", YesNo.Yes);
//								sa.assertTrue(false,"Click on "+PageLabel.Meeting_Type.toString()+" Drop Down" );
//							}
//						}else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings);
//						log(LogStatus.SKIP,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//
//
//			} else {
//				sa.assertTrue(false,"Fund/Deal Not Found : "+Smoke_MTFund1Name);
//				log(LogStatus.SKIP,"Fund/Deal  Not Found : "+Smoke_MTFund1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//		}
//
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc049_VerifyNewMeetingAtTestCustomObject(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		String date = getDateAccToTimeZone("America/New_York", "MM/dd/YYYY");
//		boolean flag=false;
//		//ele = tp.verifyingRelatedTabData(projectName, PageName.TestCustomObjectPage, relatedTab, "", Smoke_DealEvalutionMeetingSubject, contactName, meetingCustomObj2Name, "", Status.Not_Started.toString(), owner, Smoke_DealEvalutionMeetingType, Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contactName);
//		taskstd1.add(meetingCustomObj2Name);
//		taskstd1.add(Status.Not_Started.toString());
//		taskstd1.add(AdminUserFirstName+" "+AdminUserLastName);
//		taskstd1.add(Smoke_DealEvalutionMeetingType);
//		taskstd1.add(Activity.Task.toString());
//		taskstd1.add(Links.View.toString());	
//
//		
//		RelatedTab relatedTab = RelatedTab.Meetings;
//
//		if (tp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (tp.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, meetingCustomObj2Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Test Custom Object : "+meetingCustomObj2Name,YesNo.No);
//				ThreadSleep(1000);
//				refresh(driver);
//				if (click(driver, tp.getRelatedTab(projectName, PageName.TestCustomObjectPage, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//
//					if (clickUsingJavaScript(driver, tp.getNewMeetingButton(projectName, 60), "New Meeting Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New Meeting button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//						ThreadSleep(2000);	
//
//						// PopUp Verification 
//						ele = tp.getHeaderTextForPage(projectName, PageName.TestCustomObjectPage,PageLabel.New_Task.toString(), action.BOOLEAN, 30);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//							String value = ele.getText().trim();
//							System.err.println("VALUE : "+value);
//							System.err.println(PageLabel.New_Task.toString());
//							if (value.equals(PageLabel.New_Task.toString().replace("_", " "))) {
//								log(LogStatus.INFO,"New Task Text is Verified",YesNo.No);		
//							} else {
//								sa.assertTrue(false,"New Task Text is not Verified");
//								log(LogStatus.SKIP,"New Task Text is not Verified",YesNo.Yes);
//							}
//							System.err.println("Value : "+value);
//						
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						// Related_Associations Deafult Verification
//						ele = tp.getRelatedAssciationDefaultSelectedDropDown(projectName, TabName.Object1Tab, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO, "Default Selected : "+tp.getTabName(projectName, TabName.TestCustomObjectTab)+" fOR "+PageLabel.Related_Associations.toString()+" Verified",YesNo.No);	
//
//
//						} else {
//							sa.assertTrue(false,"Default Selected : "+tp.getTabName(projectName, TabName.TestCustomObjectTab)+" fOR "+PageLabel.Related_Associations.toString()+" Not Verified");
//							log(LogStatus.ERROR, "Default Selected : "+tp.getTabName(projectName, TabName.TestCustomObjectTab)+" fOR "+PageLabel.Related_Associations.toString()+" Not Verified",YesNo.Yes);
//
//						}
//
//						// Related_Associations Deafult Selected Item Verification
//						List<WebElement> eleList = tp.getAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(),false, action.SCROLLANDBOOLEAN, 15);
//						if (!eleList.isEmpty() && eleList.size()==1) {
//							log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//							ele=tp.getCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(),false, meetingCustomObj2Name, action.SCROLLANDBOOLEAN, 15);
//							if (ele!=null) {
//								log(LogStatus.INFO, meetingCustomObj2Name+" is prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//
//							} else {
//								sa.assertTrue(false,meetingCustomObj2Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString());
//								log(LogStatus.ERROR, meetingCustomObj2Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//							}
//
//						} else {
//							sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//
//						// Assigned_To Cross Button Click
//						if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(),false, owner, action.SCROLLANDBOOLEAN, 15)) {
//							log(LogStatus.INFO, "Clicked on Cross Button against : "+owner+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.No);	
//							
//							ThreadSleep(2000);
//							// Assigned To
//							owner = AdminUserFirstName+" "+AdminUserLastName;
//							flag=tp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(), TabName.TestCustomObjectTab, owner, action.BOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.INFO,"Selected "+owner+" For  Drown Down Value For Label "+PageLabel.Assigned_To,YesNo.No);
//								ThreadSleep(1000);
//								
//								// Name
//								flag=tp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(), TabName.Object2Tab, contactName, action.BOOLEAN, 10);		
//								if (flag) {
//									log(LogStatus.INFO,"Selected "+contactName+" For Label "+PageLabel.Name,YesNo.No);
//
//								} else {
//									sa.assertTrue(false,"Not Able to Select "+contactName+" For Label "+PageLabel.Name);
//									log(LogStatus.SKIP,"Not Able to Select "+contactName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//								}
//								
//								
//								// Subject
//
//								String[][] dropDownLabelWithValues = {{PageLabel.Meeting_Type.toString(),Smoke_DealEvalutionMeetingType}};
//								if (tp.enteringSubjectAndSelectDropDownValuesonTaskPopUp(projectName, PageName.TestCustomObjectPage, Smoke_DealEvalutionMeetingSubject, dropDownLabelWithValues, action.SCROLLANDBOOLEAN, 10)) {
//									log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//									ThreadSleep(1000);
//
//									
//									//	 
//										if (clickUsingJavaScript(driver, tp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//											log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//
//
//											ele = tp.getCreatedConfirmationMsg(projectName, 15);
//											if (ele!=null) {
//												String actualValue = ele.getText().trim();
//												String expectedValue=tp.taskCreatesMsg(projectName, Smoke_DealEvalutionMeetingSubject);
//												if (actualValue.contains(expectedValue)) {
//													log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//												} else {
//													log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//													BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//												}
//											} else {
//												sa.assertTrue(false,"Created Task Msg Ele not Found");
//												log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//											}
//
//											 
//											switchToDefaultContent(driver);
//											switchToFrame(driver, 30, tp.getMeetingFrameOnContactPage(projectName,30));
//											click(driver, tp.getRefreshIconOnSearchResultForMeeting(projectName, PageName.Object2Page,relatedTab,action.BOOLEAN, 20), relatedTab.toString(), action.BOOLEAN);
//											
//
//											//ele = tp.verifyingRelatedTabData(projectName, PageName.TestCustomObjectPage, relatedTab, "", Smoke_DealEvalutionMeetingSubject, contactName, meetingCustomObj2Name, "", Status.Not_Started.toString(), owner, Smoke_DealEvalutionMeetingType, Activity.Task.toString(), Links.View.toString(), action.BOOLEAN, 15);
//											tp.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, "", Smoke_DealEvalutionMeetingSubject, taskstd1,  action.BOOLEAN, 10);
//											
//
//										}
//										else {
//											log(LogStatus.ERROR, "Save Button is not visible so task could not be created", YesNo.Yes);
//											sa.assertTrue(false,"Save Button is not visible so task could not be created" );
//										}
//
//
//								}else {
//									log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//									sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//								}
//								
//								
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+owner+" For Drown Down Value For Label "+PageLabel.Assigned_To);
//								log(LogStatus.SKIP,"Not Able to Select "+owner+" For  Drown Down Value For Label "+PageLabel.Assigned_To,YesNo.Yes);
//
//							}
//							
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Cross Button against : "+owner+" For Label : "+PageLabel.Assigned_To.toString());
//							log(LogStatus.ERROR, "Not Able to Click on Cross Button against : "+owner+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//
//						}
//
//					
//					
//					} else {
//						sa.assertTrue(false,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings);
//						log(LogStatus.SKIP,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//
//
//			} else {
//				sa.assertTrue(false,"Test Custom Object Not Found : "+meetingCustomObj2Name);
//				log(LogStatus.SKIP,"Test Custom Object  Not Found : "+meetingCustomObj2Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc050_VerifyErrorMessageForNewMeetingButton(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		RelatedTab relatedTab = RelatedTab.Meetings;
//
//		if (tp.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			
//			if (tp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_MTINS1Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Test Custom Object : "+Smoke_MTINS1Name,YesNo.No);
//				
//				refresh(driver);
//				if (click(driver, tp.getRelatedTab(projectName, PageName.Object1Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					if (clickUsingJavaScript(driver, tp.getNewMeetingButton(projectName, 60), "New Meeting Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New Meeting button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//						ThreadSleep(2000);	
//						
//						// Assigned_To Cross Button Click
//						if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.Object1Page, PageLabel.Assigned_To.toString(),false, owner, action.SCROLLANDBOOLEAN, 60)) {
//							log(LogStatus.INFO, "Clicked on Cross Button against : "+owner+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.No);	
//							ThreadSleep(500);
//							
//							// Subject
//							String[][] dropDownLabelWithValues = {{PageLabel.Status.toString(),"--None--"},
//									{PageLabel.Priority.toString(),"--None--"}};
//							if (tp.enteringSubjectAndSelectDropDownValuesonTaskPopUp(projectName, PageName.Object1Page, "", dropDownLabelWithValues, action.SCROLLANDBOOLEAN, 10)) {
//								log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//								ThreadSleep(500);
//								
//								 
//								if (clickUsingJavaScript(driver, tp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//									ThreadSleep(500);
//									
//									// Error Verificaion
//									String labelWithComma = PageLabel.Assigned_To.toString()+", "+PageLabel.Status.toString()+", "+PageLabel.Subject.toString()+", "+PageLabel.Priority.toString();
//									tp.pageErrorOnTaskPopUp(projectName, PageName.Object1Page, relatedTab, labelWithComma, 10);
//							
//								}else {
//									log(LogStatus.ERROR, "Not Able to click on Save Button so cannot verify error msg", YesNo.Yes);
//									sa.assertTrue(false,"Not Able to click on Save Button so cannot verify error msg" );
//								}
//									
//								}
//							
//							else {
//								log(LogStatus.ERROR, "Subject textbox is not visible so cannot verify error msg", YesNo.Yes);
//								sa.assertTrue(false,"Subject textbox is not visible so cannot verify error msg" );
//							}
//							
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Cross Button against : "+owner+" For Label : "+PageLabel.Assigned_To.toString());
//							log(LogStatus.ERROR, "Not Able to Click on Cross Button against : "+owner+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//						}
//
//						
//					} else {
//						sa.assertTrue(false,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings);
//						log(LogStatus.SKIP,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//					}
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Test Custom Object Not Found : "+Smoke_MTINS1Name);
//				log(LogStatus.SKIP,"Test Custom Object  Not Found : "+Smoke_MTINS1Name,YesNo.Yes);
//			}
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc051_AddMeetingTypeField(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		SetupPageBusinessLayer setup=new SetupPageBusinessLayer(driver);
//		HomePageBusineesLayer home=new HomePageBusineesLayer(driver);
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		String parentID=null;
//		//lp.switchToClassic();
//		String mode="Lightning";
//		if (home.clickOnSetUpLink()) {
//			parentID=switchOnWindow(driver);
//			if (parentID!=null) {
//			List<String> layoutName = new ArrayList<String>();
//			layoutName.add("New Event");
//			HashMap<String, String> sourceANDDestination = new HashMap<String, String>();
//			sourceANDDestination.put(PageLabel.Meeting_Type.toString(),PageLabel.Subject.toString());
//			//scn.next();
//			List<String> abc = setup.DragNDrop("", mode, object.Global_Actions, objectFeatureName.pageLayouts, layoutName, sourceANDDestination);
//
//			if (!abc.isEmpty()) {
//				log(LogStatus.FAIL, "field not added/already present 1", YesNo.Yes);
//				sa.assertTrue(false, "field not added/already present 1");
//			}else{
//				log(LogStatus.INFO, "field added/already present 1", YesNo.Yes);
//			}
//			}
//			driver.close();
//			driver.switchTo().window(parentID);
//		}else {
//			log(LogStatus.ERROR, "Not Able to click on Setup",YesNo.Yes);
//			sa.assertTrue(false, "Not Able to click on Setup");	
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc052_1_CreateEventsWithMeetingTypeAction(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		GlobalActionPageBusinessLayer gp = new GlobalActionPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		boolean flag1=false,flag2=false;
//		String contactName= Smoke_MTContact1FName+" "+Smoke_MTContact1LName;
//		TabName tabName;
//		String relatedValue;
//		String meetingType=eventMeetingType;
//		String startDate = null,startDateToWrite="";
//		String endDate = null,endDateToWrite="";
//		String meetingEventSubject = null;
//
//		for (int k = 0; k < 6; k++) {
//			
//			
//			if (click(driver, gp.getGlobalActionIcon(projectName, 15), "Global Action Related item", action.BOOLEAN)) {
//				log(LogStatus.INFO,"Clicked on Global Action Related item",YesNo.No);
//				if (clickUsingJavaScript(driver, gp.getActionItem(projectName, GlobalActionItem.New_Event, 15), "New Event Link", action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on New Event Link",YesNo.Yes);
//					ThreadSleep(2000);	
//
//					click(driver, gp.getMaximizeIcon(projectName, 15), "Maximize Icon", action.BOOLEAN);
//					if (k<=2) {
//						startDate = tomorrowsDate;
//						endDate = dayAfterTomorrowsDate;
//						startDateToWrite=tomorrowsDate;
//						endDateToWrite=dayAfterTomorrowsDate;
//						
//					} else {
//						startDate = dayBeforeYesterdaysDate;
//						endDate = yesterdaysDate;
//						startDateToWrite=dayBeforeYesterdaysDate;
//						endDateToWrite=yesterdaysDate;
//						
//						
//					}
//					
//					
//					if (k==0 || k==3) {
//						tabName=TabName.Object1Tab;
//						relatedValue = Smoke_MTINS4Name;
//					} else if(k==1 || k==4) {
//						tabName=TabName.Object3Tab;
//						relatedValue = Smoke_MTFund1Name;
//					}else {
//						tabName=TabName.TestCustomObjectTab;
//						relatedValue = meetingCustomObj1Name;
//					}
//					meetingEventSubject=ExcelUtils.readData(testCasesFilePath, "Events", excelLabel.Variable_Name,"AAMTUPEV"+(k+1), excelLabel.Subject);
//					ExcelUtils.writeData(startDateToWrite, "Events", excelLabel.Variable_Name, "AAMTUPEV"+(k+1), excelLabel.Start_Date);
//					ExcelUtils.writeData(endDateToWrite, "Events", excelLabel.Variable_Name, "AAMTUPEV"+(k+1), excelLabel.End_Date);
//					
//					String[][] event1 = {{PageLabel.Subject.toString(),meetingEventSubject},
//							{PageLabel.Meeting_Type.toString(),meetingType},
//							{PageLabel.Start_Date.toString(),startDate},{PageLabel.Start_Time.toString(),startingTime},
//							{PageLabel.End_Date.toString(),endDate},{PageLabel.End_Time.toString(),endTime},
//							{PageLabel.Name.toString(),contactName}};
//
//					flag1=gp.enterValueForNewEvent(projectName, GlobalActionItem.New_Event, event1, 10);
//					clickUsingJavaScript(driver, lp.getrelatedAssociationsdropdownButton(projectName, PageName.TaskPage,PageLabel.Related_To.toString()
//							, action.BOOLEAN, 10),"dropdown button", action.BOOLEAN);
//					
//					flag2 = gp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.NewEventPopUp, PageLabel.Related_To.toString(), tabName, relatedValue, action.SCROLLANDBOOLEAN,10);		
//					 
//					if (flag1) {
//						if (flag2) {
//							log(LogStatus.INFO,"Selected "+relatedValue+" For Label "+PageLabel.Related_To,YesNo.No);
//							if (click(driver, gp.getSaveButtonForEvent(projectName, 10), "Save Button", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Click on Save Button For Event : "+meetingEventSubject,YesNo.No);		
//								ThreadSleep(3000);
//							}
//							else {
//								sa.assertTrue(false,"Not Able to Click on Save Button For Event : "+meetingEventSubject);
//								log(LogStatus.SKIP,"Not Able to Click on Save Button For Event : "+meetingEventSubject,YesNo.Yes);	
//							}
//
//						} else {
//							BaseLib.sa.assertTrue(false,"Not Able to Select "+relatedValue+" For Label "+PageLabel.Related_To);
//							log(LogStatus.ERROR,"Not Able to Select "+relatedValue+" For Label "+PageLabel.Related_To,YesNo.Yes);
//
//						}
//					}else {
//						BaseLib.sa.assertTrue(false,"Event can not created as Some data is not entered : "+meetingEventSubject);
//						log(LogStatus.ERROR,"Event can not created as Some data is not entered : "+meetingEventSubject,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on New Event Link");
//					log(LogStatus.SKIP,"Not Able to Click on New Event Link",YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Global Action Related item");
//				log(LogStatus.SKIP,"Not Able to Click on Global Action Related item",YesNo.Yes);
//			}
//			
//		}
//	switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc052_2_verifyCreatedEventsAtMeetingTabImpact(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_MTContact1FName+" "+Smoke_MTContact1LName;
//		WebElement ele ;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		RelatedTab[] relatabTabs = {RelatedTab.Activities,RelatedTab.Meetings};
//		int i=0;
//		String typeValue="Tasks and Events";
//		switchToDefaultContent(driver);
//		
//		List<String> meetingEvent1=new LinkedList<String>();
//		meetingEvent1.add(contactName);
//		meetingEvent1.add(Smoke_MTINS4Name);
//		meetingEvent1.add("");
//		meetingEvent1.add(owner);
//		meetingEvent1.add(eventMeetingType);
//		meetingEvent1.add(Activity.Event.toString());
//		meetingEvent1.add(Links.View.toString());	
//		
//		List<String> meetingEvent2=new LinkedList<String>();
//		meetingEvent2.add(contactName);
//		meetingEvent2.add(Smoke_MTFund1Name);
//		meetingEvent2.add("");
//		meetingEvent2.add(owner);
//		meetingEvent2.add(eventMeetingType);
//		meetingEvent2.add(Activity.Event.toString());
//		meetingEvent2.add(Links.View.toString());
//		
//		List<String> meetingEvent3=new LinkedList<String>();
//		meetingEvent3.add(contactName);
//		meetingEvent3.add(meetingCustomObj1Name);
//		meetingEvent3.add("");
//		meetingEvent3.add(owner);
//		meetingEvent3.add(eventMeetingType);
//		meetingEvent3.add(Activity.Event.toString());
//		meetingEvent3.add(Links.View.toString());
//		
//		List<String> meetingEvent4=new LinkedList<String>();
//		meetingEvent4.add(contactName);
//		meetingEvent4.add(Smoke_MTINS4Name);
//		meetingEvent4.add("");
//		meetingEvent4.add(owner);
//		meetingEvent4.add(eventMeetingType);
//		meetingEvent4.add(Activity.Event.toString());
//		meetingEvent4.add(Links.View.toString());
//		
//		List<String> meetingEvent5=new LinkedList<String>();
//		meetingEvent5.add(contactName);
//		meetingEvent5.add(Smoke_MTFund1Name);
//		meetingEvent5.add("");
//		meetingEvent5.add(owner);
//		meetingEvent5.add(eventMeetingType);
//		meetingEvent5.add(Activity.Event.toString());
//		meetingEvent5.add(Links.View.toString());
//		
//		
//		List<String> meetingEvent6=new LinkedList<String>();
//		meetingEvent6.add(contactName);
//		meetingEvent6.add(meetingCustomObj1Name);
//		meetingEvent6.add("");
//		meetingEvent6.add(owner);
//		meetingEvent6.add(eventMeetingType);
//		meetingEvent6.add(Activity.Event.toString());
//		meetingEvent6.add(Links.View.toString());
//		
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//						if (i==0) {
//
//							if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.BOOLEAN)) {
//								log(LogStatus.INFO,"Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.No);		
//								ThreadSleep(500);
//								if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Type.toString(), 10), typeValue, typeValue)) {
//									log(LogStatus.INFO, "successfully Selected "+typeValue, YesNo.No);
//									ThreadSleep(500);
//
//									if (click(driver, ip.clearApplyButtonOnAdvancedFilter(projectName,"apply", 10), "Apply Button", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Click on Apply Button : "+relatedTab+" so going to verify Event Data",YesNo.No);		
//										ThreadSleep(500);
//									}
//									else {
//										sa.assertTrue(false,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+contactName);
//										log(LogStatus.SKIP,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+contactName,YesNo.Yes);	
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Selected "+typeValue+" for "+contactName, YesNo.No);
//									sa.assertTrue(false, "Not Able to Selected "+typeValue+" for "+contactName);
//								}
//
//							}else {
//								sa.assertTrue(false,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+contactName);
//								log(LogStatus.SKIP,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+contactName,YesNo.Yes);		
//							}
//						}
//					
//					
//						
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, tommorrow, meetingUpcomingEvent1Subject, meetingEvent1, action.SCROLLANDBOOLEAN, 10);	
//					
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, tommorrow, meetingUpcomingEvent2Subject, meetingEvent2, action.SCROLLANDBOOLEAN, 10);	
//					
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, tommorrow, meetingUpcomingEvent3Subject, meetingEvent3, action.SCROLLANDBOOLEAN, 10);	
//					
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, dayBeforeYesterday, meetingCompletedEvent1Subject, meetingEvent4, action.SCROLLANDBOOLEAN, 10);	
//					
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, dayBeforeYesterday, meetingCompletedEvent2Subject, meetingEvent5, action.SCROLLANDBOOLEAN, 10);	
//					
//					ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, dayBeforeYesterday, meetingCompletedEvent3Subject, meetingEvent6, action.SCROLLANDBOOLEAN, 10);	
//					
//						
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName,YesNo.Yes);
//					}
//					i++;
//				}
//
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact  Not Found : "+contactName,YesNo.Yes);
//			}
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		i=0;
//		if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_MTINS4Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Entity/Account : "+Smoke_MTINS4Name,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//						if (i==0) {
//
//							if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.BOOLEAN)) {
//								log(LogStatus.INFO,"Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.No);		
//								ThreadSleep(500);
//								if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Type.toString(), 10), typeValue, typeValue)) {
//									log(LogStatus.INFO, "successfully Selected "+typeValue, YesNo.No);
//									ThreadSleep(500);
//
//									if (click(driver, ip.clearApplyButtonOnAdvancedFilter(projectName,"apply", 10), "Apply Button", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Click on Apply Button : "+relatedTab+" so going to verify Event Data",YesNo.No);		
//										ThreadSleep(500);
//									}
//									else {
//										sa.assertTrue(false,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTINS1Name);
//										log(LogStatus.SKIP,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTINS1Name,YesNo.Yes);	
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Selected "+typeValue+" for "+Smoke_MTINS1Name, YesNo.No);
//									sa.assertTrue(false, "Not Able to Selected "+typeValue+" for "+Smoke_MTINS1Name);
//								}
//
//							}else {
//								sa.assertTrue(false,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTINS1Name);
//								log(LogStatus.SKIP,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTINS1Name,YesNo.Yes);		
//							}
//						}
//						
//						ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, relatedTab, tommorrow, meetingUpcomingEvent1Subject, meetingEvent1, action.SCROLLANDBOOLEAN, 10);	
//						
//						ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, relatedTab, dayBeforeYesterday, meetingCompletedEvent1Subject, meetingEvent4, action.SCROLLANDBOOLEAN, 10);	
//						
//						
//							
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+Smoke_MTINS4Name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+Smoke_MTINS4Name,YesNo.Yes);
//					}
//					i++;	
//				}
//
//			} else {
//				sa.assertTrue(false,"Entity/Account Not Found : "+Smoke_MTINS4Name);
//				log(LogStatus.SKIP,"Entity/Account  Not Found : "+Smoke_MTINS4Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//		}
//
//
//
//		switchToDefaultContent(driver);
//		i=0;
//		if (cp.clickOnTab(projectName, TabName.Object3Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object3Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_MTFund1Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Entity/Account : "+Smoke_MTFund1Name,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object3Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//						if (i==0) {
//
//							if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.BOOLEAN)) {
//								log(LogStatus.INFO,"Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.No);		
//								ThreadSleep(500);
//								if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Type.toString(), 10), typeValue, typeValue)) {
//									log(LogStatus.INFO, "successfully Selected "+typeValue, YesNo.No);
//									ThreadSleep(500);
//
//									if (click(driver, ip.clearApplyButtonOnAdvancedFilter(projectName,"apply", 10), "Apply Button", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Click on Apply Button : "+relatedTab+" so going to verify Event Data",YesNo.No);		
//										ThreadSleep(500);
//									}
//									else {
//										sa.assertTrue(false,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTFund1Name);
//										log(LogStatus.SKIP,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTFund1Name,YesNo.Yes);	
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Selected "+typeValue+" for "+Smoke_MTFund1Name, YesNo.No);
//									sa.assertTrue(false, "Not Able to Selected "+typeValue+" for "+Smoke_MTFund1Name);
//								}
//
//							}else {
//								sa.assertTrue(false,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTFund1Name);
//								log(LogStatus.SKIP,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+Smoke_MTFund1Name,YesNo.Yes);		
//							}
//						}
//
//						ip.verifyingRelatedTabData2(projectName, PageName.Object3Page, relatedTab, tommorrow, meetingUpcomingEvent2Subject, meetingEvent2, action.SCROLLANDBOOLEAN, 10);	
//						
//						ip.verifyingRelatedTabData2(projectName, PageName.Object3Page, relatedTab, dayBeforeYesterday, meetingCompletedEvent2Subject, meetingEvent5, action.SCROLLANDBOOLEAN, 10);	
//						
//						
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+Smoke_MTFund1Name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+Smoke_MTFund1Name,YesNo.Yes);
//					}
//
//				}
//				i++;
//			} else {
//				sa.assertTrue(false,"Entity/Account Not Found : "+Smoke_MTFund1Name);
//				log(LogStatus.SKIP,"Entity/Account  Not Found : "+Smoke_MTFund1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		String testCustomObject = meetingCustomObj1Name;
//		i=0;
//		if (cp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, testCustomObject, 20)) {
//				log(LogStatus.INFO,"Clicked on Test Custom Object : "+testCustomObject,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						//	 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 60, cp.getMeetingFrameOnContactPage(projectName,60));
//
//						if (i==0) {
//
//							if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.BOOLEAN)) {
//								log(LogStatus.INFO,"Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.No);		
//								ThreadSleep(500);
//								if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Type.toString(), 10), typeValue, typeValue)) {
//									log(LogStatus.INFO, "successfully Selected "+typeValue, YesNo.No);
//									ThreadSleep(500);
//
//									if (click(driver, ip.clearApplyButtonOnAdvancedFilter(projectName,"apply", 10), "Apply Button", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Click on Apply Button : "+relatedTab+" so going to verify Event Data",YesNo.No);		
//										ThreadSleep(500);
//									}
//									else {
//										sa.assertTrue(false,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+testCustomObject);
//										log(LogStatus.SKIP,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+testCustomObject,YesNo.Yes);	
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Selected "+typeValue, YesNo.No);
//									sa.assertTrue(false, "Not Able to Selected "+typeValue);
//								}
//
//							}else {
//								sa.assertTrue(false,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+testCustomObject);
//								log(LogStatus.SKIP,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+testCustomObject,YesNo.Yes);		
//							}
//						}
//
//						
//						ip.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, tommorrow, meetingUpcomingEvent3Subject, meetingEvent3, action.SCROLLANDBOOLEAN, 10);	
//						
//						ip.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, dayBeforeYesterday, meetingCompletedEvent3Subject, meetingEvent6, action.SCROLLANDBOOLEAN, 10);	
//						
//
//						
//						if (i==1) {
//							TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//						String link = meetingUpcomingEvent3Subject;
//							ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, link, action.BOOLEAN, 10);
//							if (ele!=null) {
//								log(LogStatus.INFO,link+" link present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);	
//
//								if (click(driver, ele, link, action.BOOLEAN)) {
//									log(LogStatus.INFO,"Clicked on : "+link,YesNo.No);
//									String parentID = switchOnWindow(driver);
//									if (parentID!=null) {
//										log(LogStatus.INFO,"New window is open for : "+link,YesNo.Yes);
//										ThreadSleep(1000);
//										ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 15);
//											if (ele==null) {
//												log(LogStatus.INFO,PageLabel.Related_Associations+" not available for :  "+link,YesNo.No);	
//											} else {
//												sa.assertTrue(false,PageLabel.Related_Associations+" should not available for :  "+link);
//												log(LogStatus.SKIP,PageLabel.Related_Associations+" should not available for :  "+link,YesNo.Yes);
//											}
//
//											driver.close();
//											driver.switchTo().window(parentID);
//									
//
//
//									} else {
//										sa.assertTrue(false,"No new window is open for : "+link);
//										log(LogStatus.SKIP,"No new window is open for : "+link,YesNo.Yes);
//									}
//
//								} else {
//									sa.assertTrue(false,"Not Able to Click on : "+link);
//									log(LogStatus.SKIP,"Not Able to Click on : "+link,YesNo.Yes);
//								}
//							} else {
//								sa.assertTrue(false,link+" link not present on Sub Tab : "+RelatedTab.Activities);
//								log(LogStatus.SKIP,link+" link not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//							}
//							
//						}
//						
//						
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+testCustomObject);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+testCustomObject,YesNo.Yes);
//					}
//					i++;
//				}
//
//			} else {
//				sa.assertTrue(false,"Test custom object Not Found : "+testCustomObject);
//				log(LogStatus.SKIP,"Test custom object  Not Found : "+testCustomObject,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab,YesNo.Yes);
//		}
//
//
//
//
//		switchToDefaultContent(driver);
//		 
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	/*@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc053_1_VerifyColumnsToDisplay_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp= new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword);
//		String contactName = Smoke_MTContact1FName+" "+Smoke_MTContact1LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		String[] finalOrder= {TaskPageFields.Priority.toString(),TaskPageFields.Name.toString(),TaskPageFields.Date.toString(),
//				"Name ID","Related To ID",	TaskPageFields.Activity.toString(),TaskPageFields.Owner.toString(),PageLabel.Meeting_Type.toString()};
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Meetings, 20), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, cp.getmeetingOrActivitiesFrame(projectName,10));
//					if (click(driver,cp.getwrenchIcon(projectName, 10), "columns to display", action.BOOLEAN)) {
//						if (sendKeys(driver, cp.getsearchTextboxColToDisplay(projectName, 10),ActivityRelatedLabel.Priority.toString(), 
//								"columns to display", action.BOOLEAN)) {
//							if (click(driver, cp.getsearchIconColToDisplay(projectName, 10), "search icon", action.BOOLEAN)) {
//								if (cp.verifyAvailableColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Priority.toString() ,20)) {
//									log(LogStatus.INFO, "successfully verified priority field in available dropdown",YesNo.No);
//								}else {
//									log(LogStatus.ERROR, "could not verify priority field in available dropdown",YesNo.Yes);
//									sa.assertTrue(false, "could not verify priority field in available dropdown");
//								}
//								if (cp.getsearchCrossColToDisplay(projectName, 10)!=null) {
//									log(LogStatus.INFO, "search cross icon is successfully verified",YesNo.No);
//								}else {
//									log(LogStatus.ERROR, "search cross icon is not visible on col to display",YesNo.Yes);
//									sa.assertTrue(false, "search cross icon is not visible on col to display");
//								}
//								if (click(driver, cp.getsearchCrossColToDisplay(projectName, 10), "cross", action.BOOLEAN)) {
//									if (getText(driver, cp.getsearchTextboxColToDisplay(projectName, 10), "search textbox", action.BOOLEAN).equalsIgnoreCase("")) {
//										log(LogStatus.INFO, "verified empty search textbox", YesNo.No);
//									}else {
//										log(LogStatus.ERROR, "could not verify empty search textbox after clicking cross icon",YesNo.Yes);
//										sa.assertTrue(false, "could not verify empty search textbox after clicking cross icon");
//									}
//								}else {
//									log(LogStatus.ERROR, "search cross icon is not clickable",YesNo.Yes);
//									sa.assertTrue(false, "search cross icon is not clickable");
//								}
//
//							}else {
//								log(LogStatus.ERROR, "search icon is not clickable, so cannot find priority in available fields",YesNo.Yes);
//								sa.assertTrue(false, "search icon is not clickable, so cannot find priority in available fields");
//							}
//						}else {
//							log(LogStatus.ERROR, "search textbox is not visible, so cannot find priority in available fields",YesNo.Yes);
//							sa.assertTrue(false, "search textbox is not visible, so cannot find priority in available fields");
//						}
//						if (sendKeys(driver, cp.getsearchTextboxColToDisplay(projectName, 10),ActivityRelatedLabel.Priority.toString(), 
//								"columns to display", action.SCROLLANDBOOLEAN)) {
//							if (click(driver, cp.getsearchIconColToDisplay(projectName, 10), "search icon", action.BOOLEAN)) {
//								if (cp.verifyAvailableColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Priority.toString(),20 )) {
//									if (click(driver, ip.getmoveToSelectedColToDisplay(projectName,10),"right button", action.BOOLEAN)) {
//										if (cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Priority.toString(), 20 )) {
//											log(LogStatus.INFO, "successfully verified priority in slected grid", YesNo.Yes);
//										}
//										else {
//											log(LogStatus.ERROR, "so cannot verify priority in selected field",YesNo.Yes);
//											sa.assertTrue(false, "so cannot verify priority in selected field");
//										}
//									}else {
//										log(LogStatus.ERROR, "move to selected icon is not clickable, so cannot move priority to selected",YesNo.Yes);
//										sa.assertTrue(false, "move to selected icon is not clickable, so cannot move priority to selected");
//									}
//								}
//								else {
//									log(LogStatus.ERROR, "priorty field is not clickable, so cannot move priority to selected",YesNo.Yes);
//									sa.assertTrue(false, "priorty field is not clickable, so cannot move priority to selected");
//								}
//							}else {
//								log(LogStatus.ERROR, "search icon is not clickable, so cannot move priority to selected",YesNo.Yes);
//								sa.assertTrue(false, "search icon is not clickable, so cannot move priority to selected");
//							}
//						}
//						else {
//							log(LogStatus.ERROR, "search textbox is not visible, so cannot move priority to selected",YesNo.Yes);
//							sa.assertTrue(false, "search textbox is not visible, so cannot move priority to selected");
//						}
//						click(driver, ip.getsearchCrossColToDisplay(projectName, 10), "search cross", action.BOOLEAN);
//						if (cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Status.toString(), 20 )) {
//							if (click(driver, cp.getmoveToAvailableColToDisplay(projectName, 10), "move to left", action.BOOLEAN)) {
//								if (!cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Status.toString(), 5 )) {
//									log(LogStatus.INFO, "successfully verfied absent status in selected fields", YesNo.No);
//								}else {
//									log(LogStatus.ERROR, "status is present in selected fields, but it should not be",YesNo.Yes);
//									sa.assertTrue(false, "status is present in selected fields, but it should not be");
//								}
//							}else {
//								log(LogStatus.ERROR, "move To Available is not clickable",YesNo.Yes);
//								sa.assertTrue(false, "move To Available is not clickable");
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click Status in selected column, so cannot move",YesNo.Yes);
//							sa.assertTrue(false, "could not click Status in selected column, so cannot move");
//						}
//						
//						ThreadSleep(5000);
//						sendKeys(driver, ip.getsearchTextboxColToDisplay(projectName, 10), Keys.PAGE_DOWN+"", "page down", action.BOOLEAN);
//						//scrollDownThroughWebelement(driver, ip.getApplyColToDisplay(projectName, EnableDisable.Enable, 10), "apply");
//						if (cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Priority.toString(), 20 )) {
//							if (click(driver, cp.getMoveTopColToDisplay(projectName, EnableDisable.Enable, 10), "top", action.BOOLEAN)) {
//								
//							}else {
//								log(LogStatus.ERROR, "move top icon is not clickable",YesNo.Yes);
//								sa.assertTrue(false, "move top icon is not clickable");
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click Priority in selected column",YesNo.Yes);
//							sa.assertTrue(false, "could not click Priority in selected column");
//						}
//						if (cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,PageLabel.Meeting_Type.toString(), 20 )) {
//							if (click(driver, cp.getMoveBottomColToDisplay(projectName, EnableDisable.Enable, 10), "bottom", action.BOOLEAN)) {
//								
//							}else {
//								log(LogStatus.ERROR, "move bottom icon is not clickable",YesNo.Yes);
//								sa.assertTrue(false, "move bottom icon is not clickable");
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click Meeting_Type in selected column",YesNo.Yes);
//							sa.assertTrue(false, "could not click Meeting_Type in selected column");
//						}
//						if (cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Date.toString(), 20 )) {
//							if (click(driver, cp.getMoveDownColToDisplay(projectName, EnableDisable.Enable, 10), "down", action.BOOLEAN)) {
//								
//							}else {
//								log(LogStatus.ERROR, "move down icon is not clickable",YesNo.Yes);
//								sa.assertTrue(false, "move down icon is not clickable");
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click Date in selected column",YesNo.Yes);
//							sa.assertTrue(false, "could not click Date in selected column");
//						}
//						if (cp.verifySelectedColumnInColumnsToDisplayGrid(projectName, PageName.Object2Page,TaskPageFields.Activity.toString(), 20 )) {
//							if (click(driver, cp.getMoveUpColToDisplay(projectName, EnableDisable.Enable, 10), "down", action.BOOLEAN)) {
//								List<WebElement> eles=ip.getSelectedFieldsList(projectName, 10);
//								for (int i=0;i<finalOrder.length;i++) {
//									if (eles.get(i).getText().trim().contains(finalOrder[i])) {
//										log(LogStatus.INFO, "successfully verified "+eles.get(i).getText()+" in correct order", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, eles.get(i).getText()+"found wrong w.r.t to "+finalOrder[i],YesNo.Yes);
//										sa.assertTrue(false, eles.get(i).getText()+"found wrong w.r.t to "+finalOrder[i]);
//									}
//								}
//								if (click(driver, ip.getApplyColToDisplay(projectName, EnableDisable.Enable, 10), "apply", action.BOOLEAN)) {
//									log(LogStatus.INFO, "successfully changed columns through cols to display popup", YesNo.No);
//								}else {
//									log(LogStatus.ERROR, "could not click apply button",YesNo.Yes);
//									sa.assertTrue(false, "could not click apply button");
//								}
//								
//								List<String> s=compareMultipleList(driver,ActivityRelatedLabel.Priority.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//								if (s.isEmpty()) {
//									log(LogStatus.INFO, "successfully verified priority present on grid", YesNo.No);
//								}
//								else {
//									log(LogStatus.ERROR, "not found priority on task grid",YesNo.Yes);
//									sa.assertTrue(false, "not found priority ot task grid");
//								}
//								s=compareMultipleList(driver,ActivityRelatedLabel.Status.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//								if (!s.isEmpty()) {
//									log(LogStatus.INFO, "successfully verified absence of status on grid", YesNo.No);
//								}
//								else {
//									log(LogStatus.ERROR, "found status on task grid, but it should not be",YesNo.Yes);
//									sa.assertTrue(false, "found status on task grid, but it should not be");
//								}
//							}else {
//								log(LogStatus.ERROR, "move up icon is not clickable",YesNo.Yes);
//								sa.assertTrue(false, "move up icon is not clickable");
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click activity in selected column",YesNo.Yes);
//							sa.assertTrue(false, "could not click activity in selected column");
//						}
//					}else {
//						log(LogStatus.ERROR, "wrench icon not clickable",YesNo.Yes);
//						sa.assertTrue(false, "wrench icon not clickable");
//					}
//				}else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}else {
//				log(LogStatus.ERROR, "not found contact"+contactName,YesNo.Yes);
//				sa.assertTrue(false,"not found contact"+contactName);
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "contact tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "contact tab not clickable");
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc053_2_VerifyColumnsToDisplay_Impact(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword);
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_MTINS1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Meetings, 20), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					List<String> s=compareMultipleList(driver,ActivityRelatedLabel.Priority.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified priority present on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "not found priority on task grid",YesNo.Yes);
//						sa.assertTrue(false, "not found priority ot task grid");
//					}
//					s=compareMultipleList(driver,ActivityRelatedLabel.Status.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (!s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified absence of status on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "found status on task grid, but it should not be",YesNo.Yes);
//						sa.assertTrue(false, "found status on task grid, but it should not be");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not found "+Smoke_MTINS1Name,YesNo.Yes);
//				sa.assertTrue(false,"not found "+Smoke_MTINS1Name);
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "account/entity tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "account/entity tab not clickable");
//		}
//		
//		if (lp.clickOnTab(projectName, TabName.Object3Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_MTFund1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object3Page, RelatedTab.Meetings, 20), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					List<String> s=compareMultipleList(driver,ActivityRelatedLabel.Priority.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified priority present on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "not found priority on task grid",YesNo.Yes);
//						sa.assertTrue(false, "not found priority ot task grid");
//					}
//					s=compareMultipleList(driver,ActivityRelatedLabel.Status.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (!s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified absence of status on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "found status on task grid, but it should not be",YesNo.Yes);
//						sa.assertTrue(false, "found status on task grid, but it should not be");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not found "+Smoke_MTFund1Name,YesNo.Yes);
//				sa.assertTrue(false,"not found "+Smoke_MTFund1Name);
//			}
//		}else {
//			log(LogStatus.ERROR, "fund tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "fund tab not clickable");
//		}
//		if (lp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, meetingCustomObj1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Meetings, 20), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					List<String> s=compareMultipleList(driver,ActivityRelatedLabel.Priority.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified priority present on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "not found priority on task grid",YesNo.Yes);
//						sa.assertTrue(false, "not found priority ot task grid");
//					}
//					s=compareMultipleList(driver,ActivityRelatedLabel.Status.toString()  , ip.getHeadersInTaskGrid(projectName, 10));
//					if (!s.isEmpty()) {
//						log(LogStatus.INFO, "successfully verified absence of status on grid", YesNo.No);
//					}
//					else {
//						log(LogStatus.ERROR, "found status on task grid, but it should not be",YesNo.Yes);
//						sa.assertTrue(false, "found status on task grid, but it should not be");
//					}
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not found "+meetingCustomObj1Name,YesNo.Yes);
//				sa.assertTrue(false,"not found "+meetingCustomObj1Name);
//			}
//		}else {
//			log(LogStatus.ERROR, "TestCustomObjectTab tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "TestCustomObjectTab tab not clickable");
//		}
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc054_VerifyRevertToDefaultForColumnToDisplayPopUpOnMeetingTab(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword);
//		
//		RelatedTab[] relatabTabs = {RelatedTab.Meetings};
//		switchToDefaultContent(driver);
//		
//		List<String> meetingHeaders=new LinkedList<String>();
//		meetingHeaders.add(PageLabel.Date.toString().toUpperCase());
//		meetingHeaders.add(PageLabel.Name.toString().toUpperCase());
//		meetingHeaders.add(PageLabel.Contact_Name.toString().replace("_", " ").toUpperCase());
//		meetingHeaders.add(PageLabel.Related_To.toString().replace("_", " ").toUpperCase());
//		meetingHeaders.add(PageLabel.Status.toString().toUpperCase());
//		meetingHeaders.add(PageLabel.Owner.toString().toUpperCase());
//		meetingHeaders.add(PageLabel.Meeting_Type.toString().replace("_", " ").toUpperCase());	
//		meetingHeaders.add(PageLabel.Activity.toString().toUpperCase());
//		meetingHeaders.add(PageLabel.Comments.toString().toUpperCase());
//		
//		
//		String contactName = Smoke_MTContact1FName+" "+Smoke_MTContact1LName;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//						
//						if (click(driver, cp.getwrenchIcon(projectName, 10), "Column to display Button", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Click on Column to display Button",YesNo.No);
//							ThreadSleep(500);
//							
//							if (click(driver, cp.getrevertToDefaultColToDisplay(projectName, EnableDisable.Enable, 10), "Revert to default Button", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Click on Revert to default Button",YesNo.No);
//								ThreadSleep(500);
//								
//								if (click(driver, cp.getApplyColToDisplay(projectName, EnableDisable.Enable, 10), "Apply Button", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"Click on Apply Button",YesNo.No);
//									ThreadSleep(5000);
//									
//									if (cp.verifyHeadersForRelatedTab(projectName, relatedTab, meetingHeaders)) {
//										log(LogStatus.PASS,"Header Verified : "+relatedTab+" for "+contactName,YesNo.No);	
//									} else {
//										sa.assertTrue(false,"Header Not Verified : "+relatedTab+" for "+contactName);
//										log(LogStatus.SKIP,"Header Not Verified : "+relatedTab+" for "+contactName,YesNo.Yes);
//									}
//									
//									
//								} else {
//									sa.assertTrue(false,"Not Able to Click on Apply Button");
//									log(LogStatus.SKIP,"Not Able to Click on Apply Button",YesNo.Yes);
//								}
//								
//							} else {
//								sa.assertTrue(false,"Not Able to Click on Revert to default Button");
//								log(LogStatus.SKIP,"Not Able to Click on Revert to default Button",YesNo.Yes);
//							}
//
//							
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Column to display Button");
//							log(LogStatus.SKIP,"Not Able to Click on Column to display Button",YesNo.Yes);
//						}
//						
//						
//						
//								
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName,YesNo.Yes);
//					}
//				
//				}
//
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact  Not Found : "+contactName,YesNo.Yes);
//			}
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Entity/Account : "+Smoke_TaskINS1Name,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//						if (cp.verifyHeadersForRelatedTab(projectName, relatedTab, meetingHeaders)) {
//							log(LogStatus.PASS,"Header Verified : "+relatedTab+" for "+Smoke_TaskINS1Name,YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Header Not Verified : "+relatedTab+" for "+Smoke_TaskINS1Name);
//							log(LogStatus.SKIP,"Header Not Verified : "+relatedTab+" for "+Smoke_TaskINS1Name,YesNo.Yes);
//						}
//						
//							
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+Smoke_TaskINS1Name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+Smoke_TaskINS1Name,YesNo.Yes);
//					}
//					
//				}
//
//			} else {
//				sa.assertTrue(false,"Entity/Account Not Found : "+Smoke_TaskINS1Name);
//				log(LogStatus.SKIP,"Entity/Account  Not Found : "+Smoke_TaskINS1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//		}
//
//
//
//		switchToDefaultContent(driver);
//		if (cp.clickOnTab(projectName, TabName.Object3Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object3Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_TaskFund1Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Entity/Account : "+Smoke_TaskFund1Name,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object3Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//						if (cp.verifyHeadersForRelatedTab(projectName, relatedTab, meetingHeaders)) {
//							log(LogStatus.PASS,"Header Verified : "+relatedTab+" for "+Smoke_TaskFund1Name,YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Header Not Verified : "+relatedTab+" for "+Smoke_TaskFund1Name);
//							log(LogStatus.SKIP,"Header Not Verified : "+relatedTab+" for "+Smoke_TaskFund1Name,YesNo.Yes);
//						}
//						
//							
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+Smoke_TaskFund1Name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+Smoke_TaskFund1Name,YesNo.Yes);
//					}
//
//				}
//
//			} else {
//				sa.assertTrue(false,"Entity/Account Not Found : "+Smoke_TaskFund1Name);
//				log(LogStatus.SKIP,"Entity/Account  Not Found : "+Smoke_TaskFund1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		String testCustomObject = taskCustomObj1Name;
//		if (cp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, testCustomObject, 20)) {
//				log(LogStatus.INFO,"Clicked on Test Custom Object : "+testCustomObject,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						//	 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 60, cp.getMeetingFrameOnContactPage(projectName,60));
//
//						if (cp.verifyHeadersForRelatedTab(projectName, relatedTab, meetingHeaders)) {
//							log(LogStatus.PASS,"Header Verified : "+relatedTab+" for "+testCustomObject,YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Header Not Verified : "+relatedTab+" for "+testCustomObject);
//							log(LogStatus.SKIP,"Header Not Verified : "+relatedTab+" for "+testCustomObject,YesNo.Yes);
//						}
//
//							
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+testCustomObject);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+testCustomObject,YesNo.Yes);
//					}
//				
//				}
//
//			} else {
//				sa.assertTrue(false,"Test custom object Not Found : "+testCustomObject);
//				log(LogStatus.SKIP,"Test custom object  Not Found : "+testCustomObject,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab,YesNo.Yes);
//		}
//
//
//
//
//		switchToDefaultContent(driver);
//		 
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	*/
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc053_VerifyRangePickListAvailableOnMeetingTab(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		RelatedTab[] relatabTabs = {RelatedTab.Meetings};
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AACALL1", excelLabel.Due_Date);
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(Smoke_MTContact3FName+" "+Smoke_MTContact3LName);
//		taskstd1.add(Smoke_MTINS1Name+" +2");
//		taskstd1.add(Status.Completed.toString());
//		taskstd1.add(AdminUserFirstName+" "+AdminUserLastName);
//		taskstd1.add(Smoke_LogACall1MeetingType);
//		taskstd1.add(Activity.Call.toString());
//		taskstd1.add(Links.View.toString());	
//
//		
//		switchToDefaultContent(driver);
//		
//		String testCustomObject = meetingCustomObj1Name;
//		if (cp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, testCustomObject, 20)) {
//				log(LogStatus.INFO,"Clicked on Test Custom Object : "+testCustomObject,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						//	 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 60, cp.getMeetingFrameOnContactPage(projectName,60));
//
//						if (selectVisibleTextFromDropDown(driver, cp.getrangeDropdown(projectName, 10), "Today", "Today")) {
//							log(LogStatus.INFO, "successfully Selected Today", YesNo.No);
//							ThreadSleep(1000);
//							cp.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, relatedTab, date, Smoke_LogACall1Subject, taskstd1, action.SCROLLANDBOOLEAN, 10);	
//							
//
//						}
//						else {
//							log(LogStatus.ERROR,  "Not Able to Selected Today", YesNo.No);
//							sa.assertTrue(false, "Not Able to Selected Today");
//						}
//						
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+testCustomObject);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+testCustomObject,YesNo.Yes);
//					}
//				
//				}
//
//			} else {
//				sa.assertTrue(false,"Test custom object Not Found : "+testCustomObject);
//				log(LogStatus.SKIP,"Test custom object  Not Found : "+testCustomObject,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		 
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc054_VerifyAdditionalFilteronMeetingTab(String projectName) {
//
//
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		WebElement ele ;
//		RelatedTab[] relatabTabs = {RelatedTab.Meetings};
//		String typeValue="Tasks";
//		switchToDefaultContent(driver);
//		
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//						if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.BOOLEAN)) {
//							log(LogStatus.INFO,"Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.No);		
//							ThreadSleep(500);
//							
//							typeValue="Tasks";
//							if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Type.toString(), 10), typeValue, typeValue)) {
//								log(LogStatus.INFO, "successfully Selected "+typeValue, YesNo.No);
//								ThreadSleep(500);
//								
//								typeValue="Completed activities";
//								if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Status.toString(), 10), typeValue, typeValue)) {
//									log(LogStatus.INFO, "successfully Selected "+typeValue, YesNo.No);
//									ThreadSleep(500);
//
//									if (click(driver, ip.clearApplyButtonOnAdvancedFilter(projectName,"apply", 10), "Apply Button", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Click on Apply Button : "+relatedTab+" so going to verify Event Data",YesNo.No);		
//										ThreadSleep(500);
//
//										ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Meetings, Smoke_LogACall1Subject, action.BOOLEAN, 10);
//										if (ele!=null) {
//											log(LogStatus.INFO,Smoke_LogACall1Subject+" link present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);		
//										} else {
//											sa.assertTrue(false,Smoke_LogACall1Subject+" link not present on Sub Tab : "+RelatedTab.Meetings);
//											log(LogStatus.SKIP,Smoke_LogACall1Subject+" link not present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//										}
//									}
//									else {
//										sa.assertTrue(false,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+contactName);
//										log(LogStatus.SKIP,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+contactName,YesNo.Yes);	
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Selected "+typeValue+" for "+contactName, YesNo.No);
//									sa.assertTrue(false, "Not Able to Selected "+typeValue+" for "+contactName);
//								}
//
//							}
//							else {
//								log(LogStatus.ERROR,  "Not Able to Selected "+typeValue+" for "+contactName, YesNo.No);
//								sa.assertTrue(false, "Not Able to Selected "+typeValue+" for "+contactName);
//							}
//
//						}else {
//							sa.assertTrue(false,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+contactName);
//							log(LogStatus.SKIP,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+contactName,YesNo.Yes);		
//						}
//
//
//						if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.BOOLEAN)) {
//							log(LogStatus.INFO,"Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.No);		
//							ThreadSleep(500);
//							
//							typeValue="My Activities";
//							if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Owner.toString(), 10), typeValue, typeValue)) {
//								log(LogStatus.INFO, "successfully Selected "+typeValue, YesNo.No);
//								ThreadSleep(500);
//								
//
//									if (click(driver, ip.clearApplyButtonOnAdvancedFilter(projectName,"apply", 10), "Apply Button", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Click on Apply Button : "+relatedTab+" so going to verify Event Data",YesNo.No);		
//										ThreadSleep(500);
//
//										ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Meetings, Smoke_LogACall1Subject, action.BOOLEAN, 10);
//										if (ele==null) {
//											log(LogStatus.INFO,Smoke_LogACall1Subject+" link is not present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);		
//										} else {
//											sa.assertTrue(false,Smoke_LogACall1Subject+" link should not present on Sub Tab : "+RelatedTab.Meetings);
//											log(LogStatus.SKIP,Smoke_LogACall1Subject+" link should not present on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//										}
//									}
//									else {
//										sa.assertTrue(false,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+contactName);
//										log(LogStatus.SKIP,"Not Able to Click on Apply Button : "+relatedTab+" so cannot verify Event Data "+" for "+contactName,YesNo.Yes);	
//									}
//
//							}
//							else {
//								log(LogStatus.ERROR,  "Not Able to Selected "+typeValue+" for "+contactName, YesNo.No);
//								sa.assertTrue(false, "Not Able to Selected "+typeValue+" for "+contactName);
//							}
//
//						}else {
//							sa.assertTrue(false,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+contactName);
//							log(LogStatus.SKIP,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab+" so cannot verify Event Data "+" for "+contactName,YesNo.Yes);		
//						}
//
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName,YesNo.Yes);
//					}
//
//				}
//
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact  Not Found : "+contactName,YesNo.Yes);
//			}
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		 
//		lp.CRMlogout();
//		sa.assertAll();
//
//
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc055_VerifyAddRowAddFilterLogicAndClearButtonFunctionalityAtAdditionalFilter(String projectName) {
//
//
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		WebElement ele ;
//		RelatedTab[] relatabTabs = {RelatedTab.Meetings};
//
//		String field="";
//		String operator="";
//		String value="";
//		switchToDefaultContent(driver);
//		String parenTiD=null;
//		String Xpath =null;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//						//	 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//						if (click(driver, ip.getadvancedFilterToggle(projectName, 20), "advanced filter toggle link", action.BOOLEAN)) {
//							log(LogStatus.INFO,"Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.No);		
//							ThreadSleep(500);
//
//							// Add Row Link and Cross Icon 
//							if(click(driver, cp.getAddRowLink(projectName,10), "Add Row Link", action.BOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on Add row link",YesNo.No);
//								ThreadSleep(1000);
//
//								if (!cp.getRowRemoveIcon().isEmpty() && cp.getRowRemoveIcon().size()==1) {
//									log(LogStatus.PASS,"1 Row Added",YesNo.Yes);
//
//									if(click(driver, cp.getRowRemoveIcon().get(0), "remove icon", action.BOOLEAN)) {
//										log(LogStatus.INFO,"clicked on remove row link",YesNo.No);
//										ThreadSleep(1000);
//										if (cp.getRowRemoveIcon1(projectName, 3)==null) {
//											log(LogStatus.PASS,"Row Removed",YesNo.Yes);
//										} else {
//											log(LogStatus.FAIL,"Row Not Removed",YesNo.Yes);
//											sa.assertTrue(false, "Row Not Removed");
//										}
//
//									}else {
//										appLog.error("Not able to click on remove row link so cannot check remove functionality");
//										log(LogStatus.FAIL,"Not able to click on remove row link so cannot check remove functionality",YesNo.Yes);
//										sa.assertTrue(false,"Not able to click on remove row link so cannot check remove functionality");
//									}
//									ThreadSleep(2000);
//
//								} else {
//									log(LogStatus.FAIL,"1 Row Not Added",YesNo.Yes);
//									sa.assertTrue(false, "1 Row Not Added");
//								}
//
//
//							}else {
//								appLog.error("Not able to click on Add row link so cannot check remove functionality");
//								log(LogStatus.FAIL,"Not able to click on Add row link so cannot check remove functionality",YesNo.Yes);
//								sa.assertTrue(false,"Not able to click on Add row link so cannot check remove functionality");
//							}
//
//							// Filter Logic Link Functionality 
//							ele=cp.getfilterLogicLink(projectName, 10);
//							if(ele!=null) {
//								log(LogStatus.INFO,"find add filter logic Link",YesNo.No);	
//								if(click(driver, ele, "add Filter Logic Button", action.BOOLEAN)) {
//
//									log(LogStatus.INFO,"clicked on add Filter Logic Button",YesNo.No);	
//									ThreadSleep(2000);
//
//
//									ele=cp.getFilterLogicInputBox(projectName, 10)	;
//									if(ele!=null) {
//										log(LogStatus.INFO,"find add filter logic text box",YesNo.No);	
//									}else {
//										log(LogStatus.FAIL,"Not able find add filter logic text box",YesNo.Yes);
//										sa.assertTrue(false, "Not able find add filter logic text box  ");
//									}
//
//
//
//									if (click(driver, cp.getInfoLink(projectName,10), "Info Link", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO,"click on Info Link",YesNo.No);
//										ThreadSleep(2000);
//										//										parenTiD = switchOnWindow(driver);
//										//
//										//										if (parenTiD!=null) {
//										//											log(LogStatus.INFO,"New Window is open",YesNo.No);
//										//											Xpath = "//h1//*[text()='Add Filter Logic']";
//										//											ele=isDisplayed(driver,FindElement(driver, Xpath, "Add filter logic Window", action.BOOLEAN,10), "Visibility", 10, "Add filter logic text box");
//										//											if(ele!=null) {
//										//												log(LogStatus.INFO,"Add Filter Logic Window is open",YesNo.No);	
//										//											}else {
//										//												log(LogStatus.FAIL,"Add Filter Logic Window is not open",YesNo.Yes);
//										//												sa.assertTrue(false, "Add Filter Logic Window is not open");
//										//											}
//										//											driver.close();
//										//											driver.switchTo().window(parenTiD);
//										//										} else {
//										//											log(LogStatus.FAIL,"No New Window is open on Clicking Info Link",YesNo.Yes);
//										//											sa.assertTrue(false, "No New Window is open on Clicking Info Link");
//										//										}
//									} else {
//										log(LogStatus.FAIL,"Not able to click on Info Link",YesNo.Yes);
//										sa.assertTrue(false, "Not able to click on Info Link");
//									}
//
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//									// 2 row added and Clear Filter Logic Functionality
//									for (int j = 0; j < 2; j++) {
//										if(click(driver, cp.getAddRowLink(projectName,10), "Add Row Link", action.BOOLEAN)) {
//											log(LogStatus.INFO,"Clicked on Add row link : "+j,YesNo.No);
//											ThreadSleep(2000);
//										}else {
//											log(LogStatus.FAIL,"Not able to click on Add row link "+j,YesNo.Yes);
//											sa.assertTrue(false,"Not able to click on Add row link "+j);
//										}
//									}
//
//									if (!cp.getRowRemoveIcon().isEmpty() && cp.getRowRemoveIcon().size()==2) {
//										log(LogStatus.PASS,"2 Row Added",YesNo.Yes);
//									}else {
//										log(LogStatus.FAIL,"2 Row Not Added",YesNo.Yes);
//										sa.assertTrue(false, "2 Row Not Added");	
//									}
//
//									if (click(driver, cp.clearApplyButtonOnAdvancedFilter(projectName, "clear",10), "Clear Btn", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO,"Click on Clear Button on Filter Logic",YesNo.No);
//
//
//										if (cp.getRowRemoveIcon1(projectName, 3)==null) {
//											log(LogStatus.PASS,"All New Added Row Removed after Click on Clear Button",YesNo.Yes);
//										} else {
//											log(LogStatus.FAIL,"All New Added Row Not Removed after Click on Clear Button",YesNo.Yes);
//											sa.assertTrue(false, "All New Added Row Not Removed after Click on Clear Button");
//										}
//
//
//									} else {
//										log(LogStatus.FAIL,"Not able to click on Clear Button on  Filter Logic",YesNo.Yes);
//										sa.assertTrue(false, "Not able to click on Clear Button on Filter Logic");
//									}
//
//
//								}else {
//									log(LogStatus.FAIL,"Not able to click on add filter logic ",YesNo.Yes);
//									sa.assertTrue(false, "Not able to click on add filter logic ");
//
//								}
//							}else {
//								log(LogStatus.FAIL,"Not able find add filter logic link ",YesNo.Yes);
//								sa.assertTrue(false, "Not able find add filter logic link ");
//
//							}
//
//							// FilteR Logic Check
//
//							for (int j = 0; j < 2; j++) {
//								if(click(driver, cp.getAddRowLink(projectName,10), "Add Row Link", action.BOOLEAN)) {
//									log(LogStatus.INFO,"For Filter Check Clicked on Add row link : "+j,YesNo.No);
//									ThreadSleep(2000);
//								}else {
//									log(LogStatus.FAIL,"For Filter Check Not able to click on Add row link "+j,YesNo.Yes);
//									sa.assertTrue(false,"For Filter Check Not able to click on Add row link "+j);
//								}
//							}
//
//							getSystemDate("");
//							String[][] fieldsOperatorValues= {{"Activity:Date","equals",todaysDate},
//									{"Activity:Priority","equals","High, Normal, Low"},
//									{"Activity:Subject","not equal to",""}};
//
//							for (int j = 0; j < fieldsOperatorValues.length; j++) {
//
//								field=fieldsOperatorValues[j][0];
//								operator=fieldsOperatorValues[j][1];
//								value=fieldsOperatorValues[j][2];
//								log(LogStatus.INFO,"Field : "+field+"\t Operator : "+operator+"\t Value : "+value,YesNo.No);
//								if (cp.setFieldValue(projectName, PageName.Object2Page, relatedTab, field, j+1)) {
//									log(LogStatus.INFO,"Field Set    : "+field,YesNo.No);
//
//									if (cp.setOperatorValue(projectName, PageName.Object2Page, relatedTab, operator, j+1)) {
//										log(LogStatus.INFO,"Opeartor Set : "+operator,YesNo.No);
//
//										if (cp.setCriterionValue(projectName, PageName.Object2Page, relatedTab, "", value, j+1)) {
//											log(LogStatus.INFO,"Value Set    : "+value,YesNo.No);
//										} else {
//											sa.assertTrue(false,"Not Able Set Value : "+value);
//											log(LogStatus.SKIP,"Not Able Set Value : "+value,YesNo.Yes);	
//											break;
//										}
//									} else {
//										sa.assertTrue(false,"Not Able Set Operator : "+operator);
//										log(LogStatus.SKIP,"Not Able Set Operator : "+operator,YesNo.Yes);
//										break;
//									}
//								} else {
//									sa.assertTrue(false,"Not Able Set Field : "+field);
//									log(LogStatus.SKIP,"Not Able Set Field : "+field,YesNo.Yes);
//									break;
//								}
//							}
//
//							ele=cp.getfilterLogicLink(projectName, 10);
//							if(click(driver, ele, "Add Filter Logic Link", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Click on add filter logic Link",YesNo.No);	
//
//								ele=cp.getFilterLogicInputBox(projectName, 10);
//								String filterLogicCondition = "(1 OR 2 ) OR 3";
//								if(sendKeys(driver, ele,filterLogicCondition, "filter logic text box", action.SCROLLANDBOOLEAN)) {
//									appLog.info("pass value in filter logic text box : "+filterLogicCondition);
//									if (click(driver, cp.clearApplyButtonOnAdvancedFilter(projectName, "Apply",10), "Clear Btn", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO,"Click on Apply Button on Filter Logic",YesNo.No);
//										ThreadSleep(5000);
//
//										ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Meetings, Smoke_LogACall1Subject, action.BOOLEAN, 10);
//										if (ele!=null) {
//											log(LogStatus.INFO,Smoke_LogACall1Subject+" link present after applying Filter on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);		
//										} else {
//											sa.assertTrue(false,Smoke_LogACall1Subject+" link not present after applying Filter on Sub Tab : "+RelatedTab.Meetings);
//											log(LogStatus.SKIP,Smoke_LogACall1Subject+" link not present after applying Filter on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//										}
//
//									}else {
//										log(LogStatus.FAIL,"Not able to click on Apply Button on  Filter Logic",YesNo.Yes);
//										sa.assertTrue(false, "Not able to click on Apply Button Filter Logic");	
//									}
//
//								}else {
//									appLog.error("Not able to pass value on  filter logic text box "+filterLogicCondition);
//									log(LogStatus.SKIP,"Not able to pass value on  filter logic text box "+filterLogicCondition,YesNo.Yes);
//								}
//							}else {
//								appLog.error("Not able to click on Filter logic link");
//								log(LogStatus.SKIP,"Not able to click on Filter logic link",YesNo.Yes);
//							}
//
//
//							 
//						}else {
//							sa.assertTrue(false,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab);
//							log(LogStatus.SKIP,"Not Able to Click on advanced filter toggle link on Sub Tab : "+relatedTab,YesNo.Yes);		
//						}
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName,YesNo.Yes);
//					}
//
//				}
//
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact  Not Found : "+contactName,YesNo.Yes);
//			}
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		 
//		lp.CRMlogout();
//		sa.assertAll();
//
//
//	}
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc056_VerifySearchActivitiesAttachmentSettings(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		Set<String> dropdownNames= new HashSet<String>();
//		dropdownNames.add("Owner");
//		dropdownNames.add("Type");
//		dropdownNames.add("Status");
//		int j=0;
//		String contactName = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		String subjectValue=Smoke_LogACall1Subject,priorityValue="Normal";
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO, "clicked on tab "+TabName.Object2Tab, YesNo.No);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 10)) {
//				log(LogStatus.INFO, "clicked on contact "+contactName, YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Meetings, 10), "related tab", action.BOOLEAN)) {
//					log(LogStatus.INFO, "clicked on tab "+RelatedTab.Meetings, YesNo.No);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					if(click(driver, cp.getadvancedFilterImg(projectName, 10), "advanced filter img", action.BOOLEAN)) {
//						log(LogStatus.INFO, "clicked on advanced filter ", YesNo.No);
//						for (int i=0;i<3;i++) {
//
//							if (click(driver, cp.getsearchActAttach(projectName,10), "search activities/attach", action.BOOLEAN)) {
//								Set<String> selectedoptions= new HashSet<String>();
//								List<WebElement> dropdowns=cp.getDropdownListOnSearchActivitiesAttachmentSettings(projectName, 10);
//								if (i==0) {
//									for (WebElement e:dropdowns) {
//										selectedoptions.add(getSelectedOptionOfDropDown(driver, e, "dropdown "+j, "text"));
//										j++;
//									}
//									if(dropdownNames.equals(selectedoptions)) {
//										log(LogStatus.INFO, dropdownNames+" successfully verified selected options of dropdowns "+selectedoptions, YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR,dropdownNames+" could not be verified with currently selected options of dropdowns "+selectedoptions , YesNo.Yes);
//										sa.assertTrue(false, dropdownNames+" could not be verified with currently selected options of dropdowns "+selectedoptions);
//										
//									}
//									if (ip.getCustomTabSaveBtn(projectName,10)!=null) {
//										log(LogStatus.INFO, " successfully verified save button", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "save button could not be verified", YesNo.Yes);
//										sa.assertTrue(false,  "save button could not be verified");
//									}
//									if (ip.getcancelForSearchActivitiesAttachment(projectName, 10)!=null) {
//										log(LogStatus.INFO, " successfully verified cancel button", YesNo.No);
//
//									}else {
//										log(LogStatus.ERROR, "cancel button could not be verified", YesNo.Yes);
//										sa.assertTrue(false,  "cancel button could not be verified");
//									}
//									if (click(driver, cp.getcrossIconForSearchActivitiesAttachment(projectName, 10), "cross icon", action.BOOLEAN)) {
//										log(LogStatus.INFO, " successfully clicked cross button", YesNo.No);
//									}else {
//										log(LogStatus.ERROR, "cross button could not be clicked", YesNo.Yes);
//										sa.assertTrue(false,  "cross button could not be clicked");
//									}
//									
//								}
//								else if(i==1) {
//									if (click(driver, cp.getcancelForSearchActivitiesAttachment(projectName, 10), "cancel", action.BOOLEAN)) {
//										log(LogStatus.INFO, " successfully clicked cancel button", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "cancel button could not be clicked", YesNo.Yes);
//										sa.assertTrue(false,  "cancel button could not be clicked");
//									}
//									
//								}
//								else {
//									//+ icon below type field
//									if (sendKeys(driver, cp.getTextBoxInSearchActAttachSettings(projectName, LeftRight.Left, 1, 10), 
//											PageLabel.Subject.toString(), "search textbox", action.SCROLLANDBOOLEAN)) {
//										log(LogStatus.INFO, "passed "+PageLabel.Subject.toString()+" in new field textbox", YesNo.No);
//										if (cp.selectSuggestionInTextboxInSearchActAttach(projectName, PageLabel.Subject.toString(), 10)) {
//											log(LogStatus.INFO, "successfully selected "+PageLabel.Subject.toString(), YesNo.No);
//										}
//										else {
//											log(LogStatus.ERROR, "could not select "+PageLabel.Subject.toString(),  YesNo.Yes);
//											sa.assertTrue(false,  "could not select "+PageLabel.Subject.toString());
//										}
//									}
//									else {
//										log(LogStatus.ERROR, "textbox for field adding is not visible", YesNo.Yes);
//										sa.assertTrue(false,  "textbox for field adding is not visible");
//									}
//									if (click(driver, cp.getPlusIconInSearchActAttach(projectName, LeftRight.Left, 1, 10), "plus icon below type", action.BOOLEAN)) {
//										if (sendKeys(driver, cp.getTextBoxInSearchActAttachSettings(projectName, LeftRight.Left, 2, 10), 
//												PageLabel.Priority.toString(), "search textbox", action.SCROLLANDBOOLEAN)) {
//											if (cp.selectSuggestionInTextboxInSearchActAttach(projectName, PageLabel.Priority.toString(), 10)) {
//												log(LogStatus.INFO, "successfully selected "+PageLabel.Priority.toString(), YesNo.No);
//											}
//											else {
//												log(LogStatus.ERROR, "could not select "+PageLabel.Priority.toString(),  YesNo.Yes);
//												sa.assertTrue(false,  "could not select "+PageLabel.Priority.toString());
//											}
//										}
//										else {
//											log(LogStatus.ERROR, "textbox for field adding is not visible", YesNo.Yes);
//											sa.assertTrue(false,  "textbox for field adding is not visible");
//										}
//									}
//									else {
//										log(LogStatus.ERROR, "+ icon not clickable so could not add priority", YesNo.Yes);
//										sa.assertTrue(false,  "+ icon not clickable so could not add priority");
//									}
//									clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,10),"save");
//								}
//							}
//							else {
//								log(LogStatus.ERROR, "search settings icon not clickable so could not add fields", YesNo.Yes);
//								sa.assertTrue(false,  "search settings icon not clickable so could not add fields");
//							}
//						}
//						if (sendKeys(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Subject.toString(), 10),
//								subjectValue, "subject on advanced filter", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "passed "+subjectValue+" in subject textbox", YesNo.No);
//
//							if (selectVisibleTextFromDropDown(driver, ip.getAdvancedFilteDropdowns(projectName, PageLabel.Priority.toString()
//									, 10), "priority dropdown", priorityValue)) {
//								log(LogStatus.INFO, "passed "+priorityValue+" in Priority Dropdowns", YesNo.No);
//								if (click(driver, cp.clearApplyButtonOnAdvancedFilter(projectName, "apply", 10), "apply", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO, "clicked apply button", YesNo.No);
//									ThreadSleep(5000);
//									WebElement ele=null;
//									ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Meetings, subjectValue, action.BOOLEAN, 10);
//									if (ele!=null) {
//										log(LogStatus.INFO,subjectValue+" successfully verified after applying Filter on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);		
//									} else {
//										sa.assertTrue(false,subjectValue+" link not present after applying Filter on Sub Tab : "+RelatedTab.Meetings);
//										log(LogStatus.SKIP,subjectValue+" link not present after applying Filter on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//									}
//
//								}else {
//									log(LogStatus.ERROR, "apply button not clickable", YesNo.Yes);
//									sa.assertTrue(false,  "apply button not clickable");
//								}
//							}else {
//								log(LogStatus.ERROR, "subject textbox not visible onadvanced filter", YesNo.Yes);
//								sa.assertTrue(false,  "subject textbox not visible onadvanced filter");
//							}
//						}else {
//							log(LogStatus.ERROR, "priority dropdpown not visible onadvanced filter", YesNo.Yes);
//							sa.assertTrue(false,  "priority dropdpown not visible onadvanced filter");
//						}
//					}
//					else {
//						log(LogStatus.ERROR, "advanced filter icon not clickable so could not add fields", YesNo.Yes);
//						sa.assertTrue(false,  "advanced filter icon not clickable so could not add fields");
//					}
//				}
//				else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not found contact 3 name : "+contactName,YesNo.Yes);
//				sa.assertTrue(false,"not found contact 3 name : "+contactName);
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "contact tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "contact tab not clickable");
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc057_VerifySearchActivitiesAttachmentRevertToDefault(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		Set<String> dropdownNames= new HashSet<String>();
//		dropdownNames.add("Owner");
//		dropdownNames.add("Type");
//		dropdownNames.add("Status");
//		String contactName = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO, "clicked on tab "+TabName.Object2Tab, YesNo.No);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab,contactName, 10)) {
//				log(LogStatus.INFO, "clicked on contact "+contactName, YesNo.No);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Meetings, 10), "related tab", action.BOOLEAN)) {
//					log(LogStatus.INFO, "clicked on tab "+RelatedTab.Meetings, YesNo.No);
//					switchToFrame(driver, 10, ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					if(click(driver, cp.getadvancedFilterImg(projectName, 10), "advanced filter img", action.BOOLEAN)) {
//						log(LogStatus.INFO, "clicked on advanced filter ", YesNo.No);
//						if (click(driver, cp.getsearchActAttach(projectName,10), "search activities/attach", action.BOOLEAN)) {
//							scrollDownThroughWebelement(driver, cp.revertToDefaultsSearchActivitiesAttachment(projectName, 
//									EnableDisable.Enable, 10), "revert to default button");
//							if (cp.revertToDefaultsSearchActivitiesAttachment(projectName, EnableDisable.Enable, 10)!=null) {
//								log(LogStatus.INFO, "successfully verified revert to default button", YesNo.No);
//								
//							}else {
//								log(LogStatus.ERROR, "could not verified revert to default button", YesNo.Yes);
//								sa.assertTrue(false, "could not verified revert to default button");
//							}
//							if (click(driver, cp.getCrossIconOfTextboxInSearchActivitiesAttachment(projectName, LeftRight.Left
//									, 2, 10), "cross icon beside textbox", action.SCROLLANDBOOLEAN)) {
//								if (click(driver, cp.revertToDefaultsSearchActivitiesAttachment(projectName, EnableDisable.Enable,
//										10), "revert to default", action.SCROLLANDBOOLEAN)) {
//									if (cp.getWarningPopupSearchActivitiesAttachmentYesOrNo(projectName, YesNo.No, 10)!=null) {
//										log(LogStatus.INFO, "successfully verified revert to default yes button", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR, "could not verified revert to default yes button", YesNo.Yes);
//										sa.assertTrue(false, "could not verified revert to default yes button");
//									}
//									if (cp.getWarningPopupSearchActivitiesAttachmentYesOrNo(projectName, YesNo.Yes, 10)!=null) {
//										log(LogStatus.INFO, "successfully verified revert to default no button", YesNo.No);
//
//									}else {
//										log(LogStatus.ERROR, "could not verified revert to default no button", YesNo.Yes);
//										sa.assertTrue(false, "could not verified revert to default no button");
//									}
//									if (cp.getrevertToDefaultErrorPopup(projectName, 10)!=null) {
//										if (cp.getrevertToDefaultErrorPopup(projectName,10).getText().trim().contains(BasePageErrorMessage.revertToDefaultError1) &&
//												cp.getrevertToDefaultErrorPopup(projectName,10).getText().trim().contains(BasePageErrorMessage.revertToDefaultError2)) {
//											log(LogStatus.INFO, "successfully verified revert to default error message", YesNo.No);
//										}
//										else {
//											log(LogStatus.ERROR, "could not verified revert to default error message", YesNo.Yes);
//											sa.assertTrue(false, "could not verified revert to default error message");
//
//										}
//									}else {
//										log(LogStatus.ERROR, "not present revert to default error message", YesNo.Yes);
//										sa.assertTrue(false, "not present revert to default error message");
//
//									}
//									if (click(driver, cp.revertToDefaultsSearchActivitiesAttachment(projectName, EnableDisable.Enable, 
//											10), "revert to default", action.SCROLLANDBOOLEAN)) {
//										if (click(driver, cp.getWarningPopupSearchActivitiesAttachmentYesOrNo(projectName, YesNo.No, 10), "n", action.BOOLEAN)) {
//											log(LogStatus.INFO, "successfully clicked revert to default yes button", YesNo.No);
//
//										}else {
//											log(LogStatus.ERROR, "could not click revert to default error message", YesNo.Yes);
//											sa.assertTrue(false, "could not click revert to default error message");
//
//										}
//									}
//									else {
//										log(LogStatus.ERROR, "could not click revert to default button", YesNo.Yes);
//										sa.assertTrue(false, "could not click revert to default button");
//
//									}
//								}
//								else {
//									log(LogStatus.ERROR, "could not click revert to default button", YesNo.Yes);
//									sa.assertTrue(false, "could not click revert to default button");
//
//								}
//							}else {
//								log(LogStatus.ERROR, "could not click cross icon in front of priority dropdown", YesNo.Yes);
//								sa.assertTrue(false, "could not click cross icon in front of priority dropdown");
//
//							}
//							if (click(driver, cp.revertToDefaultsSearchActivitiesAttachment(projectName, EnableDisable.Enable, 
//									10), "revert to default", action.SCROLLANDBOOLEAN)) {
//								if (click(driver, cp.getWarningPopupSearchActivitiesAttachmentYesOrNo(projectName, YesNo.No, 10), "no", action.BOOLEAN)) {
//									log(LogStatus.INFO, "successfully clicked revert to default yes button", YesNo.No);
//
//								}else {
//									log(LogStatus.ERROR, "could not click revert to default error message", YesNo.Yes);
//									sa.assertTrue(false, "could not click revert to default error message");
//
//								}
//							}
//							else {
//								log(LogStatus.ERROR, "could not click revert to default button", YesNo.Yes);
//								sa.assertTrue(false, "could not click revert to default button");
//
//							}
//							if (click(driver, cp.revertToDefaultsSearchActivitiesAttachment(projectName, EnableDisable.Enable, 
//									10), "revert to default", action.SCROLLANDBOOLEAN)) {
//								if (click(driver, cp.getWarningPopupSearchActivitiesAttachmentYesOrNo(projectName, YesNo.Yes, 10), "yes", action.BOOLEAN)) {
//									log(LogStatus.INFO, "successfully clicked revert to default yes button", YesNo.No);
//										
//								}else {
//									log(LogStatus.ERROR, "could not click revert to default error message", YesNo.Yes);
//									sa.assertTrue(false, "could not click revert to default error message");
//										
//								}
//							}
//							else {
//								log(LogStatus.ERROR, "could not click revert to default button", YesNo.Yes);
//								sa.assertTrue(false, "could not click revert to default button");
//									
//							}
//							//verify absence of subject and priority
//							scrollDownThroughWebelement(driver, cp.getAdvancedFilteDropdowns(projectName, PageLabel.Owner.toString(),10), "advanced filter page");
//							if (cp.getAdvancedFilteDropdowns(projectName, PageLabel.Subject.toString(), 5)==null) {
//								log(LogStatus.INFO, "successfully verified absence of Subject textbox", YesNo.No);
//								
//							}else {
//								log(LogStatus.ERROR, "Subject textbox is present, but it should not be", YesNo.Yes);
//								sa.assertTrue(false, "Subject textbox is present, but it should not be");
//									
//							}
//							if (cp.getAdvancedFilteDropdowns(projectName, PageLabel.Priority.toString(), 5)==null) {
//								log(LogStatus.INFO, "successfully verified absence of Priority Dropdowns", YesNo.No);
//									
//							}else {
//								log(LogStatus.ERROR, "Priority Dropdowns is present, but it should not be", YesNo.Yes);
//								sa.assertTrue(false, "Priority Dropdowns is present, but it should not be");
//									
//							}
//						}else {
//							log(LogStatus.ERROR, "could not click search activities settings icon", YesNo.Yes);
//							sa.assertTrue(false, "could not click search activities settings icon");
//								
//						}
//					}else {
//						log(LogStatus.ERROR, "could not click advanced filter img", YesNo.Yes);
//						sa.assertTrue(false, "could not click advanced filter img");
//					}
//				}
//				else {
//					log(LogStatus.ERROR, "activities related tab not clickable",YesNo.Yes);
//					sa.assertTrue(false, "activities related tab not clickable");
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not found contact 3 name : "+contactName,YesNo.Yes);
//				sa.assertTrue(false,"not found contact 3 name : "+contactName);
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "contact tab not clickable",YesNo.Yes);
//			sa.assertTrue(false, "contact tab not clickable");
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	
//	
//	////////////////////////////////////// Azhar /////////////////////////////////////
//	
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc058_MakeAllowUsersToRelateMultipleContactsToTasksandEventsSettingON(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		SetupPageBusinessLayer setup=new SetupPageBusinessLayer(driver);
//		HomePageBusineesLayer home=new HomePageBusineesLayer(driver);
//		NavatarSetupPageBusinessLayer nsp = new NavatarSetupPageBusinessLayer(driver);
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		String parentID=null;
//		//lp.switchToClassic();
//		String mode="Lightning";
//		if (home.clickOnSetUpLink()) {
//			parentID=switchOnWindow(driver);
//			if (parentID!=null) {
//				log(LogStatus.INFO, "New Window is Open",YesNo.Yes);
//				if(setup.searchStandardOrCustomObject("", mode, object.Activity_Setting)) {
//					log(LogStatus.INFO, "Able to Search/Click on "+object.Activity_Setting,YesNo.No);	
//					ThreadSleep(30000);
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 10, setup.getEditPageLayoutFrame_Lighting(10));
//
//					String checkBox = NavatarSetUpPageErrorMessage.RollUpActivitiesToContactPrimaryAccount;
//					if (isSelected(driver,nsp.getRollUpActivitiesToContactPrimaryAccountCheckBox(projectName, 10),"CheckBox For : "+checkBox)) {
//						appLog.info("checkBox is already Checked  : "+checkBox);
//						log(LogStatus.INFO,"checkBox is already Checked  : "+checkBox,YesNo.No);
//					} else {
//
//						log(LogStatus.INFO,"Going to Check CheckBox For : "+checkBox,YesNo.No);
//
//
//						if (click(driver,nsp.getRollUpActivitiesToContactPrimaryAccountCheckBox(projectName, 10),"CheckBox For : "+checkBox, action.BOOLEAN)) {
//							appLog.error("Clicked on checkBox:  "+checkBox);
//						} else {
//							appLog.error("Not Able to Click on Checkbox : "+checkBox);
//							sa.assertTrue(false, "Not Able to Click on Checkbox : "+checkBox);
//							log(LogStatus.FAIL, "Not Able to Click on Checkbox : "+checkBox,YesNo.Yes);
//						}
//					}
//
//					/////////////////
//					checkBox = NavatarSetUpPageErrorMessage.RelateMultipleContactsToTaskAndEventsMsg;
//					if (nsp.getRelateMultipleContactsToTaskAndEventFeatureEnabled(projectName, 10)!=null) {
//						appLog.info(checkBox+" already Enabled");	
//						log(LogStatus.SKIP, checkBox+" already Enabled", YesNo.Yes);
//					} else {
//						log(LogStatus.INFO, "Going to Enabled : "+checkBox, YesNo.No);
//
//						if (click(driver,nsp.getRelateMultipleContactsToTaskAndEventCheckBox(projectName, 10),"CheckBox For : "+checkBox, action.BOOLEAN)) {
//							appLog.error("Clicked on checkBox:  "+checkBox);
//							ThreadSleep(2000);
//
//
//
//						} else {
//							appLog.error("Not Able to Click on Checkbox : "+checkBox);
//							sa.assertTrue(false, "Not Able to Click on Checkbox : "+checkBox);
//							log(LogStatus.FAIL, "Not Able to Click on Checkbox : "+checkBox,YesNo.Yes);
//						}
//
//
//
//					}
//
//
//
//					if (click(driver,nsp.getSubmitBtn(projectName, 10),"CheckBox For : "+checkBox, action.BOOLEAN)) {
//						appLog.error("Clicked on Submit Btn");
//						ThreadSleep(5000);
//
//						refresh(driver);
//						switchToDefaultContent(driver);
//						//////////////////
//
//
//						if(setup.searchStandardOrCustomObject("", mode, object.Activity_Setting)) {
//							log(LogStatus.INFO, "Able to Search/Click on "+object.Activity_Setting,YesNo.No);	
//							switchToDefaultContent(driver);
//							ThreadSleep(5000);
//							switchToFrame(driver, 10, setup.getEditPageLayoutFrame_Lighting(10));
//							if (nsp.getRelateMultipleContactsToTaskAndEventFeatureEnabled(projectName, 10)!=null) {
//								appLog.info("Checked checkBox : "+checkBox);
//							} else {
//								appLog.error("CheckBox is Not Checked : "+checkBox);
//								sa.assertTrue(false,"CheckBox is Not Checked : "+checkBox);
//								log(LogStatus.FAIL,"CheckBox is Not Checked : "+checkBox,YesNo.Yes);
//							}
//
//
//						}else {
//							log(LogStatus.ERROR, "Not Able to Search/Click on "+object.Activity_Setting,YesNo.Yes);
//							sa.assertTrue(false, "Not Able to Search/Click on "+object.Activity_Setting);	
//						}
//
//
//
//					} else {
//						appLog.error("Not Able to Click on Submit Btn");
//						sa.assertTrue(false, "Not Able to Click on Submit Btn");
//						log(LogStatus.FAIL, "Not Able to Click on Submit Btn",YesNo.Yes);
//					}
//
//
//					///////////////////
//				}else {
//					log(LogStatus.ERROR, "Not Able to Search/Click on "+object.Activity_Setting,YesNo.Yes);
//					sa.assertTrue(false, "Not Able to Search/Click on "+object.Activity_Setting);	
//				}
//				driver.close();
//				driver.switchTo().window(parentID);
//			}else {
//				log(LogStatus.ERROR, "No New Window is Open",YesNo.Yes);
//				sa.assertTrue(false, "No New Window is Open");
//			}
//		
//		}else {
//			log(LogStatus.ERROR, "Not Able to click on Setup",YesNo.Yes);
//			sa.assertTrue(false, "Not Able to click on Setup");	
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc059_VerifyTaskDetailPageAfterEnablingSetting(String projectName) {
//
//
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);WebElement ele ;
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contactName = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		String owner = AdminUserFirstName+" "+AdminUserLastName;
//		RelatedTab[] relatabTabs = {RelatedTab.Activities};
//		String task1 = Smoke_Task2UpdatedSubject;
//		String actualValue="";
//		String expectedValue="";
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//					//	 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, relatedTab, task1, action.BOOLEAN, 10);
//						if (ele!=null) {
//							log(LogStatus.INFO,task1+" link present after applying Filter on Sub Tab : "+relatedTab,YesNo.Yes);		
//
//							if (click(driver, ele, task1, action.BOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on : "+task1,YesNo.No);
//								String parentID = switchOnWindow(driver);
//								if (parentID!=null) {
//									log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+task1,YesNo.Yes);
//									ThreadSleep(1000);
//									ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, task1, action.BOOLEAN, 10);
//									if (ele!=null) {
//										log(LogStatus.INFO,"Landing Page Verified for : "+task1,YesNo.No);	
//									} else {
//										sa.assertTrue(false,"Landing Page Not Verified for : "+task1);
//										log(LogStatus.SKIP,"Landing Page Not Verified for : "+task1,YesNo.Yes);
//									}
//
//
//									String[][] fieldsWithValues= {{PageLabel.Assigned_To.toString(),owner},
//											{PageLabel.Status.toString(),Smoke_Task2Status},	
//											{PageLabel.Subject.toString(),task1},
//											{PageLabel.Name.toString(),contactName},
//											{PageLabel.Due_Date.toString(),Smoke_Task2DueDate},
//											{PageLabel.Related_To.toString(),""},
//											{PageLabel.Meeting_Type.toString(),""},
//											{PageLabel.Priority.toString(),Smoke_Task2UpdatedPriority}};
//
//									tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);
//									
//									// Related Association
//									expectedValue=taskCustomObj2Name;
//									ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), action.BOOLEAN, 10);
//									if (ele!=null) {
//										actualValue = ele.getText().trim();
//										log(LogStatus.INFO,"Actual Value For Related Association Link : "+actualValue, YesNo.No);
//								
//										if (actualValue.equals(expectedValue)) {
//											log(LogStatus.INFO,expectedValue+" matched FOR Related Association Label For : "+task1, YesNo.No);
//
//										} else {
//											log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Related Association Label For : "+task1, YesNo.Yes);
//											BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Related Association Label For : "+task1);
//										}
//
//
//									} else {
//										sa.assertTrue(false,"Related Associations Label Ele not Found For : "+task1);
//										log(LogStatus.SKIP,"Related Associations Label Ele not Found For : "+task1,YesNo.Yes);
//
//									}
//
//									// Comment
//									ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Comments.toString(), action.BOOLEAN, 10);
//									if (ele!=null) {
//										actualValue = ele.getText().trim();
//										log(LogStatus.INFO,"Actual Value For Comment : "+actualValue, YesNo.No);
//										String[] commentValue = {expectedValue,TaskPagePageErrorMessage.Dots,Smoke_Task2Comment};
//										String realtedAssciationValue = tp.Comment(projectName, PageLabel.Related_Associations, taskCustomObj2Name);
//										String comment = realtedAssciationValue+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_Task2Comment;
//										if (actualValue.equals(comment)) {
//											log(LogStatus.INFO,comment+" matched for Comment Label For : "+task1, YesNo.No);
//
//										} else {
//											log(LogStatus.ERROR,"Actual : \n"+actualValue+" Expected : \n"+comment+" not matched for Comment Label For : "+task1, YesNo.Yes);
//											BaseLib.sa.assertTrue(false, "Actual : \n"+actualValue+" Expected : \n"+comment+" not matched for Comment Label For : "+task1);
//										}
//									} else {
//										sa.assertTrue(false,"Comment Label Ele not Found For : "+task1);
//										log(LogStatus.SKIP,"Comment Label Ele not Found For : "+task1,YesNo.Yes);
//									}
//
//									if (tp.isRelatedContactEmpty(projectName, 10)) {
//										log(LogStatus.SKIP,"Related Contact Field Verified is empty For : "+task1,YesNo.No);	
//									} else {
//										sa.assertTrue(false,"Related Contact Field Not Verified and shoud be empty For : "+task1);
//										log(LogStatus.SKIP,"Related Contact Field Not Verified and shoud be empty For : "+task1,YesNo.Yes);
//									}
//									
//									driver.close();
//									driver.switchTo().window(parentID);
//
//
//								} else {
//									sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+task1);
//									log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+task1,YesNo.Yes);
//								}
//
//							} else {
//								sa.assertTrue(false,"Not Able to Click on : "+task1);
//								log(LogStatus.SKIP,"Not Able to Click on : "+task1,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,task1+" link not present on Sub Tab : "+relatedTab);
//							log(LogStatus.SKIP,task1+" link not present on Sub Tab : "+relatedTab,YesNo.Yes);
//						}
//
//
//
//
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName,YesNo.Yes);
//					}
//
//				}
//
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact  Not Found : "+contactName,YesNo.Yes);
//			}
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		String entity=Smoke_MTINS1Name;
//		contactName = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		List<String> dueDeliganceMeetingValues=new LinkedList<String>();
//		dueDeliganceMeetingValues.add(contactName);
//		dueDeliganceMeetingValues.add(Smoke_MTINS1Name+" +"+2);
//		dueDeliganceMeetingValues.add(Status.Completed.toString());
//		dueDeliganceMeetingValues.add(owner);
//		dueDeliganceMeetingValues.add(Smoke_LogACall1MeetingType);
//		dueDeliganceMeetingValues.add(Activity.Call.toString());
//		dueDeliganceMeetingValues.add(Links.View.toString());	
//		switchToDefaultContent(driver);
//		if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, entity, 20)) {
//				log(LogStatus.INFO,"Clicked on Entity/Account : "+entity,YesNo.No);
//				ThreadSleep(1000);
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Meetings, 20), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//						ThreadSleep(10000);
//						 
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//						ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Meetings, Smoke_LogACall1Date, Smoke_LogACall1Subject, dueDeliganceMeetingValues, action.SCROLLANDBOOLEAN, 10);	
//					
//						task1=Smoke_LogACall1Subject;
//						
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Meetings, task1, action.SCROLLANDBOOLEAN, 10);
//						if (ele!=null) {
//							log(LogStatus.INFO,task1+" link present after applying Filter on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);		
//
//							if (click(driver, ele, task1, action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on : "+task1,YesNo.No);
//								String parentID = switchOnWindow(driver);
//								if (parentID!=null) {
//									log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+task1,YesNo.Yes);
//									ThreadSleep(1000);
//									ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, task1, action.BOOLEAN, 10);
//									if (ele!=null) {
//										log(LogStatus.INFO,"Landing Page Verified for : "+task1,YesNo.No);	
//									} else {
//										sa.assertTrue(false,"Landing Page Not Verified for : "+task1);
//										log(LogStatus.SKIP,"Landing Page Not Verified for : "+task1,YesNo.Yes);
//									}
//
//
//									String[][] fieldsWithValues= {{PageLabel.Assigned_To.toString(),owner},
//											{PageLabel.Status.toString(),Status.Completed.toString()},	
//											{PageLabel.Subject.toString(),task1},
//											{PageLabel.Name.toString(),contactName},
//											{PageLabel.Due_Date.toString(),Smoke_LogACall1Date},
//											{PageLabel.Related_To.toString(),""},
//											{PageLabel.Meeting_Type.toString(),Smoke_LogACall1MeetingType},
//											{PageLabel.Priority.toString(),Priority.Normal.toString()}};
//
//									tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);
//
//									
//								
//									
//									// Related Association
//									expectedValue=Smoke_MTINS1Name+", "+Smoke_MTFund1Name+", "+meetingCustomObj1Name;
//									ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), action.BOOLEAN, 10);
//									if (ele!=null) {
//										actualValue = ele.getText().trim();
//										log(LogStatus.INFO,"Actual Value For Related Association Link : "+actualValue, YesNo.No);
//								
//										if (actualValue.equals(expectedValue)) {
//											log(LogStatus.INFO,expectedValue+" matched FOR Related Association Label", YesNo.No);
//
//										} else {
//											log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Related Association Label", YesNo.Yes);
//											BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Related Association LABEL");
//										}
//
//
//									} else {
//										sa.assertTrue(false,"Related Associations Label Ele not Found");
//										log(LogStatus.SKIP,"Related Associations Label Ele not Found",YesNo.Yes);
//
//									}
//
//									// Comment
//									ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Comments.toString(), action.BOOLEAN, 10);
//									if (ele!=null) {
//										actualValue = ele.getText().trim();
//										log(LogStatus.INFO,"Actual Value For Comment : "+actualValue, YesNo.No);
//											String realtedAssciationValue = tp.Comment(projectName, PageLabel.Related_Associations, expectedValue);
//											String comment = realtedAssciationValue+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_LogACall1Comment;
//											if (actualValue.equals(comment)) {
//												log(LogStatus.INFO,comment+" matched for Comment Label", YesNo.No);
//
//											} else {
//												log(LogStatus.ERROR,"Actual : \n"+actualValue+" Expected : \n"+comment+" not matched for Comment Label", YesNo.Yes);
//												BaseLib.sa.assertTrue(false, "Actual : \n"+actualValue+" Expected : \n"+comment+" not matched for Comment Label");
//											}
//									} else {
//										sa.assertTrue(false,"Comment Label Ele not Found");
//										log(LogStatus.SKIP,"Comment Label Ele not Found",YesNo.Yes);
//									}
//
//									if (tp.isRelatedContactEmpty(projectName, 10)) {
//										log(LogStatus.SKIP,"Related Contact Field Verified is empty For : "+task1,YesNo.No);	
//									} else {
//										sa.assertTrue(false,"Related Contact Field Not Verified and shoud be empty For : "+task1);
//										log(LogStatus.SKIP,"Related Contact Field Not Verified and shoud be empty For : "+task1,YesNo.Yes);
//									}
//									
//									driver.close();
//									driver.switchTo().window(parentID);
//
//								} else {
//									sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+task1);
//									log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+task1,YesNo.Yes);
//								}
//
//							} else {
//								sa.assertTrue(false,"Not Able to Click on : "+task1);
//								log(LogStatus.SKIP,"Not Able to Click on : "+task1,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,task1+" link not present after applying Filter on Sub Tab : "+RelatedTab.Meetings);
//							log(LogStatus.SKIP,task1+" link not present after applying Filter on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//						}
//						
//					
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//					}
//					
//			} else {
//				sa.assertTrue(false,"Account/Entity Not Found : "+entity);
//				log(LogStatus.SKIP,"Account/Entity  Not Found : "+entity,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//		}
//		
//		
//		switchToDefaultContent(driver);
//		 
//		lp.CRMlogout();
//		sa.assertAll();
//
//
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc060_VerifyEditingAlreadySavedTaskAftermakingSetting(String projectName) {
//
//
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);WebElement ele ;
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		String contactName = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		String relatedContact=Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		RelatedTab[] relatabTabs = {RelatedTab.Activities};
//		String task1 = Smoke_Task2UpdatedSubject;
//		String actualValue="";
//		String expectedValue="";
//		boolean flag=false;
//		String parentID="";
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatabTabs) {
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//						ThreadSleep(10000);
//
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, relatedTab, task1, action.BOOLEAN, 10);
//						if (ele!=null) {
//							log(LogStatus.INFO,task1+" link present after applying Filter on Sub Tab : "+relatedTab,YesNo.Yes);		
//
//							if (click(driver, ele, task1, action.BOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on : "+task1,YesNo.No);
//								parentID = switchOnWindow(driver);
//								if (parentID!=null) {
//									log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+task1,YesNo.Yes);
//									ThreadSleep(1000);
//									ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, task1, action.BOOLEAN, 10);
//									if (ele!=null) {
//										log(LogStatus.INFO,"Landing Page Verified for : "+task1,YesNo.No);	
//									} else {
//										sa.assertTrue(false,"Landing Page Not Verified for : "+task1);
//										log(LogStatus.SKIP,"Landing Page Not Verified for : "+task1,YesNo.Yes);
//									}
//									if (click(driver, cp.getEditButton(projectName, 10), "Edit Button", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Clicked on Edit Button For : "+task1,YesNo.No);		
//
//										ele = tp.getTaskPoUpEditHeader(projectName, 10);
//										if (ele!=null) {
//											log(LogStatus.INFO,"Edit Header Ele Found",YesNo.No);	
//											actualValue=ele.getText().trim();
//											expectedValue=PageLabel.Edit.toString()+" "+task1;
//											if (actualValue.contains(PageLabel.Edit.toString())) {
//												log(LogStatus.INFO,expectedValue+" matched msg for Edit PopUp", YesNo.No);
//
//											} else {
//												log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched msg for Edit PopUp", YesNo.Yes);
//												BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched msg for Edit PopUp");
//											}
//
//										} else {
//											sa.assertTrue(false,"Edit Header Ele Not Found");
//											log(LogStatus.SKIP,"Edit Header Ele Not Found",YesNo.Yes);
//										}
//
//										ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Name.toString(),true, contactName, action.SCROLLANDBOOLEAN, 15);
//										if (ele!=null) {
//											log(LogStatus.INFO, contactName+" Found For Label "+PageLabel.Name.toString(),YesNo.No);	
//
//
//										} else {
//											sa.assertTrue(false,contactName+" not Found For Label "+PageLabel.Name.toString());
//											log(LogStatus.ERROR, contactName+" not Found For Label "+PageLabel.Name.toString(),YesNo.Yes);
//
//										}
//
//										flag = cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), TabName.TaskTab, relatedContact, action.SCROLLANDBOOLEAN, 10);		
//										if (flag) {
//											log(LogStatus.SKIP,"Selected "+relatedContact+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.TaskTab)+" For Label "+PageLabel.Name,YesNo.No);
//
//											ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Name.toString(),true, relatedContact, action.SCROLLANDBOOLEAN, 15);
//											if (ele!=null) {
//												log(LogStatus.INFO, relatedContact+" Found For Label "+PageLabel.Name.toString(),YesNo.No);	
//											} else {
//												sa.assertTrue(false,relatedContact+" not Found For Label "+PageLabel.Name.toString());
//												log(LogStatus.ERROR, relatedContact+" not Found For Label "+PageLabel.Name.toString(),YesNo.Yes);
//
//											}
//
//											flag=clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName, 10), "Save Button", action.SCROLLANDBOOLEAN);
//											if (flag) {
//												log(LogStatus.INFO,"Clicked on Save Button",YesNo.No);
//
//												ele = cp.getAnyMsg(projectName, tp.taskSavedMsg(projectName, task1), 20);
//												if (ele!=null) {
//													log(LogStatus.SKIP,"Saved Task Msg Ele Found and Verified",YesNo.No);
//
//												} else {
//													sa.assertTrue(false,"Saved Task Msg Ele not Found");
//													log(LogStatus.SKIP,"Saved Task Msg Ele not Found",YesNo.Yes);
//
//												}
//												
//												ThreadSleep(5000);
//
//											}else {
//												sa.assertTrue(false,"Not Able to Click on Save Button");
//												log(LogStatus.SKIP,"Not Able to Click on Save Button",YesNo.Yes);
//
//											}
//
//										} else {
//											sa.assertTrue(false,"Not Able to Select "+relatedContact+" For Label "+PageLabel.Name);
//											log(LogStatus.SKIP,"Not Able to Select "+relatedContact+" For Label "+PageLabel.Name,YesNo.Yes);
//
//										}
//
//									} else {
//										sa.assertTrue(false,"Not Able to Click on Edit Button : "+task1);
//										log(LogStatus.SKIP,"Not Able to Click on Edit Button : "+task1,YesNo.Yes);
//									}
//
//								} else {
//									sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+task1);
//									log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+task1,YesNo.Yes);
//								}
//
//							} else {
//								sa.assertTrue(false,"Not Able to Click on : "+task1);
//								log(LogStatus.SKIP,"Not Able to Click on : "+task1,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,task1+" link not present after applying Filter on Sub Tab : "+relatedTab);
//							log(LogStatus.SKIP,task1+" link not present after applying Filter on Sub Tab : "+relatedTab,YesNo.Yes);
//						}
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName,YesNo.Yes);
//					}
//
//				}
//
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact  Not Found : "+contactName,YesNo.Yes);
//			}
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//
//		if (flag) {
//			ThreadSleep(2000);
//			refresh(driver);
//			ThreadSleep(5000);
//			String[][] fieldsWithValues= {
//					{PageLabel.Subject.toString(),task1},
//					{PageLabel.Name.toString(),contactName+"\n + "+1},
//					{PageLabel.Related_Contacts.toString(),relatedContact}};
//
//			tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);
//
//			// Related Association
//			expectedValue=taskCustomObj2Name;
//			ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), action.BOOLEAN, 10);
//			if (ele!=null) {
//				actualValue = ele.getText().trim();
//				log(LogStatus.INFO,"Actual Value For Related Association Link : "+actualValue, YesNo.No);
//
//				if (actualValue.equals(expectedValue)) {
//					log(LogStatus.INFO,expectedValue+" matched FOR Related Association Label", YesNo.No);
//
//				} else {
//					log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Related Association Label", YesNo.Yes);
//					BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Related Association LABEL");
//				}
//
//
//			} else {
//				sa.assertTrue(false,"Comment Label Ele not Found");
//				log(LogStatus.SKIP,"Comment Label Ele not Found",YesNo.Yes);
//
//			}
//
//			// Comment
//			expectedValue=taskCustomObj2Name;
//			ele = tp.getLabelForTaskInViewMode(projectName, PageName.TaskPage, PageLabel.Comments.toString(), action.BOOLEAN, 10);
//			if (ele!=null) {
//				actualValue = ele.getText().trim();
//				log(LogStatus.INFO,"Actual Value For Comment : \n"+actualValue, YesNo.No);
//				String relatedContactValue= tp.Comment(projectName, PageLabel.Related_Contacts, relatedContact);
//				String realtedAssciationValue = tp.Comment(projectName, PageLabel.Related_Associations, expectedValue);
//				String comment = relatedContactValue+"\n"+realtedAssciationValue+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_Task2Comment;
//				if (actualValue.equals(comment)) {
//					log(LogStatus.INFO,comment+" matched for Comment Label", YesNo.No);
//
//				} else {
//					log(LogStatus.ERROR,"Actual : \n"+actualValue+" Expected : \n"+comment+" not matched for Comment Label", YesNo.Yes);
//					BaseLib.sa.assertTrue(false, "Actual : \n"+actualValue+" Expected : \n"+comment+" not matched for Comment Label");
//				}
//
//			} else {
//				sa.assertTrue(false,"Comment Label Ele not Found");
//				log(LogStatus.SKIP,"Comment Label Ele not Found",YesNo.Yes);
//			}
//
//			driver.close();
//			driver.switchTo().window(parentID);
//			switchToDefaultContent(driver);
//			refresh(driver);
//
//
//			if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//				log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//				ThreadSleep(10000);
//
//
//				List<String> task1Values=new LinkedList<String>();
//				task1Values.add(contactName+" +"+1);
//				task1Values.add(taskCustomObj2Name);
//				task1Values.add(Smoke_Task2Status);
//				task1Values.add(AdminUserFirstName+" "+AdminUserLastName);
//				task1Values.add("");
//				task1Values.add(Activity.Task.toString());
//				task1Values.add(Links.View.toString());	
//
//				switchToDefaultContent(driver);
//				switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,30));
//				ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_Task2DueDate, Smoke_Task2UpdatedSubject, task1Values, action.SCROLLANDBOOLEAN, 10);	
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//				log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//			}
//
//		}
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//
//
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc061_1_CreateStandardTaskAfterEnablingSetting(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact4Name = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		String contact1Name = Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		String meetingCustomObject1=taskCustomObj1Name;
//		String[] contacts = {contact4Name,contact1Name};
//		boolean flag = false;
//		String actualValue="";
//		String expectedValue="";
//		String date=todaysDate;
//		ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask14", excelLabel.Due_Date);
//		
//		WebElement ele ; 
//		if (cp.clickOnTab(projectName, TabName.TaskTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TaskTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnShowMoreActionDownArrow(projectName, PageName.TaskPage, ShowMoreActionDropDownList.New_Task, 15)) {
//				log(LogStatus.INFO,"Clicked on New Task Button for show more action",YesNo.No);
//				ThreadSleep(1000);
//
//				ele = cp.getHeaderTextForPage(projectName, PageName.NewTaskPopUP,PageLabel.New_Task.toString(), action.BOOLEAN, 10);
//				if (ele!=null) {
//					log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//				} else {
//					sa.assertTrue(false,"New Task PopUp is not opened");
//					log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//				}
//
//				ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TaskPage, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN,5);
//
//				if (ele==null) {
//					log(LogStatus.INFO,"Related Association Field is not present",YesNo.No);	
//				} else {
//					sa.assertTrue(false,"Related Association Field should not be present");
//					log(LogStatus.SKIP,"Related Association Field should not be present",YesNo.Yes);
//				}
//
//				// subject
//				if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.TaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_STDTask2OnSubject, "Subject", action.SCROLLANDBOOLEAN)) {
//					log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//					ThreadSleep(1000);
//
//					// Due Date
//					if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), todaysDate, PageLabel.Due_Date.toString(), action.SCROLLANDBOOLEAN)) {
//						log(LogStatus.INFO, "Entered value to Due Date Text Box", YesNo.Yes);
//						ThreadSleep(1000);
//
//						// comment 
//						if (sendKeys(driver, ip.getcommentsTextBox(projectName, 10), Smoke_STDTask2OnComment, "comments", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.ERROR, "entered value in Comment Text Area", YesNo.Yes);	
//						}
//						else {
//							log(LogStatus.ERROR, "comments textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"comments textbox is not visible so task could not be created" );
//						}
//
//						for (String relatedContact : contacts) {
//
//							flag = cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TaskPage, PageLabel.Name.toString(), TabName.TaskTab, relatedContact, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+relatedContact+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.TaskTab)+" For Label "+PageLabel.Name,YesNo.No);
//
//								ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.TaskPage, PageLabel.Name.toString(),true, relatedContact, action.SCROLLANDBOOLEAN, 5);
//								if (ele!=null) {
//									log(LogStatus.INFO, relatedContact+" Found For Label "+PageLabel.Name.toString(),YesNo.No);	
//								} else {
//									sa.assertTrue(false,relatedContact+" not Found For Label "+PageLabel.Name.toString());
//									log(LogStatus.ERROR, relatedContact+" not Found For Label "+PageLabel.Name.toString(),YesNo.Yes);
//
//								}
//
//
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+relatedContact+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+relatedContact+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//
//						}
//
//
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TaskPage, PageLabel.Related_To.toString(), TabName.TestCustomObjectTab, taskCustomObj1Name, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.SKIP,"Selected "+taskCustomObj1Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_To,YesNo.No);
//
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+taskCustomObj1Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_To);
//							log(LogStatus.SKIP,"Not Able to Select "+taskCustomObj1Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_To,YesNo.Yes);
//
//						}
//
//						 
//						if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"successfully created task : "+Smoke_STDTask2OnSubject,  YesNo.Yes);
//							ThreadSleep(3000);
//
//							ele = cp.getCreatedConfirmationMsg(projectName, 15);
//							if (ele!=null) {
//								actualValue = ele.getText().trim();
//								expectedValue=tp.taskCreatesMsg(projectName, Smoke_STDTask2OnSubject);
//								if (actualValue.contains(expectedValue)) {
//									log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//								} else {
//									log(LogStatus.ERROR,"Actual : \n"+actualValue+" Expected : \n"+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//									BaseLib.sa.assertTrue(false, "Actual : \n"+actualValue+" Expected : \n"+expectedValue+" not matched FOR Confirmation Msg");
//								}
//							} else {
//								sa.assertTrue(false,"Created Task Msg Ele not Found");
//								log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//							}
//
//							ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask14", excelLabel.Due_Date);
//							ThreadSleep(2000);
//							refresh(driver);
//							ThreadSleep(5000);
//							if (click(driver, tp.getRefreshIcon(projectName, 20), "Refresh Icon", action.BOOLEAN)) {
//								log(LogStatus.INFO, "Clicked on Refesh Button", YesNo.No);	
//								ThreadSleep(2000);
//								ele=tp.getTaskNameLinkInSideMMenu(projectName, Smoke_STDTask2OnSubject, 15);
//
//								if (click(driver, ele, Smoke_STDTask2OnSubject, action.BOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on "+Smoke_STDTask2OnSubject+" on SideMenu", YesNo.No);	
//									ThreadSleep(1000);
//									date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask14", excelLabel.Due_Date);
//
//
//									///////////////////////////////////////////////////////////////
//									
//									String relatedContactValue= tp.Comment(projectName, PageLabel.Related_Contacts, contact1Name);
//									String comment = relatedContactValue+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_STDTask2OnComment;
//
//									String[][] fieldsWithValues= {
//											{PageLabel.Subject.toString(),Smoke_STDTask2OnSubject},
//											{PageLabel.Due_Date.toString(),date},
//											{PageLabel.Related_To.toString(),taskCustomObj1Name},
//											{PageLabel.Name.toString(),contact4Name+"\n + "+1},
//											{PageLabel.Related_Contacts.toString(),contact1Name},
//											{PageLabel.Comments.toString(),comment}};
//
//									tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);
//									
//									///////////////////////////////////////////////////////////////////////
//
//								} else {
//									log(LogStatus.ERROR, "Not Able to Click on "+Smoke_STDTask2OnSubject+" on SideMenu", YesNo.Yes);
//									sa.assertTrue(false,"Not Able to Click on "+Smoke_STDTask2OnSubject+" on SideMenu");
//
//								}
//
//							} else {
//								log(LogStatus.ERROR, "Not Able to Click on Refesh Button", YesNo.Yes);
//								sa.assertTrue(false,"Not Able to Click on Refesh Button" );
//
//							}
//
//						}
//						else {
//							log(LogStatus.ERROR, "save button is not clickable so task not created : "+Smoke_STDTask2OnSubject, YesNo.Yes);
//							sa.assertTrue(false,"save button is not clickable so task not created : "+Smoke_STDTask2OnSubject );
//						}
//
//
//
//					}else {
//						log(LogStatus.ERROR, "duedate textbox is not visible so task could not be created", YesNo.Yes);
//						sa.assertTrue(false,"duedate textbox is not visible so task could not be created" );
//					}
//				}
//				else {
//					log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//					sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on New Task Button for show more action");
//				log(LogStatus.SKIP,"Not Able to Click on New Task Button for show more action",YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TaskTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TaskTab,YesNo.Yes);
//		}
//
//		 
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc061_2_VerifyCreateStandardTaskAfterEnablingSetting(String projectName) {
//
//		String date=todaysDate;
//		ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask14", excelLabel.Due_Date);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);WebElement ele ;
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		RelatedTab[] relatabTabs = {RelatedTab.Activities};
//		
//		String contact4Name = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		String contact1Name = Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		String[] contacts = {contact4Name,contact1Name};
//		
//		String task1 = Smoke_STDTask2OnSubject;
//		
//		List<String> taskStd2On=new LinkedList<String>();
//		taskStd2On.add(contact4Name+" +"+1);
//		taskStd2On.add(taskCustomObj1Name);
//		taskStd2On.add(Status.Not_Started.toString());
//		taskStd2On.add(owner);
//		taskStd2On.add("");
//		taskStd2On.add(Activity.Task.toString());
//		taskStd2On.add(Links.View.toString());	
//		for (String contactName : contacts) {
//			switchToDefaultContent(driver);
//			if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//					log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//					ThreadSleep(1000);
//					for (RelatedTab relatedTab : relatabTabs) {
//						refresh(driver);
//						if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//							ThreadSleep(10000);
//						
//							switchToDefaultContent(driver);
//							switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//							ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, relatedTab, task1, action.BOOLEAN, 10);
//							if (ele!=null) {
//								log(LogStatus.INFO,task1+" link present on Sub Tab : "+relatedTab,YesNo.Yes);		
//								ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, Smoke_STDTask2OnDate, Smoke_STDTask2OnSubject, taskStd2On, action.SCROLLANDBOOLEAN, 10);	
//									
//							} else {
//								sa.assertTrue(false,task1+" link not present on Sub Tab : "+relatedTab+" for : "+contactName);
//								log(LogStatus.SKIP,task1+" link not present on Sub Tab : "+relatedTab+" for : "+contactName,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName);
//							log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" for "+contactName,YesNo.Yes);
//						}
//
//					}
//
//				} else {
//					sa.assertTrue(false,"Contact Not Found : "+contactName);
//					log(LogStatus.SKIP,"Contact  Not Found : "+contactName,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//			}
//
//			switchToDefaultContent(driver);
//		}
//		
//		String meetingCustomObject1=taskCustomObj1Name;
//		switchToDefaultContent(driver);
//		if (cp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, meetingCustomObject1, 20)) {
//				log(LogStatus.INFO,"Clicked on custom object: "+meetingCustomObject1,YesNo.No);
//				ThreadSleep(1000);
//					refresh(driver);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//						ThreadSleep(10000);
//					
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//						
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, task1, action.BOOLEAN, 10);
//						if (ele!=null) {
//							log(LogStatus.INFO,task1+" link present after applying Filter on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);		
//							ip.verifyingRelatedTabData2(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, Smoke_STDTask2OnDate, Smoke_STDTask2OnSubject, taskStd2On, action.SCROLLANDBOOLEAN, 10);	
//							
//						} else {
//							sa.assertTrue(false,task1+" link not present on Sub Tab : "+RelatedTab.Activities+" for : "+meetingCustomObject1);
//							log(LogStatus.SKIP,task1+" link not present on Sub Tab : "+RelatedTab.Activities+" for : "+meetingCustomObject1,YesNo.Yes);
//						}
//						
//					
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//					}
//					
//			} else {
//				sa.assertTrue(false,"custom object Not Found : "+meetingCustomObject1);
//				log(LogStatus.SKIP,"custom object  Not Found : "+meetingCustomObject1,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab,YesNo.Yes);
//		}
//		
//		
//		switchToDefaultContent(driver);
//		 
//		lp.CRMlogout();
//		sa.assertAll();
//
//
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc062_1_VerifyAssignMultipleAssociationLinkAfterEnablingSetting(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact4Name = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		String contact1Name = Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		String contact3Name = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String[] contacts = {contact4Name,contact1Name};
//
//		WebElement ele ;
//		String parentID=null;
//		String firstChildWin=null;
//		String secondChildWin=null;
//		String actualValue;
//		boolean flag=false;
//
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contact4Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contact4Name,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 60), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//
//
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_STDTask2OnSubject, action.BOOLEAN, 10);
//					if (ele!=null) {
//						log(LogStatus.INFO,Smoke_STDTask2OnSubject+" link present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);	
//
//						if (click(driver, ele, Smoke_STDTask2OnSubject, action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on : "+Smoke_STDTask2OnSubject,YesNo.No);
//							parentID = switchOnWindow(driver);
//							if (parentID!=null) {
//								log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+Smoke_STDTask2OnSubject,YesNo.Yes);
//								ThreadSleep(1000);
//								ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, Smoke_STDTask2OnSubject, action.BOOLEAN, 10);
//								if (ele!=null) {
//									log(LogStatus.INFO,"Landing Page Verified for : "+Smoke_STDTask2OnSubject,YesNo.No);	
//								} else {
//									sa.assertTrue(false,"Landing Page Not Verified for : "+Smoke_STDTask2OnSubject);
//									log(LogStatus.SKIP,"Landing Page Not Verified for : "+Smoke_STDTask2OnSubject,YesNo.Yes);
//								}
//
//
//								for (int k = 2; k < 3; k++) {
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 60, tp.getTaskPageFrame(projectName,60));
//
//									ele = cp.getHeaderTextForPage(projectName, PageName.TaskPage, TaskPagePageErrorMessage.RelatedAssociationText, action.BOOLEAN, 10);
//									if (click(driver, ele, TaskPagePageErrorMessage.RelatedAssociationText, action.BOOLEAN)) {
//										log(LogStatus.INFO,"Clicked on Link :  "+TaskPagePageErrorMessage.RelatedAssociationText,YesNo.No);	
//
//
//										firstChildWin = driver.getWindowHandle();
//										System.err.println("First Child Window ID: " + firstChildWin);
//
//										Set<String> allWindows = driver.getWindowHandles();
//										int i = 0;
//										for (String string : allWindows) {
//											System.err.println("IDs " + (++i) + ": " + string);
//										}
//										Iterator<String> i1 = allWindows.iterator();
//
//										while (i1.hasNext()) {
//											secondChildWin = i1.next();
//											if (!secondChildWin.equalsIgnoreCase(firstChildWin) && !secondChildWin.equalsIgnoreCase(parentID)) {
//												driver.switchTo().window(secondChildWin);
//												log(LogStatus.INFO,"Switch To Edit Task Window",YesNo.No);	
//												ThreadSleep(5000);
//
//												ele = tp.getTaskPoUpEditHeader(projectName, 10);
//												if (ele!=null) {
//													log(LogStatus.INFO,"Edit Header Ele Found",YesNo.No);	
//													actualValue=ele.getText().trim();
//													String expectedValue=PageLabel.Edit.toString()+" "+Smoke_STDTask2OnSubject;
//													// && actualValue.contains(Smoke_STDTask2OnSubject))
//													if (actualValue.contains(PageLabel.Edit.toString())) {
//														log(LogStatus.INFO,expectedValue+" matched msg for Edit PopUp", YesNo.No);
//
//													} else {
//														log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched msg for Edit PopUp", YesNo.Yes);
//														BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched msg for Edit PopUp");
//													}
//
//												} else {
//													sa.assertTrue(false,"Edit Header Ele Not Found");
//													log(LogStatus.SKIP,"Edit Header Ele Not Found",YesNo.Yes);
//												}
//												System.err.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>..");
//											
//
//
//												List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Name.toString(),true, action.SCROLLANDBOOLEAN, 15);
//												if (!eleList.isEmpty() && eleList.size()==2) {
//													log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Name.toString(),YesNo.No);	
//												} else {
//													sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//													log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//												}
//
//												for (String relatedContact : contacts) {
//
//													ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Name.toString(),true, relatedContact, action.SCROLLANDBOOLEAN, 5);
//													if (ele!=null) {
//														log(LogStatus.INFO, relatedContact+" Found For Label "+PageLabel.Name.toString(),YesNo.No);	
//													} else {
//														sa.assertTrue(false,relatedContact+" not Found For Label "+PageLabel.Name.toString());
//														log(LogStatus.ERROR, relatedContact+" not Found For Label "+PageLabel.Name.toString(),YesNo.Yes);
//
//													}
//												}
//
//									
//
//												flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object1Tab, Smoke_TaskINS3Name, action.SCROLLANDBOOLEAN, 10);		
//												if (flag) {
//													log(LogStatus.INFO,"Selected "+Smoke_TaskINS3Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object1Tab)+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//												} else {
//													sa.assertTrue(false,"Not Able to Select "+Smoke_TaskINS3Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.Object1Tab)+" For Label "+PageLabel.Related_Associations);
//													log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskINS3Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object1Tab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//												}
//
//												flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object3Tab, Smoke_TaskFund1Name, action.SCROLLANDBOOLEAN, 10);		
//												if (flag) {
//													log(LogStatus.INFO,"Selected "+Smoke_TaskFund1Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object3Tab)+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//												} else {
//													sa.assertTrue(false,"Not Able to Select "+Smoke_TaskFund1Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.Object3Tab)+" For Label "+PageLabel.Related_Associations);
//													log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskFund1Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.Object3Tab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//												}
//
//												flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, taskCustomObj1Name, action.SCROLLANDBOOLEAN, 10);		
//												if (flag) {
//													log(LogStatus.INFO,"Selected "+taskCustomObj1Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//												} else {
//													sa.assertTrue(false,"Not Able to Select "+taskCustomObj1Name+" For Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations);
//													log(LogStatus.SKIP,"Not Able to Select "+taskCustomObj1Name+" For  Drown Down Value : "+cp.getTabName(projectName, TabName.TestCustomObjectTab)+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//												}
//
//												flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), TabName.Object2Tab, contact3Name, action.SCROLLANDBOOLEAN, 10);		
//												if (flag) {
//													log(LogStatus.SKIP,"Selected "+contact3Name+" For  Drown Down Value : "+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//												} else {
//													sa.assertTrue(false,"Not Able to Select "+contact3Name+"For Label "+PageLabel.Name);
//													log(LogStatus.SKIP,"Not Able to Select "+contact3Name+" For Label"+PageLabel.Name,YesNo.Yes);
//
//												}
//
//
//												System.err.println(">>>>>>>>>>>>>>>>>>>>>>Save Button<<<<<<<<<<<<<<<<<<<<<<<<<");
//										
//												flag=false;
//												if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//													log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//													flag=true;
//													ele = cp.getAnyMsg(projectName, tp.taskSavedMsg(projectName, Smoke_STDTask2OnSubject), 20);
//													if (ele!=null) {
//														log(LogStatus.SKIP,"Saved Task Msg Ele Found and Verified",YesNo.No);
//
//													} else {
//														sa.assertTrue(false,"Saved Task Msg Ele not Found");
//														log(LogStatus.SKIP,"Saved Task Msg Ele not Found",YesNo.Yes);
//
//													}
//
//													ThreadSleep(3000);
//													String relatedAssoctaion=tp.Comment(projectName, PageLabel.Related_Associations, Smoke_TaskINS3Name)+", "+Smoke_TaskFund1Name+", "+taskCustomObj1Name;
//													String relatedContactValue= tp.Comment(projectName, PageLabel.Related_Contacts, contact1Name)+", "+contact3Name;
//													String comment = relatedContactValue+"\n"+relatedAssoctaion+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_STDTask2OnComment;
//
//													String[][] fieldsWithValues= {
//															{PageLabel.Subject.toString(),Smoke_STDTask2OnSubject},
//															{PageLabel.Due_Date.toString(),Smoke_STDTask2OnDate},
//															{PageLabel.Related_To.toString(),taskCustomObj1Name},
//															{PageLabel.Related_Associations.toString(),Smoke_TaskINS3Name+", "+Smoke_TaskFund1Name+", "+taskCustomObj1Name},
//															{PageLabel.Name.toString(),contact4Name+"\n + "+2},
//															{PageLabel.Related_Contacts.toString(),contact1Name+", "+contact3Name},
//															{PageLabel.Comments.toString(),comment}};
//
//													tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);	
//
//													System.err.println(">>>>>>>>>>>>>>>>>>>>>>Save222222222222222 Button<<<<<<<<<<<<<<<<<<<<<<<<<");
//												
//												}
//
//												else {
//													log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//													sa.assertTrue(false,"save button is not clickable so task not created" );
//												}
//
//											}
//
//										}
//
//										 
//									} else {
//										sa.assertTrue(false,"Not Able to Click on Link :  "+TaskPagePageErrorMessage.RelatedAssociationText);
//										log(LogStatus.SKIP,"Not Able to Click on Link :  "+TaskPagePageErrorMessage.RelatedAssociationText,YesNo.Yes);
//									}
//
//
//								}
//
//								Set<String> allWindows=driver.getWindowHandles();
//						        for (String s:allWindows) {
//						            driver.switchTo().window(s);
//						            if (!s.equalsIgnoreCase(parentID))
//						                driver.close();
//						        }
//						        driver.switchTo().window(parentID);
//						        
//							} else {
//								sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+Smoke_STDTask2OnSubject);
//								log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+Smoke_STDTask2OnSubject,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on : "+Smoke_STDTask2OnSubject);
//							log(LogStatus.SKIP,"Not Able to Click on : "+Smoke_STDTask2OnSubject,YesNo.Yes);
//						}
//					} else {
//						sa.assertTrue(false,Smoke_STDTask2OnSubject+" link not present on Sub Tab : "+RelatedTab.Activities);
//						log(LogStatus.SKIP,Smoke_STDTask2OnSubject+" link not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contact4Name);
//				log(LogStatus.SKIP,"Contact Not Found : "+contact4Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//	
//		switchToDefaultContent(driver);
//		
////		if (flag) {
////			
////			String relatedAssoctaion=tp.Comment(projectName, PageLabel.Related_Associations, Smoke_TaskINS3Name)+", "+Smoke_TaskFund1Name+", "+taskCustomObj1Name;
////			String relatedContactValue= tp.Comment(projectName, PageLabel.Related_Contacts, contact1Name)+", "+contact3Name;
////			String comment = relatedContactValue+"\n"+relatedAssoctaion+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_STDTask2OnComment;
////
////			String[][] fieldsWithValues= {
////					{PageLabel.Subject.toString(),Smoke_STDTask2OnSubject},
////					{PageLabel.Due_Date.toString(),Smoke_STDTask2OnDate},
////					{PageLabel.Related_To.toString(),taskCustomObj1Name},
////					{PageLabel.Related_Associations.toString(),Smoke_TaskINS3Name+", "+Smoke_TaskFund1Name+", "+taskCustomObj1Name},
////					{PageLabel.Name.toString(),contact4Name+"\n + "+2},
////					{PageLabel.Related_Contacts.toString(),contact1Name+", "+contact3Name},
////					{PageLabel.Comments.toString(),comment}};
////
////			tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);	
////
////			System.err.println(">>>>>>>>>>>>>>>>>>>>>>Save222222222222222 Button<<<<<<<<<<<<<<<<<<<<<<<<<");
////			 	
////		}
//		switchToDefaultContent(driver);
//		 lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc062_2_VerifyAssignMultipleAssociationLinkAfterEnablingSetting(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		
//		WebElement ele ;
//		String actualValue;
//		boolean flag=false;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		RelatedTab[] relatabTabs = {RelatedTab.Activities};
//		
//
//		String contact4Name = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		String contact3Name = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		
//		String task1 = Smoke_STDTask2OnSubject;
//		String date = Smoke_STDTask2OnDate;
//		List<String> taskStd2On=new LinkedList<String>();
//		taskStd2On.add(contact4Name+" +"+2);
//		taskStd2On.add(taskCustomObj1Name+" +"+2);
//		taskStd2On.add(Status.Not_Started.toString());
//		taskStd2On.add(owner);
//		taskStd2On.add("");
//		taskStd2On.add(Activity.Task.toString());
//		taskStd2On.add(Links.View.toString());	
//		
//		String entity=Smoke_TaskINS2Name;
//			switchToDefaultContent(driver);
//			if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, entity, 20)) {
//					log(LogStatus.INFO,"Clicked on Entity/Account : "+entity,YesNo.No);
//					ThreadSleep(1000);
//					for (RelatedTab relatedTab : relatabTabs) {
//						refresh(driver);
//						if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//							ThreadSleep(10000);
//						
//							switchToDefaultContent(driver);
//							switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//							ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, relatedTab, task1, action.BOOLEAN, 10);
//							if (ele!=null) {
//								log(LogStatus.INFO,task1+" link present on Sub Tab : "+relatedTab,YesNo.Yes);		
//								ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, relatedTab, date, task1, taskStd2On, action.SCROLLANDBOOLEAN, 10);	
//									
//							} else {
//								sa.assertTrue(false,task1+" link not present on Sub Tab : "+relatedTab+" for : "+entity);
//								log(LogStatus.SKIP,task1+" link not present on Sub Tab : "+relatedTab+" for : "+entity,YesNo.Yes);
//							}		
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//							log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//						}
//
//					}
//
//				} else {
//					sa.assertTrue(false,"Entity/Account Not Found : "+entity);
//					log(LogStatus.SKIP,"Entity/Account  Not Found : "+entity,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//			}
//
//			switchToDefaultContent(driver);
//			if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contact3Name, 20)) {
//					log(LogStatus.INFO,"Clicked on Contact : "+contact3Name,YesNo.No);
//					ThreadSleep(1000);
//					for (RelatedTab relatedTab : relatabTabs) {
//						refresh(driver);
//						if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab,YesNo.No);
//							ThreadSleep(10000);
//						
//							switchToDefaultContent(driver);
//							switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//							ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, relatedTab, task1, action.BOOLEAN, 10);
//							if (ele!=null) {
//								log(LogStatus.INFO,task1+" link present on Sub Tab : "+relatedTab,YesNo.Yes);		
//								ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, relatedTab, date, task1, taskStd2On, action.SCROLLANDBOOLEAN, 10);	
//									
//							} else {
//								sa.assertTrue(false,task1+" link not present on Sub Tab : "+relatedTab+" for : "+contact3Name);
//								log(LogStatus.SKIP,task1+" link not present on Sub Tab : "+relatedTab+" for : "+contact3Name,YesNo.Yes);
//							}	
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//							log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//						}
//
//					}
//
//				} else {
//					sa.assertTrue(false,"Contact Not Found : "+contact3Name);
//					log(LogStatus.SKIP,"Contact  Not Found : "+contact3Name,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//			}
//
//
//			switchToDefaultContent(driver);
//		 
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc063_1_verifyNewTaskMultipleAssociation_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		String[] taskUIdata= {"","--None--",Smoke_TaskINS1Name,"","",Smoke_Task2Priority,"",Status.Not_Started.toString()};
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String date=todaysDate;
//		
//		String tabs=ip.getTabName(projectName, TabName.Object1Tab)+","+ip.getTabName(projectName, TabName.Object3Tab)+","+ip.getTabName(projectName, TabName.TestCustomObjectTab);
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 20)) {
//				WebElement ele=ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20);
//				if (click(driver, ele, "related tab activities", action.BOOLEAN)) {
//					if (click(driver,ip.getButtonNewTaskMultipleAssociations(projectName, 10), "new task", action.SCROLLANDBOOLEAN)) {
//						if (ip.verifyUIOfCreateNewTaskWindow(projectName,crmUser1FirstName+" "+crmUser1LastName,taskUIdata,false)) {
//							log(LogStatus.INFO, "successfully verified create new task ui", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "could not verify create new task ui", YesNo.Yes);
//							sa.assertTrue(false, "could not verify create new task ui");
//						}
//						
//						ele= lp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TaskPage, PageLabel.Related_Contacts.toString(), action.SCROLLANDBOOLEAN,5);
//
//						if (ele==null) {
//							log(LogStatus.INFO,"Related Contact Field is not present",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Related Contact Field should not be present");
//							log(LogStatus.SKIP,"Related Contact Field should not be present",YesNo.Yes);
//						}
//					}
//					else {
//						log(LogStatus.ERROR, "could not click on new task button", YesNo.Yes);
//						sa.assertTrue(false,   "could not click on new task button");
//					}
//					if (clickUsingJavaScript(driver, ip.getcancelButton(projectName, 20),  "cancel button")) {
//					}
//					else {
//						log(LogStatus.ERROR, "could not click on cross icon", YesNo.Yes);
//						sa.assertTrue(false,   "could not click on cross icon");
//					}
//
//					if (click(driver,ip.getButtonNewTaskMultipleAssociations(projectName, 10), "new task", action.SCROLLANDBOOLEAN)) {
//						scrollDownThroughWebelement(driver, ip.relatedAssociations(projectName).get(0), "related associatons");
//						if (clickUsingJavaScript(driver, ip.getrelatedAssociationsdropdownButton(projectName, 10), "dropdown button for related associations")) {
//							List<String> l=compareMultipleListContainsByTitle(driver, tabs, ip.listOfObjectsInRelatedAssctions(projectName));
//							if (l.isEmpty()) {
//								log(LogStatus.INFO, "successfully verified presence of all tabs "+tabs, YesNo.No);
//							}
//							else {
//								for (String a:l) {
//									log(LogStatus.ERROR,"not found "+a,  YesNo.Yes);
//									sa.assertTrue(false, "not found "+a);
//								}
//							}
//							l.clear();
//							l=compareMultipleListContainsByTitle(driver,ip.getTabName(projectName, TabName.Object2Tab).toString(), ip.listOfObjectsInRelatedAssctions(projectName));
//							if (l.isEmpty()) {
//								log(LogStatus.ERROR, "tab "+TabName.Object2Tab.toString()+" is present but should not be", YesNo.Yes);
//								sa.assertTrue(false, "tab "+TabName.Object2Tab.toString()+" is present but should not be");
//							}
//							else {
//								for (String a:l) {
//									log(LogStatus.INFO,"not found "+a+" as expected",  YesNo.Yes);
//
//								}
//							}
//							//3
//							boolean flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Name.toString(), TabName.Object1Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							ele= ip.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.Object1Page,  PageLabel.Name.toString(), action.SCROLLANDBOOLEAN,10);
//							if (ele!=null) {
//								if (sendKeys(driver, ele,Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, "Related To Text Label", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"Enter Value to name Text Box : "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName,YesNo.No);	
//									ThreadSleep(1000);
//
//									ele=ip.getContactNameWithInstOrRelatedAssociationNameOnTask(projectName,  PageName.Object1Page, PageLabel.Name.toString(),
//											Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, Smoke_TaskINS1Name, action.SCROLLANDBOOLEAN, 10);
//									if (ele!=null) {
//										if (clickUsingJavaScript(driver, ele, "contact name ", action.BOOLEAN)) {
//											log(LogStatus.SKIP,"Selected "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name,YesNo.No);
//
//										} else {
//											sa.assertTrue(false,"Not Able to Select "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name);
//											log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//										}
//									}else {
//										sa.assertTrue(false,"Not found "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name);
//										log(LogStatus.SKIP,"Not found "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//									}
//								}else {
//									sa.assertTrue(false,"Not visible textbox of For Label "+PageLabel.Name);
//									log(LogStatus.SKIP,"Not visible textbox of For Label "+PageLabel.Name,YesNo.Yes);
//
//								}
//							}
//							else {
//								sa.assertTrue(false,"Not present on page: textbox of For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not present on page: textbox of For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//
//							/*flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Name.toString(), TabName.Object1Tab, Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+ Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+ Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+ Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}*/
//							
//							
//							ele = ip.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object1Page, PageLabel.Name.toString(), true, Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, action.SCROLLANDBOOLEAN, 10);
//							if (ele!=null) {
//								log(LogStatus.INFO, "successfully verified presence of "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" in name field",YesNo.No);
//							} else {
//								sa.assertTrue(false,"not found "+ Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"not found "+ Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							
//							ele = ip.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object1Page, PageLabel.Name.toString(), true, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, action.SCROLLANDBOOLEAN, 10);
//							if (ele!=null) {
//								log(LogStatus.INFO, "successfully verified presence of "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" in name field",YesNo.No);
//							} else {
//								sa.assertTrue(false,"not found "+ Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"not found "+ Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							//remove icon
//							if (click(driver, ip.removeButtonInRelatedAssociations(projectName,Smoke_TaskINS1Name), "remove button", action.BOOLEAN)) {
//								log(LogStatus.SKIP,"clicked on remove icon",YesNo.No);
//
//							}
//							else {
//								log(LogStatus.ERROR, "remove Button is not clickable", YesNo.Yes);
//								sa.assertTrue(false, "remove Button is not clickable");
//							}
//							flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.Object1Tab, Smoke_TaskINS3Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+Smoke_TaskINS3Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+Smoke_TaskINS3Name+" For Label "+PageLabel.Related_Associations);
//								log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskINS3Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//							}
//							ThreadSleep(3000);
//							flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.Object3Tab, Smoke_TaskFund1Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+Smoke_TaskFund1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+Smoke_TaskFund1Name+" For Label "+PageLabel.Related_Associations);
//								log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskFund1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//							}
//							flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, taskCustomObj1Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+taskCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+taskCustomObj1Name+" For Label "+PageLabel.Related_Associations);
//								log(LogStatus.SKIP,"Not Able to Select "+taskCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//							}
//							
//							if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), "Subject",20), Smoke_Task2MultipleSubject, "Subject", action.SCROLLANDBOOLEAN)) {
//								if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), todaysDate, "due date", action.SCROLLANDBOOLEAN)) {
//									if (sendKeys(driver, ip.getcommentsTextBox(projectName, 10), Smoke_Task2MultipleComment, "comments", action.SCROLLANDBOOLEAN)) {
//										if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//											log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//										}
//										else {
//											log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//											sa.assertTrue(false,"save button is not clickable so task not created" );
//										}
//										ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask16", excelLabel.Due_Date);
//									}
//									else {
//										log(LogStatus.ERROR, "comments textbox is not visible so task could not be created", YesNo.Yes);
//										sa.assertTrue(false,"comments textbox is not visible so task could not be created" );
//									}
//								}
//								else {
//									log(LogStatus.ERROR, "duedate textbox is not visible so task could not be created", YesNo.Yes);
//									sa.assertTrue(false,"duedate textbox is not visible so task could not be created" );
//								}
//							}
//							else {
//								log(LogStatus.ERROR, "subject textbox is not visible so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"subject textbox is not visible so task could not be created" );
//							}
//							switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//							click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//						}
//						else {
//							log(LogStatus.ERROR, "not able to click on dropdown of related associations so cannot check objects", YesNo.Yes);
//							sa.assertTrue(false,"not able to click on dropdown of related associations so cannot check objects" );
//						}
//					}
//					else {
//						log(LogStatus.ERROR, "not able to click on new task button", YesNo.Yes);
//						sa.assertTrue(false,"not able to click on new task button" );
//					}
//
//				}
//				else {
//					log(LogStatus.ERROR, "not able to click on related tab activities", YesNo.Yes);
//					sa.assertTrue(false,"not able to click on related tab activities" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not able to click on created institution", YesNo.Yes);
//				sa.assertTrue(false, "not able to click on created institution" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "not able to click on institution tab", YesNo.Yes);
//			sa.assertTrue(false, "not able to click on institution tab" );
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc063_2_verifyNewTaskMultipleAssociation_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" +1");
//		taskstd1.add(Smoke_TaskINS3Name+" +2");
//		taskstd1.add(Smoke_Task2MultipleStatus);
//		taskstd1.add(crmUser1FirstName+" "+crmUser1LastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Task.toString());
//		taskstd1.add(Links.View.toString());	
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask16", excelLabel.Due_Date);
//		
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS3Name, 10)) {
//				ThreadSleep(6000);
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 30,ip.getFrame(PageName.ActivitiesOrMeetings, 100));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.BOOLEAN);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2MultipleSubject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data "+Smoke_TaskINS3Name, YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data  "+Smoke_TaskINS3Name );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "inst3 is not found, so could not verify activities task data " +Smoke_TaskINS3Name, YesNo.Yes);
//				sa.assertTrue(false,"inst3 is not found, so could not verify activities task data "+Smoke_TaskINS3Name);
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "inst/account tab is not clickable, so could not verify activities task data "+Smoke_TaskINS3Name, YesNo.Yes);
//			sa.assertTrue(false,"inst/account tab is not clickable, so could not verify activities task data "+Smoke_TaskINS3Name );
//		}
//		
//
//		if (ip.clickOnTab(projectName, TabName.Object3Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_TaskFund1Name, 10)) {
//				ThreadSleep(6000);
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object3Page, RelatedTab.Activities, 20)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 30,ip.getFrame(PageName.ActivitiesOrMeetings, 100));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.BOOLEAN);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2MultipleSubject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data "+Smoke_TaskFund1Name, YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data "+Smoke_TaskFund1Name );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "fund/deal1 is not found, so could not verify activities task data "+Smoke_TaskFund1Name, YesNo.Yes);
//				sa.assertTrue(false,"fund/deal1 is not found, so could not verify activities task data "+Smoke_TaskFund1Name );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "fund/deal tab is not clickable, so could not verify activities task data "+Smoke_TaskFund1Name, YesNo.Yes);
//			sa.assertTrue(false,"fund/deal tab is not clickable, so could not verify activities task data "+Smoke_TaskFund1Name );
//		}
//		if (ip.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj1Name, 10)) {
//				ThreadSleep(6000);
//				if (click(driver, ip.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 20)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 30,ip.getFrame(PageName.ActivitiesOrMeetings, 100));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.BOOLEAN);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2MultipleSubject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data "+taskCustomObj1Name, YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data "+taskCustomObj1Name );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "created custom record1 is not found, so could not verify activities task data "+taskCustomObj1Name, YesNo.Yes);
//				sa.assertTrue(false,"created custom record1 is not found, so could not verify activities task data "+taskCustomObj1Name );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "custom tab is not clickable, so could not verify activities task data "+taskCustomObj1Name, YesNo.Yes);
//			sa.assertTrue(false,"custom tab is not clickable, so could not verify activities task data "+taskCustomObj1Name );
//		}
//		if (ip.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, 10)) {
//				ThreadSleep(6000);
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 30,ip.getFrame(PageName.ActivitiesOrMeetings, 100));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.BOOLEAN);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2MultipleSubject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "contact3 is not found, so could not verify activities task data "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, YesNo.Yes);
//				sa.assertTrue(false,"contact3 is not found, so could not verify activities task data "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "Object2Tab is not clickable, so could not verify activities task data "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, YesNo.Yes);
//			sa.assertTrue(false,"Object2Tab is not clickable, so could not verify activities task data "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName );
//		}
//		
//		if (ip.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, 10)) {
//				ThreadSleep(6000);
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 30,ip.getFrame(PageName.ActivitiesOrMeetings, 100));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.BOOLEAN);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2MultipleSubject, taskstd1, action.BOOLEAN, 10);
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "contact1 is not found, so could not verify activities task data "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, YesNo.Yes);
//				sa.assertTrue(false,"contact1 is not found, so could not verify activities task data "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "Object2Tab is not clickable, so could not verify activities task data "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, YesNo.Yes);
//			sa.assertTrue(false,"Object2Tab tab is not clickable, so could not verify activities task data "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName );
//		}
//		
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc064_VerifyLinksAtActivitySearchAfterEnablingAllowUsersSetting(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact3Name = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String contact1Name = Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		String parentID=null;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contact3Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contact3Name,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//
//					String[] links = {Smoke_Task2MultipleSubject,contact3Name};
//					int i=0;
//					for (String link : links) {
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, link, action.BOOLEAN, 10);
//						if (ele!=null) {
//							log(LogStatus.INFO,link+" link present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);	
//
//							if (click(driver, ele, link, action.BOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on : "+link,YesNo.No);
//								parentID = switchOnWindow(driver);
//								if (parentID!=null) {
//									log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+link,YesNo.Yes);
//									ThreadSleep(1000);
//									if (i<=1) {
//										ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page, link, action.BOOLEAN, 10);
//										if (ele!=null) {
//											log(LogStatus.INFO,"Landing Page Verified for : "+link,YesNo.No);	
//										} else {
//											sa.assertTrue(false,"Landing Page Not Verified for : "+link);
//											log(LogStatus.SKIP,"Landing Page Not Verified for : "+link,YesNo.Yes);
//										}
//
//										if (i==0) {
//											String relatedAssoctaion=tp.Comment(projectName, PageLabel.Related_Associations, Smoke_TaskINS3Name)+", "+Smoke_TaskFund1Name+", "+taskCustomObj1Name;
//											String relatedContactValue= tp.Comment(projectName, PageLabel.Related_Contacts, contact1Name);
//											String comment = relatedContactValue+"\n"+relatedAssoctaion+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_Task2MultipleComment;
//
//											String[][] fieldsWithValues= {{PageLabel.Assigned_To.toString(),owner},
//													{PageLabel.Status.toString(),Smoke_Task2MultipleStatus},
//													{PageLabel.Subject.toString(),Smoke_Task2MultipleSubject},
//													{PageLabel.Name.toString(),contact3Name+"\n + "+1},
//													{PageLabel.Due_Date.toString(),Smoke_STDTask2OnDate},
//													{PageLabel.Related_To.toString(),""},
//													{PageLabel.Meeting_Type.toString(),""},
//													{PageLabel.Related_Associations.toString(),Smoke_TaskINS3Name+", "+Smoke_TaskFund1Name+", "+taskCustomObj1Name},
//													{PageLabel.Related_Contacts.toString(),contact1Name},
//													{PageLabel.Priority.toString(),Smoke_Task2MultiplePriority},
//													{PageLabel.Comments.toString(),comment}};
//
//											tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);	
//										}
//										driver.close();
//										driver.switchTo().window(parentID);
//									}
//
//
//								} else {
//									sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+link);
//									log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+link,YesNo.Yes);
//								}
//
//							} else {
//								sa.assertTrue(false,"Not Able to Click on : "+link);
//								log(LogStatus.SKIP,"Not Able to Click on : "+link,YesNo.Yes);
//							}
//						} else {
//							sa.assertTrue(false,link+" link not present on Sub Tab : "+RelatedTab.Activities);
//							log(LogStatus.SKIP,link+" link not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//						}
//						i++;
//					}
//
//					for (int j = 0; j < 2; j++) {
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//						String link="1";
//						ele = cp.getLinkOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_Task2MultipleSubject, contact3Name, link, action.BOOLEAN, 5);
//						//	ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, link, action.BOOLEAN, 10);
//
//						if (click(driver, ele, link, action.BOOLEAN)) {
//
//
//							if (j==0) {
//								List<String> s=null;
//								s=compareMultipleList(driver, contact1Name, ip.createdRelatedContactNameOnPopUp(projectName));
//								if (s.isEmpty()) {
//									log(LogStatus.INFO, "Successfully verified related Contact names on PopUp", YesNo.No);
//									if (ip.verifyAllRecordsOnCreatedContactName(projectName, PageName.TaskPage,contact1Name)) {
//										log(LogStatus.INFO,"successfully verified Contact PopuP wINDOW", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR,  "could not verify Contact PopuP Link: ", YesNo.Yes);
//										sa.assertTrue(false,  "could not verify Contact PopuP Link: ");
//									}
//								}
//								else {
//									for(String e:s) {
//										log(LogStatus.ERROR,  "could not verify could not verify Contact PopuP Link: : " +e.toString(), YesNo.Yes);
//										sa.assertTrue(false,  "could not verify could not verify Contact PopuP Link:  " +e.toString());
//									}
//								}
//
//								if (click(driver, ip.getCrossIconRAorComment(projectName,"CN", 10), "ok icon", action.BOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on Cross Icon Related Contact PoPUp", YesNo.No);
//									ThreadSleep(5000);
//									if (ip.getCrossIconRAorComment(projectName,"CN", 2)==null) {
//										log(LogStatus.INFO,  "Related Contact PoPUp is Close After Click on Cross Icon", YesNo.No);
//									} else {
//										log(LogStatus.ERROR,  "Related Contact PoPUp Not Close After Click on Cross Icon", YesNo.Yes);
//										sa.assertTrue(false,  "Related Contact PoPUp Not Close After Click on Cross Icon");
//									}
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Click on Cross Icon Related Contact PoPUp", YesNo.Yes);
//									sa.assertTrue(false,  "Not Able to Click on Cross Icon Related Contact PoPUp");
//
//								}
//							} else {
//
//								if (click(driver, ip.getOkButtonRAorComment(projectName,"CN", 10), "Ok Button", action.BOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on ok Button Related Contact PoPUp", YesNo.No);
//									ThreadSleep(5000);
//									if (ip.getCrossIconRAorComment(projectName,"CN", 2)==null) {
//										log(LogStatus.INFO,  "Related Contact PoPUp is Close After Click on Ok Button", YesNo.No);
//									} else {
//										log(LogStatus.ERROR,  "Related Contact PoPUp Not Close After Click on Ok Button", YesNo.Yes);
//										sa.assertTrue(false,  "Related Contact PoPUp Not Close After Click on Ok Button");
//									}
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Click on ok Button Related Contact PoPUp", YesNo.Yes);
//									sa.assertTrue(false,  "Not Able to Click on ok Button Related Contact PoPUp");
//
//								}
//
//							}
//
//						} else {
//							sa.assertTrue(false,link+" link not present on Sub Tab : "+RelatedTab.Activities);
//							log(LogStatus.SKIP,link+" link not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//						}
//
//					}
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contact3Name);
//				log(LogStatus.SKIP,"Contact Not Found : "+contact3Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//
//
//
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc065_1_VerifyingEditingaMultiTaggedTask2_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact3Name = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String contact1Name = Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		String contact4Name = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//
//		String crmUserName = crmUser1FirstName+" "+crmUser1LastName;
//		String adminUerName = AdminUserFirstName+" "+AdminUserLastName;
//
//		String value="";
//		boolean flag=false;
//		List<String> items = new LinkedList<String>();		
//		WebElement ele;
//		String task1 = Smoke_Task2MultipleSubject;	
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask16", excelLabel.Due_Date);
//
//		String parentId=null;
//		boolean windowFlag=false;
//
//		String customObject1=taskCustomObj1Name;
//		switchToDefaultContent(driver);
//		if (cp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, customObject1, 20)) {
//				log(LogStatus.INFO,"Clicked on custom object: "+customObject1,YesNo.No);
//				ThreadSleep(1000);
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(10000);
//					 
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, task1, action.BOOLEAN, 10);
//					if (click(driver, ele, task1, action.SCROLLANDBOOLEAN)) {
//						log(LogStatus.INFO,"Click on : "+task1+ " on "+RelatedTab.Activities,YesNo.No);		
//						 parentId=switchOnWindow(driver);
//						 windowFlag=true;
//						ele = cp.getEditButton(projectName, 10);
//						if (click(driver, ele, "Edit Button ", action.BOOLEAN)) {
//							log(LogStatus.INFO,"Click on Edit Button : "+task1,YesNo.No);	
//
//							//1st assertion
//
//															String[] taskUIdata= {task1,"--None--",Smoke_TaskINS3Name+","+Smoke_TaskFund1Name+","+taskCustomObj1Name,Smoke_Task2MultipleComment,todaysDate,Smoke_Task2MultiplePriority,Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+","+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName,Smoke_Task2MultipleStatus};
//							
//															if (ip.verifyUIOfCreateNewTaskWindow(projectName,crmUserName,taskUIdata,true )) {
//																log(LogStatus.INFO, "successfully verified task ui edit mode", YesNo.No);
//															}
//															else {
//																log(LogStatus.ERROR, "could not verify create new task ui", YesNo.Yes);
//																sa.assertTrue(false, "could not verify create new task ui");
//															}
//
//							//2nd Assertion Name
//														
//							items.add(contact3Name);
//							items.add(contact1Name);
//							items.add(contact4Name);
//							for (int i = 0; i < items.size(); i++) {
//								value=items.get(i);
//								if (value.equals(contact4Name)) {
//									flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(), TabName.TestCustomObjectTab, value, action.SCROLLANDBOOLEAN, 10);		
//									if (flag) {
//										log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Name,YesNo.No);
//
//										List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(),true, action.SCROLLANDBOOLEAN, 15);
//										if (!eleList.isEmpty() && eleList.size()==1) {
//											log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Name.toString(),YesNo.No);	
//										} else {
//											sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//											log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//										}
//
//										ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(),true, value, action.SCROLLANDBOOLEAN, 5);
//										if (ele!=null) {
//											log(LogStatus.INFO, value+" Found For Label "+PageLabel.Name.toString(),YesNo.No);	
//										} else {
//											sa.assertTrue(false,value+" not Found For Label "+PageLabel.Name.toString());
//											log(LogStatus.ERROR, value+" not Found For Label "+PageLabel.Name.toString(),YesNo.Yes);
//
//										}
//
//
//
//									} else {
//										sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Name);
//										log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Name,YesNo.Yes);
//
//									}
//								}else {
//									if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(),true, value, action.SCROLLANDBOOLEAN, 5)) {
//										log(LogStatus.INFO, "Clicked on Cross Button against : "+value+" For Label : "+PageLabel.Name.toString(),YesNo.No);	
//									} else {
//										sa.assertTrue(false,"Not Able to Click on Cross Button against : "+value+" For Label : "+PageLabel.Name.toString());
//										log(LogStatus.ERROR, "Not Able to Click on Cross Button against : "+value+" For Label : "+PageLabel.Name.toString(),YesNo.Yes);
//									}
//
//								}
//							}
//
//
//							//3rd Assertion Related_Associations
//							items=new LinkedList<String>();
//							items.add(Smoke_TaskINS3Name);
//							items.add(Smoke_TaskFund1Name);
//							items.add(taskCustomObj1Name);
//							items.add(taskCustomObj2Name);
//							for (int i = 0; i < items.size(); i++) {
//								value=items.get(i);
//								if (value.equals(taskCustomObj2Name)) {
//									flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, value, action.SCROLLANDBOOLEAN, 10);		
//									if (flag) {
//										log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Related_Associations,YesNo.No);
//
//										List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(),true, action.SCROLLANDBOOLEAN, 15);
//										if (!eleList.isEmpty() && eleList.size()==1) {
//											log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//										} else {
//											sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Related_Associations.toString());
//											log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//										}
//
//										ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(),true, value, action.SCROLLANDBOOLEAN, 5);
//										if (ele!=null) {
//											log(LogStatus.INFO, value+" Found For Label "+PageLabel.Related_Associations.toString(),YesNo.No);	
//										} else {
//											sa.assertTrue(false,value+" not Found For Label "+PageLabel.Related_Associations.toString());
//											log(LogStatus.ERROR, value+" not Found For Label "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//										}
//
//
//
//									} else {
//										sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Related_Associations);
//										log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//									}
//								}else {
//									if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(),true, value, action.SCROLLANDBOOLEAN, 5)) {
//										log(LogStatus.INFO, "Clicked on Cross Button against : "+value+" For Label : "+PageLabel.Related_Associations.toString(),YesNo.No);	
//									} else {
//										sa.assertTrue(false,"Not Able to Click on Cross Button against : "+value+" For Label : "+PageLabel.Related_Associations.toString());
//										log(LogStatus.ERROR, "Not Able to Click on Cross Button against : "+value+" For Label : "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//									}
//
//								}
//							}
//
//
//							// 4TH ASSERTION
//
//							items=new LinkedList<String>();
//							items.add(crmUserName);
//							items.add(adminUerName);
//							for (int i = 0; i < items.size(); i++) {
//								value=items.get(i);
//								if (value.equals(adminUerName)) {
//
//
//									ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(), action.BOOLEAN,5);
//									if (click(driver, ele, "Assigned To Text Box", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Clicked on  Assigned To Text Box : ",YesNo.No);	
//										ThreadSleep(1000);
//
//										ele =  cp.getContactNameOrRelatedAssociationNameOnTask(projectName,  PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(),crmUserName, action.BOOLEAN,5);
//										if (ele!=null) {
//											log(LogStatus.INFO,crmUserName+" is available at Assigned Field",YesNo.No);
//											ThreadSleep(2000);
//										} else {
//											sa.assertTrue(false,crmUserName+" is not available at Assigned Field");
//											log(LogStatus.SKIP,crmUserName+" is not available at Assigned Field",YesNo.Yes);	
//										}
//									
//									}else {
//										sa.assertTrue(false,"Not Able to Click Assigned To Text Box : ");
//										log(LogStatus.SKIP,"Not Able to Click Value to Assigned To Text Box : ",YesNo.Yes);	
//									}
//									flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(), TabName.TestCustomObjectTab, value, action.SCROLLANDBOOLEAN, 10);		
//									if (flag) {
//										log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Assigned_To,YesNo.No);
//
//										List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(),false, action.SCROLLANDBOOLEAN, 15);
//										if (!eleList.isEmpty() && eleList.size()==1) {
//											log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Assigned_To.toString(),YesNo.No);	
//										} else {
//											sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Assigned_To.toString());
//											log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//
//										}
//
//										ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(),false, value, action.SCROLLANDBOOLEAN, 5);
//										if (ele!=null) {
//											log(LogStatus.INFO, value+" Found For Label "+PageLabel.Assigned_To.toString(),YesNo.No);	
//										} else {
//											sa.assertTrue(false,value+" not Found For Label "+PageLabel.Assigned_To.toString());
//											log(LogStatus.ERROR, value+" not Found For Label "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//
//										}
//
//
//
//									} else {
//										sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Assigned_To);
//										log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Assigned_To,YesNo.Yes);
//
//									}
//								}else {
//									if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(),false, value, action.SCROLLANDBOOLEAN, 5)) {
//										log(LogStatus.INFO, "Clicked on Cross Button against : "+value+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.No);	
//									} else {
//										sa.assertTrue(false,"Not Able to Click on Cross Button against : "+value+" For Label : "+PageLabel.Assigned_To.toString());
//										log(LogStatus.ERROR, "Not Able to Click on Cross Button against : "+value+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//									}
//
//								}
//							}
//
//
//							// 5th Assertion
//							if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_Task2MultipleUpdatedSubject,  PageLabel.Subject.toString(), action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO, "Entered Value on Subject Field: "+Smoke_Task2MultipleUpdatedSubject, YesNo.No);	
//								if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), tomorrowsDate, "due date", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO, "Entered Value on Date Field: "+tomorrowsDate, YesNo.No);
//									 
//									flag=false;
//									if (click(driver, ip.getCustomTabSaveBtn(projectName, 10),"save", action.SCROLLANDBOOLEAN)) {
//										flag=true;
//										log(LogStatus.INFO, "successfully clicked on save and edited task", YesNo.No);
//										date=tomorrowsDate;
//										ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask16", excelLabel.Due_Date);
//
//									}
//									else {
//										sa.assertTrue(false,"could not click cross on save, so cannot edit task");
//										log(LogStatus.ERROR, "could not click cross on save, so cannot edit task",YesNo.Yes);
//									}
//								}else {
//									sa.assertTrue(false,"due date field is visible, so cannot edit task");
//									log(LogStatus.ERROR, "due date field is visible, so cannot edit task",YesNo.Yes);
//								}
//							}
//							else {
//								sa.assertTrue(false,"subject field is visible, so cannot edit task");
//								log(LogStatus.ERROR, "subject field is visible, so cannot edit task",YesNo.Yes);
//							}
//
//
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Edit Button : "+task1);
//							log(LogStatus.SKIP,"Not Able to Click on Edit Button : "+task1,YesNo.Yes);
//						}
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on : "+task1+ " on "+RelatedTab.Activities);
//						log(LogStatus.SKIP,"Not Able to Click on : "+task1+ " on "+RelatedTab.Activities,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"custom object Not Found : "+customObject1);
//				log(LogStatus.SKIP,"custom object  Not Found : "+customObject1,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//		if (flag) {
//
//			String relatedAssoctaion=tp.Comment(projectName, PageLabel.Related_Associations, taskCustomObj2Name);
//			String comment = relatedAssoctaion+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_Task2MultipleComment;
//
//			String[][] fieldsWithValues= {{PageLabel.Assigned_To.toString(),adminUerName},
//					{PageLabel.Status.toString(),Smoke_Task2MultipleStatus},
//					{PageLabel.Subject.toString(),Smoke_Task2MultipleUpdatedSubject},
//					{PageLabel.Name.toString(), Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName},
//					{PageLabel.Due_Date.toString(),date},
//					{PageLabel.Meeting_Type.toString(),""},
//					{PageLabel.Related_Associations.toString(),taskCustomObj2Name},
//					{PageLabel.Priority.toString(),Smoke_Task2MultiplePriority},
//					{PageLabel.Comments.toString(),comment}};
//		//   {PageLabel.Related_Contacts.toString(),""},
//			ThreadSleep(10000);
//			if (tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.SCROLLANDBOOLEAN, 5)) {
//				log(LogStatus.INFO, "successfully verified all labels on task page", YesNo.No);
//			}
//			else {
//				log(LogStatus.ERROR, "could not verif all labels on task page", YesNo.Yes);
//				sa.assertTrue(false,"could not verif all labels on task page");
//			}
//			
//			if (tp.isRelatedContactEmpty(projectName, 10)) {
//				log(LogStatus.SKIP,"Related Contact Field Verified is empty For : "+Smoke_Task2MultipleUpdatedSubject,YesNo.No);	
//			} else {
//				sa.assertTrue(false,"Related Contact Field Not Verified and shoud be empty For : "+Smoke_Task2MultipleUpdatedSubject);
//				log(LogStatus.SKIP,"Related Contact Field Not Verified and shoud be empty For : "+Smoke_Task2MultipleUpdatedSubject,YesNo.Yes);
//			}
//			
//		}
//		
//		if (windowFlag) {
//			Set<String> allWindows=driver.getWindowHandles();
//			for (String s:allWindows) {
//				driver.switchTo().window(s);
//				if (!s.equalsIgnoreCase(parentId))
//					driver.close();
//			}
//			driver.switchTo().window(parentId);
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc065_2_VerifyingEditingaMultiTaggedTask2_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact3Name = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String contact1Name = Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		String contact4Name = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		String parentID=null;
//
//		TabName[] tabNames = {TabName.Object1Tab,TabName.Object1Tab,TabName.Object3Tab,TabName.TestCustomObjectTab,
//				TabName.Object2Tab,TabName.Object2Tab,TabName.Object2Tab,TabName.Object1Tab};
//
//		String[] names = {Smoke_TaskINS3Name,Smoke_TaskINS1Name,Smoke_TaskFund1Name,taskCustomObj1Name,
//				contact3Name,contact1Name,contact4Name,Smoke_TaskINS2Name};
//
//		TabName tabName ;
//		int i=0;
//		for (String name : names) {
//			tabName=tabNames[i];
//			if (cp.clickOnTab(projectName, tabName)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+name,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tabName, name, 20)) {
//					log(LogStatus.INFO,"Clicked on  : "+name+" For : "+tabName,YesNo.No);
//					ThreadSleep(1000);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);
//						ThreadSleep(2000);
//
//
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_Task2MultipleUpdatedSubject, action.BOOLEAN, 3);
//
//						if (i<6) {
//
//							if (ele==null) {
//								log(LogStatus.INFO,Smoke_Task2MultipleUpdatedSubject+" link is not present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);	
//
//							} else {
//								sa.assertTrue(false,Smoke_Task2MultipleUpdatedSubject+" link Should not  present on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//								log(LogStatus.SKIP,Smoke_Task2MultipleUpdatedSubject+" link Should not  present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//							}
//
//						} else {
//
//							if (ele!=null) {
//								log(LogStatus.INFO,Smoke_Task2MultipleUpdatedSubject+" link present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);	
//
//							} else {
//								sa.assertTrue(false,Smoke_Task2MultipleUpdatedSubject+" link Should be present on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//								log(LogStatus.SKIP,Smoke_Task2MultipleUpdatedSubject+" link Should be present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//							}
//						}
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//					}
//				} else {
//					sa.assertTrue(false,"Item Not Found : "+name+" For : "+tabName);
//					log(LogStatus.SKIP,"Item Not Found : "+name+" For : "+tabName,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+name);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+name,YesNo.Yes);
//			}
//			i++;
//			switchToDefaultContent(driver);
//		}
//
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc066_1_verifyLogACallMultipleAssociation_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		String date=todaysDate;
//		String[] taskUIdata= {Activity.Call.toString(),"--None--",Smoke_TaskINS1Name,"",date,Priority.Normal.toString(),"",Status.Completed.toString()};
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		
//		String tabs=ip.getTabName(projectName, TabName.Object1Tab)+","+ip.getTabName(projectName, TabName.Object3Tab)+","+ip.getTabName(projectName, TabName.TestCustomObjectTab);
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS1Name, 20)) {
//				WebElement ele=ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20);
//				if (click(driver, ele, "related tab activities", action.BOOLEAN)) {
//					if (click(driver,ip.getButtonLogCallMultiple(projectName, 10), "log a call", action.SCROLLANDBOOLEAN)) {
//						if (ip.verifyUIOfCreateNewTaskWindow(projectName,crmUser1FirstName+" "+crmUser1LastName,taskUIdata,false)) {
//							log(LogStatus.INFO, "successfully verified create new task ui", YesNo.No);
//						}
//						else {
//							log(LogStatus.ERROR, "could not verify create new task ui", YesNo.Yes);
//							sa.assertTrue(false, "could not verify create new task ui");
//						}
//						
//						ele= lp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TaskPage, PageLabel.Related_Contacts.toString(), action.SCROLLANDBOOLEAN,5);
//
//						if (ele==null) {
//							log(LogStatus.INFO,"Related Contact Field is not present",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"Related Contact Field should not be present");
//							log(LogStatus.SKIP,"Related Contact Field should not be present",YesNo.Yes);
//						}
//						
//					}
//					else {
//						log(LogStatus.ERROR, "could not click on new task button", YesNo.Yes);
//						sa.assertTrue(false,   "could not click on new task button");
//					}
//					if (clickUsingJavaScript(driver, ip.getcancelButton(projectName, 20),  "cancel button")) {
//					}
//					else {
//						log(LogStatus.ERROR, "could not click on cross icon", YesNo.Yes);
//						sa.assertTrue(false,   "could not click on cross icon");
//					}
//
//					if (click(driver,ip.getButtonLogCallMultiple(projectName, 10), "log a call", action.SCROLLANDBOOLEAN)) {
//						scrollDownThroughWebelement(driver, ip.relatedAssociations(projectName).get(0), "related associatons");
//						if (clickUsingJavaScript(driver, ip.getrelatedAssociationsdropdownButton(projectName, 10), "dropdown button for related associations")) {
//							List<String> l=compareMultipleListContainsByTitle(driver, tabs, ip.listOfObjectsInRelatedAssctions(projectName));
//							if (l.isEmpty()) {
//								log(LogStatus.INFO, "successfully verified presence of all tabs "+tabs, YesNo.No);
//							}
//							else {
//								for (String a:l) {
//									log(LogStatus.ERROR,"not found "+a,  YesNo.Yes);
//									sa.assertTrue(false, "not found "+a);
//								}
//							}
//							l.clear();
//							l=compareMultipleListContainsByTitle(driver,ip.getTabName(projectName, TabName.Object2Tab).toString(), ip.listOfObjectsInRelatedAssctions(projectName));
//							if (l.isEmpty()) {
//								log(LogStatus.ERROR, "tab "+TabName.Object2Tab.toString()+" is present but should not be", YesNo.Yes);
//								sa.assertTrue(false, "tab "+TabName.Object2Tab.toString()+" is present but should not be");
//							}
//							else {
//								for (String a:l) {
//									log(LogStatus.INFO,"not found "+a+" as expected",  YesNo.Yes);
//
//								}
//							}
//							//3
//							boolean flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Name.toString(), TabName.Object1Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							ele= ip.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.Object1Page,  PageLabel.Name.toString(), action.SCROLLANDBOOLEAN,10);
//							if (ele!=null) {
//								if (sendKeys(driver, ele,Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, "Related To Text Label", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"Enter Value to name Text Box : "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName,YesNo.No);	
//									ThreadSleep(1000);
//
//									ele=ip.getContactNameWithInstOrRelatedAssociationNameOnTask(projectName,  PageName.Object1Page, PageLabel.Name.toString(),
//											Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, Smoke_TaskINS1Name, action.SCROLLANDBOOLEAN, 10);
//									if (ele!=null) {
//										if (clickUsingJavaScript(driver, ele, "contact name ", action.BOOLEAN)) {
//											log(LogStatus.SKIP,"Selected "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name,YesNo.No);
//
//										} else {
//											sa.assertTrue(false,"Not Able to Select "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name);
//											log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//										}
//									}else {
//										sa.assertTrue(false,"Not found "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name);
//										log(LogStatus.SKIP,"Not found "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//									}
//								}else {
//									sa.assertTrue(false,"Not visible textbox of For Label "+PageLabel.Name);
//									log(LogStatus.SKIP,"Not visible textbox of For Label "+PageLabel.Name,YesNo.Yes);
//
//								}
//							}
//							else {
//								sa.assertTrue(false,"Not present on page: textbox of For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not present on page: textbox of For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//
//							/*flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Name.toString(), TabName.Object1Tab, Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+ Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+ Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+ Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}*/
//							
//							
//							ele = ip.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object1Page, PageLabel.Name.toString(), true, Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, action.SCROLLANDBOOLEAN, 10);
//							if (ele!=null) {
//								log(LogStatus.INFO, "successfully verified presence of "+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" in name field",YesNo.No);
//							} else {
//								sa.assertTrue(false,"not found "+ Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"not found "+ Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							
//							ele = ip.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object1Page, PageLabel.Name.toString(), true, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, action.SCROLLANDBOOLEAN, 10);
//							if (ele!=null) {
//								log(LogStatus.INFO, "successfully verified presence of "+Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" in name field",YesNo.No);
//							} else {
//								sa.assertTrue(false,"not found "+ Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"not found "+ Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							//remove icon
//							if (click(driver, ip.removeButtonInRelatedAssociations(projectName,Smoke_TaskINS1Name), "remove button", action.BOOLEAN)) {
//								log(LogStatus.SKIP,"clicked on remove icon",YesNo.No);
//
//							}
//							else {
//								log(LogStatus.ERROR, "remove Button is not clickable", YesNo.Yes);
//								sa.assertTrue(false, "remove Button is not clickable");
//							}
//							flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.Object1Tab, Smoke_TaskINS3Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskINS3Name+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							ThreadSleep(3000);
//							flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.Object3Tab, Smoke_TaskFund1Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+Smoke_TaskFund1Name+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+Smoke_TaskFund1Name+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+Smoke_TaskFund1Name+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//							flag=ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, taskCustomObj1Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+taskCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+taskCustomObj1Name+" For Label "+PageLabel.Related_Associations);
//								log(LogStatus.SKIP,"Not Able to Select "+taskCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//							}
//							
//							if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), "Subject",20), Smoke_Task2LogACallNewSubject, "Subject", action.SCROLLANDBOOLEAN)) {
//								if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), todaysDate, "due date", action.SCROLLANDBOOLEAN)) {
//									if (sendKeys(driver, ip.getcommentsTextBox(projectName, 10), Smoke_Task2LogACallNewComment, "comments", action.SCROLLANDBOOLEAN)) {
//										appLog.info(">>>");
//										if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//											log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//										}
//										else {
//											log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//											sa.assertTrue(false,"save button is not clickable so task not created" );
//										}
//										ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask18", excelLabel.Due_Date);
//									}
//									else {
//										log(LogStatus.ERROR, "comments textbox is not visible so task could not be created", YesNo.Yes);
//										sa.assertTrue(false,"comments textbox is not visible so task could not be created" );
//									}
//								}
//								else {
//									log(LogStatus.ERROR, "duedate textbox is not visible so task could not be created", YesNo.Yes);
//									sa.assertTrue(false,"duedate textbox is not visible so task could not be created" );
//								}
//							}
//							else {
//								log(LogStatus.ERROR, "subject textbox is not visible so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"subject textbox is not visible so task could not be created" );
//							}
//							switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//							click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//						}
//						else {
//							log(LogStatus.ERROR, "not able to click on dropdown of related associations so cannot check objects", YesNo.Yes);
//							sa.assertTrue(false,"not able to click on dropdown of related associations so cannot check objects" );
//						}
//					}
//					else {
//						log(LogStatus.ERROR, "not able to click on new task button", YesNo.Yes);
//						sa.assertTrue(false,"not able to click on new task button" );
//					}
//
//				}
//				else {
//					log(LogStatus.ERROR, "not able to click on related tab activities", YesNo.Yes);
//					sa.assertTrue(false,"not able to click on related tab activities" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "not able to click on created institution", YesNo.Yes);
//				sa.assertTrue(false, "not able to click on created institution" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "not able to click on institution tab", YesNo.Yes);
//			sa.assertTrue(false, "not able to click on institution tab" );
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc066_2_verifyLogACallMultipleAssociation_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+" +1");
//		taskstd1.add(Smoke_TaskINS3Name+" +2");
//		taskstd1.add(Status.Completed.toString());
//		taskstd1.add(crmUser1FirstName+" "+crmUser1LastName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Call.toString());
//		taskstd1.add(Links.View.toString());	
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask18", excelLabel.Due_Date);
//		
//		if (lp.clickOnTab(projectName, TabName.Object1Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, Smoke_TaskINS3Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2LogACallNewSubject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "inst3 is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"inst3 is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "inst/account tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"inst/account tab is not clickable, so could not verify activities task data" );
//		}
//		
//
//		if (ip.clickOnTab(projectName, TabName.Object3Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_TaskFund1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object3Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2LogACallNewSubject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "fund/deal1 is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"fund/deal1 is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "fund/deal tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"fund/deal tab is not clickable, so could not verify activities task data" );
//		}
//		if (ip.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, taskCustomObj1Name, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2LogACallNewSubject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "created custom record1 is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"created custom record1 is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "custom tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"custom tab is not clickable, so could not verify activities task data" );
//		}
//		if (ip.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2LogACallNewSubject, taskstd1, action.BOOLEAN, 10);
//					
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "contact3 is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"contact3 is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "Object2Tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"Object2Tab is not clickable, so could not verify activities task data" );
//		}
//		
//		if (ip.clickOnTab(projectName, TabName.Object2Tab)) {
//			if (ip.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName, 10)) {
//				if (click(driver, ip.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 10)
//						, "activities tab", action.SCROLLANDBOOLEAN)) {
//					switchToFrame(driver, 10,ip.getFrame(PageName.ActivitiesOrMeetings, 10));
//					click(driver, ip.getrefreshButton(projectName, 20), "refresh", action.SCROLLANDBOOLEAN);
//					ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, date, Smoke_Task2LogACallNewSubject, taskstd1, action.BOOLEAN, 10);
//					switchToDefaultContent(driver);
//				}
//				else {
//					log(LogStatus.ERROR, "related tab is not clickable, so could not verify activities task data", YesNo.Yes);
//					sa.assertTrue(false,"related tab is not clickable, so could not verify activities task data" );
//				}
//			}
//			else {
//				log(LogStatus.ERROR, "contact1 is not found, so could not verify activities task data", YesNo.Yes);
//				sa.assertTrue(false,"contact1 is not found, so could not verify activities task data" );
//			}
//		}
//		else {
//			log(LogStatus.ERROR, "Object2Tab is not clickable, so could not verify activities task data", YesNo.Yes);
//			sa.assertTrue(false,"Object2Tab tab is not clickable, so could not verify activities task data" );
//		}
//		
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc067_VerifyLinksAtActivitySearchForLogACallAfterEnablingAllowUsersSetting(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact3Name = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String contact1Name = Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//			
//		WebElement ele ;
//		String parentID=null;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contact3Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contact3Name,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//
//					String[] links = {Smoke_Task2LogACallNewSubject,contact3Name};
//					int i=0;
//					for (String link : links) {
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, link, action.BOOLEAN, 10);
//						if (ele!=null) {
//							log(LogStatus.INFO,link+" link present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);	
//
//							if (click(driver, ele, link, action.BOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on : "+link,YesNo.No);
//								parentID = switchOnWindow(driver);
//								if (parentID!=null) {
//									log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+link,YesNo.Yes);
//									ThreadSleep(1000);
//									if (i<=1) {
//										ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page, link, action.BOOLEAN, 10);
//										if (ele!=null) {	
//											log(LogStatus.INFO,"Landing Page Verified for : "+link,YesNo.No);	
//										} else {
//											sa.assertTrue(false,"Landing Page Not Verified for : "+link);
//											log(LogStatus.SKIP,"Landing Page Not Verified for : "+link,YesNo.Yes);
//										}
//
//										if (i==0) {
//											String relatedAssoctaion=tp.Comment(projectName, PageLabel.Related_Associations, Smoke_TaskINS3Name)+", "+Smoke_TaskFund1Name+", "+taskCustomObj1Name;
//											String relatedContactValue= tp.Comment(projectName, PageLabel.Related_Contacts, contact1Name);
//											String comment = relatedContactValue+"\n"+relatedAssoctaion+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_Task2LogACallNewComment;
//
//											String[][] fieldsWithValues= {{PageLabel.Assigned_To.toString(),owner},
//													{PageLabel.Status.toString(),Status.Completed.toString()},
//													{PageLabel.Subject.toString(),Smoke_Task2LogACallNewSubject},
//													{PageLabel.Name.toString(),contact3Name+"\n + "+1},
//													{PageLabel.Due_Date.toString(),Smoke_Task2LogACallNewDate},
//													{PageLabel.Related_To.toString(),""},
//													{PageLabel.Meeting_Type.toString(),""},
//													{PageLabel.Related_Associations.toString(),Smoke_TaskINS3Name+", "+Smoke_TaskFund1Name+", "+taskCustomObj1Name},
//													{PageLabel.Related_Contacts.toString(),contact1Name},
//													{PageLabel.Priority.toString(),Smoke_Task2LogACallNewPriority},
//													{PageLabel.Comments.toString(),comment}};
//
//											tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);	
//										}
//										driver.close();
//										driver.switchTo().window(parentID);
//									}
//
//
//								} else {
//									sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+link);
//									log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+link,YesNo.Yes);
//								}
//
//							} else {
//								sa.assertTrue(false,"Not Able to Click on : "+link);
//								log(LogStatus.SKIP,"Not Able to Click on : "+link,YesNo.Yes);
//							}
//						} else {
//							sa.assertTrue(false,link+" link not present on Sub Tab : "+RelatedTab.Activities);
//							log(LogStatus.SKIP,link+" link not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//						}
//						i++;
//					}
//
//					for (int j = 0; j < 2; j++) {
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//						String link="1";
//						ele = cp.getLinkOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_Task2LogACallNewSubject, contact3Name, link, action.BOOLEAN, 5);
//					//	ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, link, action.BOOLEAN, 10);
//
//						if (click(driver, ele, link, action.BOOLEAN)) {
//
//
//							if (j==0) {
//								List<String> s=null;
//								s=compareMultipleList(driver, contact1Name, ip.createdRelatedContactNameOnPopUp(projectName));
//								if (s.isEmpty()) {
//									log(LogStatus.INFO, "Successfully verified related Contact names on PopUp", YesNo.No);
//									if (ip.verifyAllRecordsOnCreatedContactName(projectName, PageName.TaskPage,contact1Name)) {
//										log(LogStatus.INFO,"successfully verified Contact PopuP wINDOW", YesNo.No);
//									}
//									else {
//										log(LogStatus.ERROR,  "could not verify Contact PopuP Link: ", YesNo.Yes);
//										sa.assertTrue(false,  "could not verify Contact PopuP Link: ");
//									}
//								}
//								else {
//									for(String e:s) {
//										log(LogStatus.ERROR,  "could not verify could not verify Contact PopuP Link: : " +e.toString(), YesNo.Yes);
//										sa.assertTrue(false,  "could not verify could not verify Contact PopuP Link:  " +e.toString());
//									}
//								}
//
//								if (click(driver, ip.getCrossIconRAorComment(projectName,"CN", 10), "ok icon", action.BOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on Cross Icon Related Contact PoPUp", YesNo.No);
//									ThreadSleep(5000);
//									if (ip.getCrossIconRAorComment(projectName,"CN", 2)==null) {
//										log(LogStatus.INFO,  "Related Contact PoPUp is Close After Click on Cross Icon", YesNo.No);
//									} else {
//										log(LogStatus.ERROR,  "Related Contact PoPUp Not Close After Click on Cross Icon", YesNo.Yes);
//										sa.assertTrue(false,  "Related Contact PoPUp Not Close After Click on Cross Icon");
//									}
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Click on Cross Icon Related Contact PoPUp", YesNo.Yes);
//									sa.assertTrue(false,  "Not Able to Click on Cross Icon Related Contact PoPUp");
//
//								}
//							} else {
//
//								if (click(driver, ip.getOkButtonRAorComment(projectName,"CN", 10), "Ok Button", action.BOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on ok Button Related Contact PoPUp", YesNo.No);
//									ThreadSleep(5000);
//									if (ip.getCrossIconRAorComment(projectName,"CN", 2)==null) {
//										log(LogStatus.INFO,  "Related Contact PoPUp is Close After Click on Ok Button", YesNo.No);
//									} else {
//										log(LogStatus.ERROR,  "Related Contact PoPUp Not Close After Click on Ok Button", YesNo.Yes);
//										sa.assertTrue(false,  "Related Contact PoPUp Not Close After Click on Ok Button");
//									}
//								}
//								else {
//									log(LogStatus.ERROR,  "Not Able to Click on ok Button Related Contact PoPUp", YesNo.Yes);
//									sa.assertTrue(false,  "Not Able to Click on ok Button Related Contact PoPUp");
//
//								}
//
//							}
//
//						} else {
//							sa.assertTrue(false,link+" link not present on Sub Tab : "+RelatedTab.Activities);
//							log(LogStatus.SKIP,link+" link not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//						}
//
//					}
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contact3Name);
//				log(LogStatus.SKIP,"Contact Not Found : "+contact3Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc068_1_VerifyingEditingaMultiTaggedTask2LogACall_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact3Name = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String contact1Name = Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		String contact4Name = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//
//		String crmUserName = crmUser1FirstName+" "+crmUser1LastName;
//		String adminUerName = AdminUserFirstName+" "+AdminUserLastName;
//
//		String value="";
//		boolean flag=false;
//		List<String> items = new LinkedList<String>();		
//		WebElement ele;
//		String task1 = Smoke_Task2LogACallNewSubject;	
//		String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask18", excelLabel.Due_Date);
//
//
//		String parentId="";
//		boolean windowFlag=false;
//		String customObject1=taskCustomObj1Name;
//		switchToDefaultContent(driver);
//		if (cp.clickOnTab(projectName, TabName.TestCustomObjectTab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.TestCustomObjectTab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.TestCustomObjectTab, customObject1, 20)) {
//				log(LogStatus.INFO,"Clicked on custom object: "+customObject1,YesNo.No);
//				ThreadSleep(1000);
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(10000);
//					 
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.TestCustomObjectPage, RelatedTab.Activities, task1, action.BOOLEAN, 10);
//					if (click(driver, ele, task1, action.SCROLLANDBOOLEAN)) {
//						log(LogStatus.INFO,"Click on : "+task1+ " on "+RelatedTab.Activities,YesNo.No);		
//						 parentId=switchOnWindow(driver);
//						 windowFlag=true;;
//						ele = cp.getEditButton(projectName, 10);
//						if (click(driver, ele, "Edit Button ", action.BOOLEAN)) {
//							log(LogStatus.INFO,"Click on Edit Button : "+task1,YesNo.No);	
//							ThreadSleep(5000);
//							
//							String[] taskUIdata= {task1,"--None--",Smoke_TaskINS3Name+","+Smoke_TaskFund1Name+","+taskCustomObj1Name,Smoke_Task2LogACallNewComment,Smoke_Task2LogACallNewDate,Smoke_Task2LogACallNewPriority,Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName+","+Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName,Status.Completed.toString()};
//							
//							if (ip.verifyUIOfCreateNewTaskWindow(projectName,crmUserName,taskUIdata,true )) {
//								log(LogStatus.INFO, "successfully verified task ui edit mode", YesNo.No);
//							}
//							else {
//								log(LogStatus.ERROR, "could not verify create new task ui", YesNo.Yes);
//								sa.assertTrue(false, "could not verify create new task ui");
//							}
//							
//							// Assertion Name
//
//							items.add(contact3Name);
//							items.add(contact1Name);
//							items.add(contact4Name);
//							for (int i = 0; i < items.size(); i++) {
//								value=items.get(i);
//								if (value.equals(contact4Name)) {
//									flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(), TabName.TestCustomObjectTab, value, action.SCROLLANDBOOLEAN, 10);		
//									if (flag) {
//										log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Name,YesNo.No);
//
//										List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(),true, action.SCROLLANDBOOLEAN, 15);
//										if (!eleList.isEmpty() && eleList.size()==1) {
//											log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Name.toString(),YesNo.No);	
//										} else {
//											sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//											log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//										}
//
//										ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(),true, value, action.SCROLLANDBOOLEAN, 5);
//										if (ele!=null) {
//											log(LogStatus.INFO, value+" Found For Label "+PageLabel.Name.toString(),YesNo.No);	
//										} else {
//											sa.assertTrue(false,value+" not Found For Label "+PageLabel.Name.toString());
//											log(LogStatus.ERROR, value+" not Found For Label "+PageLabel.Name.toString(),YesNo.Yes);
//
//										}
//
//
//
//									} else {
//										sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Name);
//										log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Name,YesNo.Yes);
//
//									}
//								}else {
//									if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(),true, value, action.SCROLLANDBOOLEAN, 5)) {
//										log(LogStatus.INFO, "Clicked on Cross Button against : "+value+" For Label : "+PageLabel.Name.toString(),YesNo.No);	
//									} else {
//										sa.assertTrue(false,"Not Able to Click on Cross Button against : "+value+" For Label : "+PageLabel.Name.toString());
//										log(LogStatus.ERROR, "Not Able to Click on Cross Button against : "+value+" For Label : "+PageLabel.Name.toString(),YesNo.Yes);
//									}
//
//								}
//							}
//
//
//							//3rd Assertion Related_Associations
//							items=new LinkedList<String>();
//							items.add(Smoke_TaskINS3Name);
//							items.add(Smoke_TaskFund1Name);
//							items.add(taskCustomObj1Name);
//							items.add(taskCustomObj2Name);
//							for (int i = 0; i < items.size(); i++) {
//								value=items.get(i);
//								if (value.equals(taskCustomObj2Name)) {
//									flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, value, action.SCROLLANDBOOLEAN, 10);		
//									if (flag) {
//										log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Related_Associations,YesNo.No);
//
//										List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(),true, action.SCROLLANDBOOLEAN, 15);
//										if (!eleList.isEmpty() && eleList.size()==1) {
//											log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//										} else {
//											sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Related_Associations.toString());
//											log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//										}
//
//										ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(),true, value, action.SCROLLANDBOOLEAN, 5);
//										if (ele!=null) {
//											log(LogStatus.INFO, value+" Found For Label "+PageLabel.Related_Associations.toString(),YesNo.No);	
//										} else {
//											sa.assertTrue(false,value+" not Found For Label "+PageLabel.Related_Associations.toString());
//											log(LogStatus.ERROR, value+" not Found For Label "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//										}
//
//
//
//									} else {
//										sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Related_Associations);
//										log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//									}
//								}else {
//									if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Related_Associations.toString(),true, value, action.SCROLLANDBOOLEAN, 5)) {
//										log(LogStatus.INFO, "Clicked on Cross Button against : "+value+" For Label : "+PageLabel.Related_Associations.toString(),YesNo.No);	
//									} else {
//										sa.assertTrue(false,"Not Able to Click on Cross Button against : "+value+" For Label : "+PageLabel.Related_Associations.toString());
//										log(LogStatus.ERROR, "Not Able to Click on Cross Button against : "+value+" For Label : "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//									}
//
//								}
//							}
//
//
//							// 4TH ASSERTION
//
//							items=new LinkedList<String>();
//							items.add(crmUserName);
//							items.add(adminUerName);
//							for (int i = 0; i < items.size(); i++) {
//								value=items.get(i);
//								if (value.equals(adminUerName)) {
//
//
//									ele= cp.getLabelTextBoxForNameOrRelatedAssociationOnTask(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(), action.BOOLEAN,5);
//									if (click(driver, ele, "Assigned To Text Box", action.BOOLEAN)) {
//										log(LogStatus.INFO,"Clicked on  Assigned To Text Box : ",YesNo.No);	
//										ThreadSleep(1000);
//
//										ele =  cp.getContactNameOrRelatedAssociationNameOnTask(projectName,  PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(),crmUserName, action.BOOLEAN,5);
//										if (ele!=null) {
//											log(LogStatus.INFO,crmUserName+" is available at Assigned Field",YesNo.No);
//											ThreadSleep(2000);
//										} else {
//											sa.assertTrue(false,crmUserName+" is not available at Assigned Field");
//											log(LogStatus.SKIP,crmUserName+" is not available at Assigned Field",YesNo.Yes);	
//										}
//
//									}else {
//										sa.assertTrue(false,"Not Able to Click Assigned To Text Box : ");
//										log(LogStatus.SKIP,"Not Able to Click Value to Assigned To Text Box : ",YesNo.Yes);	
//									}
//									flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(), TabName.TestCustomObjectTab, value, action.SCROLLANDBOOLEAN, 10);		
//									if (flag) {
//										log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Assigned_To,YesNo.No);
//
//										List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(),false, action.SCROLLANDBOOLEAN, 15);
//										if (!eleList.isEmpty() && eleList.size()==1) {
//											log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Assigned_To.toString(),YesNo.No);	
//										} else {
//											sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Assigned_To.toString());
//											log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//
//										}
//
//										ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(),false, value, action.SCROLLANDBOOLEAN, 5);
//										if (ele!=null) {
//											log(LogStatus.INFO, value+" Found For Label "+PageLabel.Assigned_To.toString(),YesNo.No);	
//										} else {
//											sa.assertTrue(false,value+" not Found For Label "+PageLabel.Assigned_To.toString());
//											log(LogStatus.ERROR, value+" not Found For Label "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//
//										}
//
//
//
//									} else {
//										sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Assigned_To);
//										log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Assigned_To,YesNo.Yes);
//
//									}
//								}else {
//									if (tp.ClickOnCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Assigned_To.toString(),false, value, action.SCROLLANDBOOLEAN, 5)) {
//										log(LogStatus.INFO, "Clicked on Cross Button against : "+value+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.No);	
//									} else {
//										sa.assertTrue(false,"Not Able to Click on Cross Button against : "+value+" For Label : "+PageLabel.Assigned_To.toString());
//										log(LogStatus.ERROR, "Not Able to Click on Cross Button against : "+value+" For Label : "+PageLabel.Assigned_To.toString(),YesNo.Yes);
//									}
//
//								}
//							}
//
//
//							// 5th Assertion
//							if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), PageLabel.Subject.toString(),20), Smoke_Task2LogACallNewUpdatedSubject,  PageLabel.Subject.toString(), action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO, "Entered Value on Subject Field: "+Smoke_Task2LogACallNewUpdatedSubject, YesNo.No);	
//								if (sendKeys(driver, ip.getdueDateTextBoxInNewTask(projectName, 20), tomorrowsDate, "due date", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO, "Entered Value on Date Field: "+tomorrowsDate, YesNo.No);
//									 
//									flag=false;
//									if (click(driver, ip.getCustomTabSaveBtn(projectName, 10),"save", action.SCROLLANDBOOLEAN)) {
//										flag=true;
//										log(LogStatus.INFO, "successfully clicked on save and edited task", YesNo.No);
//										date=tomorrowsDate;
//										ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask18", excelLabel.Due_Date);
//
//									}
//									else {
//										sa.assertTrue(false,"could not click cross on save, so cannot edit task");
//										log(LogStatus.ERROR, "could not click cross on save, so cannot edit task",YesNo.Yes);
//									}
//								}else {
//									sa.assertTrue(false,"due date field is visible, so cannot edit task");
//									log(LogStatus.ERROR, "due date field is visible, so cannot edit task",YesNo.Yes);
//								}
//							}
//							else {
//								sa.assertTrue(false,"subject field is visible, so cannot edit task");
//								log(LogStatus.ERROR, "subject field is visible, so cannot edit task",YesNo.Yes);
//							}
//
//
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Edit Button : "+task1);
//							log(LogStatus.SKIP,"Not Able to Click on Edit Button : "+task1,YesNo.Yes);
//						}
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on : "+task1+ " on "+RelatedTab.Activities);
//						log(LogStatus.SKIP,"Not Able to Click on : "+task1+ " on "+RelatedTab.Activities,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"custom object Not Found : "+customObject1);
//				log(LogStatus.SKIP,"custom object  Not Found : "+customObject1,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.TestCustomObjectTab,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//		if (flag) {
//
//			String relatedAssoctaion=tp.Comment(projectName, PageLabel.Related_Associations, taskCustomObj2Name);
//			String comment = relatedAssoctaion+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_Task2LogACallNewComment;
//
//			String[][] fieldsWithValues= {{PageLabel.Assigned_To.toString(),adminUerName},
//					{PageLabel.Status.toString(),Status.Completed.toString()},
//					{PageLabel.Subject.toString(),Smoke_Task2LogACallNewUpdatedSubject},
//					{PageLabel.Name.toString(), Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName},
//					{PageLabel.Due_Date.toString(),date},
//					{PageLabel.Meeting_Type.toString(),""},
//					{PageLabel.Related_Associations.toString(),taskCustomObj2Name},
//					{PageLabel.Priority.toString(),Smoke_Task2LogACallNewPriority},
//					{PageLabel.Comments.toString(),comment}};
//			//   {PageLabel.Related_Contacts.toString(),""},
//			ThreadSleep(10000);
//			if (tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.SCROLLANDBOOLEAN, 5)) {
//				log(LogStatus.INFO, "successfully verified all labels on task page", YesNo.No);
//			}
//			else {
//				log(LogStatus.ERROR, "could not verif all labels on task page", YesNo.Yes);
//				sa.assertTrue(false,"could not verif all labels on task page");
//			}
//
//			if (tp.isRelatedContactEmpty(projectName, 10)) {
//				log(LogStatus.SKIP,"Related Contact Field Verified is empty For : "+Smoke_Task2LogACallNewUpdatedSubject,YesNo.No);	
//			} else {
//				sa.assertTrue(false,"Related Contact Field Not Verified and shoud be empty For : "+Smoke_Task2LogACallNewUpdatedSubject);
//				log(LogStatus.SKIP,"Related Contact Field Not Verified and shoud be empty For : "+Smoke_Task2LogACallNewUpdatedSubject,YesNo.Yes);
//			}
//			
//		}
//		
//		if (windowFlag) {
//			Set<String> allWindows=driver.getWindowHandles();
//			for (String s:allWindows) {
//				driver.switchTo().window(s);
//				if (!s.equalsIgnoreCase(parentId))
//					driver.close();
//			}
//			driver.switchTo().window(parentId);
//		}
//		
//		
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc068_2_VerifyingEditingaMultiTaggedTask2LogACall_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact3Name = Smoke_TaskContact3FName+" "+Smoke_TaskContact3LName;
//		String contact1Name = Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		String contact4Name = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		String parentID=null;
//
//		TabName[] tabNames = {TabName.Object1Tab,TabName.Object1Tab,TabName.Object3Tab,TabName.TestCustomObjectTab,
//				TabName.Object2Tab,TabName.Object2Tab,TabName.Object2Tab,TabName.Object1Tab};
//
//		String[] names = {Smoke_TaskINS3Name,Smoke_TaskINS1Name,Smoke_TaskFund1Name,taskCustomObj1Name,
//				contact3Name,contact1Name,contact4Name,Smoke_TaskINS2Name};
//
//		TabName tabName ;
//		int i=0;
//		for (String name : names) {
//			tabName=tabNames[i];
//			if (cp.clickOnTab(projectName, tabName)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+name,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tabName, name, 20)) {
//					log(LogStatus.INFO,"Clicked on  : "+name+" For : "+tabName,YesNo.No);
//					ThreadSleep(1000);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);
//						ThreadSleep(2000);
//
//
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_Task2LogACallNewUpdatedSubject, action.BOOLEAN, 3);
//
//						if (i<6) {
//
//							if (ele==null) {
//								log(LogStatus.INFO,Smoke_Task2LogACallNewUpdatedSubject+" link is not present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);	
//
//							} else {
//								sa.assertTrue(false,Smoke_Task2LogACallNewUpdatedSubject+" link Should not  present on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//								log(LogStatus.SKIP,Smoke_Task2LogACallNewUpdatedSubject+" link Should not  present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//							}
//
//						} else {
//
//							if (ele!=null) {
//								log(LogStatus.INFO,Smoke_Task2LogACallNewUpdatedSubject+" link present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);	
//
//							} else {
//								sa.assertTrue(false,Smoke_Task2LogACallNewUpdatedSubject+" link Should be present on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//								log(LogStatus.SKIP,Smoke_Task2LogACallNewUpdatedSubject+" link Should be present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//							}
//						}
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//					}
//				} else {
//					sa.assertTrue(false,"Item Not Found : "+name+" For : "+tabName);
//					log(LogStatus.SKIP,"Item Not Found : "+name+" For : "+tabName,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+name);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+name,YesNo.Yes);
//			}
//			i++;
//			switchToDefaultContent(driver);
//		}
//
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc069_VerifyNewMeetingActionAfterEnablingTasksandEventsSetting(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact3Name = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		String contact1Name = Smoke_MTContact1FName+" "+Smoke_MTContact1LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		String date = getDateAccToTimeZone("America/New_York", "M/d/YYYY");
//		boolean flag=false;
//
//		String contactNames[] = {contact3Name,contact1Name};
//		RelatedTab relatedTab = RelatedTab.Meetings;
//
//		if (cp.clickOnTab(projectName, TabName.Object3Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object3Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object3Tab, Smoke_MTFund1Name, 20)) {
//				log(LogStatus.INFO,"Clicked on Fund/Deal : "+Smoke_MTFund1Name,YesNo.No);
//				ThreadSleep(1000);
//				refresh(driver);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object3Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//
//					if (clickUsingJavaScript(driver, cp.getNewMeetingButton(projectName, 60), "New Meeting Button", action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New Meeting button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//						ThreadSleep(2000);	
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page,PageLabel.New_Task.toString(), action.BOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						ele = cp.getRelatedAssciationDefaultSelectedDropDown(projectName, TabName.Object1Tab, PageLabel.Related_Associations.toString(), action.SCROLLANDBOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO, "Default Selected For "+PageLabel.Related_Associations.toString()+" Verified",YesNo.No);	
//
//
//						} else {
//							sa.assertTrue(false,"Default Selected For "+PageLabel.Related_Associations.toString()+" Not Verified");
//							log(LogStatus.ERROR, "Default Selected For "+PageLabel.Related_Associations.toString()+" Not Verified",YesNo.Yes);
//
//						}
//
//						List<WebElement> eleList = cp.getAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(),false, action.SCROLLANDBOOLEAN, 15);
//						if (!eleList.isEmpty() && eleList.size()==1) {
//							log(LogStatus.INFO, "Label field is filled with value for "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//							ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(),false, Smoke_MTFund1Name, action.SCROLLANDBOOLEAN, 15);
//							if (ele!=null) {
//								log(LogStatus.INFO, Smoke_MTFund1Name+" is prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.No);	
//
//
//							} else {
//								sa.assertTrue(false,Smoke_MTFund1Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString());
//								log(LogStatus.ERROR, Smoke_MTFund1Name+" is not prefilled for Label "+PageLabel.Related_Associations.toString(),YesNo.Yes);
//
//							}
//
//						} else {
//							sa.assertTrue(false,"Label field sholud be filled with value for "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, "Label field sholud be filled with value for "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//
//						for (String  contactName : contactNames) {
//
//							flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), TabName.Object2Tab, contactName, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.SKIP,"Selected "+contactName+" For Label "+PageLabel.Name,YesNo.No);
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+contactName+" For Label "+PageLabel.Name);
//								log(LogStatus.SKIP,"Not Able to Select "+contactName+" For Label "+PageLabel.Name,YesNo.Yes);
//
//							}
//
//						}
//
//
//						// Subject
//
//						String[][] dropDownLabelWithValues = {{PageLabel.Meeting_Type.toString(),Smoke_DealClosureMeetingType}};
//						if (tp.enteringSubjectAndSelectDropDownValuesonTaskPopUp(projectName, PageName.TestCustomObjectPage, Smoke_DealClosureMeetingSubject, dropDownLabelWithValues, action.SCROLLANDBOOLEAN, 10)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//
//							if (clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//
//
//								ele = cp.getCreatedConfirmationMsg(projectName, 15);
//								if (ele!=null) {
//									String actualValue = ele.getText().trim();
//									String expectedValue=tp.taskCreatesMsg(projectName, Smoke_DealClosureMeetingSubject);
//									if (actualValue.contains(expectedValue)) {
//										log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//									} else {
//										log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//										BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//									}
//								} else {
//									sa.assertTrue(false,"Created Task Msg Ele not Found");
//									log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//								}
//
//								switchToDefaultContent(driver);
//								switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//								ele=cp.getRefreshIconOnSearchResultForMeeting(projectName, PageName.Object2Page,relatedTab,action.BOOLEAN, 20);
//								if (click(driver, ele, "Refresh Icon", action.BOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on Refesh Button", YesNo.No);	
//									ThreadSleep(1000);	
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//									List<String> taskstd1=new LinkedList<String>();
//									taskstd1.add(contact3Name+" +"+1);
//									taskstd1.add(Smoke_MTFund1Name);
//									taskstd1.add(Status.Not_Started.toString());
//									taskstd1.add(owner);
//									taskstd1.add(Smoke_DealClosureMeetingType);
//									taskstd1.add(Activity.Task.toString());
//									taskstd1.add(Links.View.toString());	
//									cp.verifyingRelatedTabData2(projectName, PageName.Object3Page, relatedTab, "", Smoke_DealClosureMeetingSubject, taskstd1, action.BOOLEAN, 10);
//
//
//								} else {
//									log(LogStatus.ERROR, "Not Able to Click on Refesh Button so can not check created : "+Smoke_DealClosureMeetingSubject, YesNo.Yes);
//									sa.assertTrue(false,"Not Able to Click on Refesh Button so can not check created : "+Smoke_DealClosureMeetingSubject );
//
//								}
//
//
//
//							}
//							else {
//								log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//								sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//							}
//
//
//						}
//
//						else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings);
//						log(LogStatus.SKIP,"Not Able to Click on New Meeting button on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab,YesNo.Yes);
//				}
//
//
//
//			} else {
//				sa.assertTrue(false,"Fund/Deal Not Found : "+Smoke_MTFund1Name);
//				log(LogStatus.SKIP,"Fund/Deal  Not Found : "+Smoke_MTFund1Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object3Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object3Tab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc070_1_CreateMeetingFromDetailPageVerifyingRespectivePages_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//
//		String contact1Name = Smoke_MTContact1FName+" "+Smoke_MTContact1LName;
//		String crmUserName = crmUser1FirstName+" "+crmUser1LastName;
//
//		String value="";
//		boolean flag=false;
//		List<String> items = new LinkedList<String>();		
//		WebElement ele;
//
//		switchToDefaultContent(driver);
//
//		String contact3Name = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		String meetingSubject=Smoke_DetailPageMeetingSubject;
//		String meetingType=Smoke_DetailPageMeetingType;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contact3Name, 20)) {
//				log(LogStatus.INFO,"Clicked on  object: "+contact3Name,YesNo.No);
//				ThreadSleep(1000);
//
//				if (cp.clickOnShowMoreDropdownOnly(projectName, PageName.Object2Page)) {
//					log(LogStatus.INFO,"Able to Click on Show more Icon : "+TabName.Object2Tab+" For : "+contact3Name,YesNo.No);
//					ThreadSleep(500);
//					ele = cp.actionDropdownElement(projectName, PageName.Object2Page, ShowMoreActionDropDownList.New_Meeting, 10);
//					if (click(driver, ele, ShowMoreActionDropDownList.New_Meeting.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Able to Click on "+ShowMoreActionDropDownList.New_Meeting,YesNo.No);
//						ThreadSleep(500);
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page,PageLabel.New_Task.toString(), action.BOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(),true, contact3Name, action.SCROLLANDBOOLEAN, 5);
//						if (ele!=null) {
//							log(LogStatus.INFO, value+" Found For Label "+PageLabel.Name.toString(),YesNo.No);	
//						} else {
//							sa.assertTrue(false,value+" not Found For Label "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, value+" not Found For Label "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//
//						value=contact1Name;
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), TabName.TestCustomObjectTab, value, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Name,YesNo.No);
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Name);
//							log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Name,YesNo.Yes);
//
//						}
//
//
//						value=Smoke_MTFund1Name;
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object3Tab, value, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Related_Associations,YesNo.No);
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//						}
//
//						value=meetingCustomObj1Name;
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, value, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Related_Associations,YesNo.No);
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//						}
//
//
//
//						// Subject
//
//						String[][] dropDownLabelWithValues = {{PageLabel.Meeting_Type.toString(),meetingType}};
//						if (tp.enteringSubjectAndSelectDropDownValuesonTaskPopUp(projectName, PageName.Object2Page, meetingSubject, dropDownLabelWithValues, action.SCROLLANDBOOLEAN, 10)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//							 
//							if (clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//
//
//								ele = cp.getCreatedConfirmationMsg(projectName, 15);
//								if (ele!=null) {
//									String actualValue = ele.getText().trim();
//									String expectedValue=tp.taskCreatesMsg(projectName, meetingSubject);
//									if (actualValue.contains(expectedValue)) {
//										log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//									} else {
//										log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//										BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//									}
//								} else {
//									sa.assertTrue(false,"Created Task Msg Ele not Found");
//									log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//								}
//
//
//
//								if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Meetings, 20), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on  "+RelatedTab.Meetings.toString(), YesNo.No);	
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//									ThreadSleep(1000);	
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//									List<String> taskstd1=new LinkedList<String>();
//									taskstd1.add(contact3Name+" +"+1);
//									taskstd1.add(Smoke_MTFund1Name+" +"+1);
//									taskstd1.add(Status.Not_Started.toString());
//									taskstd1.add(crmUserName);
//									taskstd1.add(meetingType);
//									taskstd1.add(Activity.Task.toString());
//									taskstd1.add(Links.View.toString());	
//									cp.verifyingRelatedTabData2(projectName, PageName.Object2Page, RelatedTab.Meetings, "", meetingSubject, taskstd1, action.BOOLEAN, 10);
//
//								}
//
//
//
//							}
//							else {
//								log(LogStatus.ERROR, "Not Able to Click on Save Button", YesNo.Yes);
//								sa.assertTrue(false,"Not Able to Click on Save Button" );
//							}
//
//
//						}
//
//						else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on "+ShowMoreActionDropDownList.New_Meeting);
//						log(LogStatus.SKIP,"Not Able to Click on "+ShowMoreActionDropDownList.New_Meeting,YesNo.Yes);
//					}
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Show more Icon : "+TabName.Object2Tab+" For : "+contact3Name);
//					log(LogStatus.SKIP,"Not Able to Click on Show more Icon : "+TabName.Object2Tab+" For : "+contact3Name,YesNo.Yes);
//				}
//
//
//			} else {
//				sa.assertTrue(false," object Not Found : "+contact3Name);
//				log(LogStatus.SKIP," object  Not Found : "+contact3Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc070_2_CreateMeetingFromDetailPageVerifyingRespectivePages_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact1Name = Smoke_MTContact1FName+" "+Smoke_MTContact1LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		String parentID=null;
//
//		String contact3Name = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		String meetingSubject=Smoke_DetailPageMeetingSubject;
//		String meetingType=Smoke_DetailPageMeetingType;
//		String crmUserName = crmUser1FirstName+" "+crmUser1LastName;
//
//
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contact3Name+" +"+1);
//		taskstd1.add(Smoke_MTFund1Name+" +"+1);
//		taskstd1.add(Status.Not_Started.toString());
//		taskstd1.add(crmUserName);
//		taskstd1.add(meetingType);
//		taskstd1.add(Activity.Task.toString());
//		taskstd1.add(Links.View.toString());
//
//		TabName[] tabNames = {TabName.Object1Tab,TabName.Object2Tab,TabName.TestCustomObjectTab,TabName.Object3Tab};
//
//		String[] names = {Smoke_MTINS2Name,contact1Name,meetingCustomObj1Name,Smoke_MTFund1Name};
//
//		TabName tabName ;
//		int i=0;
//		for (String name : names) {
//			tabName=tabNames[i];
//			if (cp.clickOnTab(projectName, tabName)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+name,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tabName, name, 20)) {
//					log(LogStatus.INFO,"Clicked on  : "+name+" For : "+tabName,YesNo.No);
//					ThreadSleep(1000);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Meetings, 20), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings+" For : "+name,YesNo.No);
//						ThreadSleep(2000);
//
//
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Meetings, meetingSubject, action.BOOLEAN, 3);
//
//						if (ele!=null) {
//							log(LogStatus.INFO,meetingSubject+" link present on Sub Tab : "+RelatedTab.Meetings+" For : "+name,YesNo.No);	
//							cp.verifyingRelatedTabData2(projectName, PageName.Object2Page, RelatedTab.Meetings, "", meetingSubject, taskstd1, action.BOOLEAN, 10);
//
//							ele = cp.getInfoImgIcon(projectName, PageName.Object2Page, RelatedTab.Meetings, meetingSubject, tabObj3);
//							if (ele!=null) {
//								log(LogStatus.INFO,tabObj3+" Info image link present on Sub Tab : "+RelatedTab.Meetings+" For : "+name+" verified",YesNo.No);	
//							} else {
//								sa.assertTrue(false,tabObj3+" Info image link present on Sub Tab : "+RelatedTab.Meetings+" For : "+name+" not verified");
//								log(LogStatus.SKIP,tabObj3+" Info image link present on Sub Tab : "+RelatedTab.Meetings+" For : "+name+" not verified",YesNo.Yes);
//							}
//							
//							
//							ele = cp.getInfoImgIcon(projectName, PageName.Object2Page, RelatedTab.Meetings, meetingSubject, tabObj2);
//							if (ele!=null) {
//								log(LogStatus.INFO,tabObj2+" Info image link present on Sub Tab : "+RelatedTab.Meetings+" For : "+name+" verified",YesNo.No);	
//							} else {
//								sa.assertTrue(false,tabObj2+" Info image link present on Sub Tab : "+RelatedTab.Meetings+" For : "+name+" not verified");
//								log(LogStatus.SKIP,tabObj2+" Info image link present on Sub Tab : "+RelatedTab.Meetings+" For : "+name+" not verified",YesNo.Yes);
//							}
//							
//
//						} else {
//							sa.assertTrue(false,meetingSubject+" link Should be present on Sub Tab : "+RelatedTab.Meetings+" For : "+name);
//							log(LogStatus.SKIP,meetingSubject+" link Should be present on Sub Tab : "+RelatedTab.Meetings+" For : "+name,YesNo.Yes);
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings+" For : "+name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings+" For : "+name,YesNo.Yes);
//					}
//				} else {
//					sa.assertTrue(false,"Item Not Found : "+name+" For : "+tabName);
//					log(LogStatus.SKIP,"Item Not Found : "+name+" For : "+tabName,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+name);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+name,YesNo.Yes);
//			}
//			i++;
//			switchToDefaultContent(driver);
//		}
//
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc071_1_CreateTaskFromDetailPageVerifyingRespectivePages_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//
//		String contact1Name = Smoke_MTContact1FName+" "+Smoke_MTContact1LName;
//		String crmUserName = crmUser1FirstName+" "+crmUser1LastName;
//
//		String value="";
//		boolean flag=false;
//		List<String> items = new LinkedList<String>();		
//		WebElement ele;
//
//		switchToDefaultContent(driver);
//
//		String contact3Name = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		String meetingSubject=Smoke_DetailPageNewTaskMultipleSubject;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contact3Name, 20)) {
//				log(LogStatus.INFO,"Clicked on  object: "+contact3Name,YesNo.No);
//				ThreadSleep(1000);
//
//				if (cp.clickOnShowMoreDropdownOnly(projectName, PageName.Object2Page)) {
//					log(LogStatus.INFO,"Able to Click on Show more Icon : "+TabName.Object2Tab+" For : "+contact3Name,YesNo.No);
//					ThreadSleep(500);
//					ele = cp.actionDropdownElement(projectName, PageName.Object2Page, ShowMoreActionDropDownList.NewTaskWithMultiple, 10);
//					if (click(driver, ele, ShowMoreActionDropDownList.NewTaskWithMultiple.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Able to Click on "+ShowMoreActionDropDownList.NewTaskWithMultiple,YesNo.No);
//						ThreadSleep(500);
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page,PageLabel.New_Task.toString(), action.BOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(),true, contact3Name, action.SCROLLANDBOOLEAN, 5);
//						if (ele!=null) {
//							log(LogStatus.INFO, value+" Found For Label "+PageLabel.Name.toString(),YesNo.No);	
//						} else {
//							sa.assertTrue(false,value+" not Found For Label "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, value+" not Found For Label "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//
//						value=contact1Name;
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), TabName.TestCustomObjectTab, value, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Name,YesNo.No);
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Name);
//							log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Name,YesNo.Yes);
//
//						}
//
//
//						value=Smoke_MTFund1Name;
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object3Tab, value, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Related_Associations,YesNo.No);
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//						}
//
//						value=meetingCustomObj1Name;
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, value, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Related_Associations,YesNo.No);
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//						}
//
//
//
//						// Subject
//
//						if (tp.enteringSubjectAndSelectDropDownValuesonTaskPopUp(projectName, PageName.Object2Page, meetingSubject, null, action.SCROLLANDBOOLEAN, 10)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//							 
//							if (clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//
//
//								ele = cp.getCreatedConfirmationMsg(projectName, 15);
//								if (ele!=null) {
//									String actualValue = ele.getText().trim();
//									String expectedValue=tp.taskCreatesMsg(projectName, meetingSubject);
//									if (actualValue.contains(expectedValue)) {
//										log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//									} else {
//										log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//										BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//									}
//								} else {
//									sa.assertTrue(false,"Created Task Msg Ele not Found");
//									log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//								}
//
//
//
//								if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on  "+RelatedTab.Activities.toString(), YesNo.No);	
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//									ThreadSleep(1000);	
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//									List<String> taskstd1=new LinkedList<String>();
//									taskstd1.add(contact3Name+" +"+1);
//									taskstd1.add(Smoke_MTFund1Name+" +"+1);
//									taskstd1.add(Status.Not_Started.toString());
//									taskstd1.add(crmUserName);
//									taskstd1.add("");
//									taskstd1.add(Activity.Task.toString());
//									taskstd1.add(Links.View.toString());	
//									cp.verifyingRelatedTabData2(projectName, PageName.Object2Page, RelatedTab.Activities, "", meetingSubject, taskstd1, action.BOOLEAN, 10);
//
//								}
//
//
//
//							}
//							else {
//								log(LogStatus.ERROR, "Not Able to Click on Save Button", YesNo.Yes);
//								sa.assertTrue(false,"Not Able to Click on Save Button" );
//							}
//
//
//						}
//
//						else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on "+ShowMoreActionDropDownList.NewTaskWithMultiple);
//						log(LogStatus.SKIP,"Not Able to Click on "+ShowMoreActionDropDownList.NewTaskWithMultiple,YesNo.Yes);
//					}
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Show more Icon : "+TabName.Object2Tab+" For : "+contact3Name);
//					log(LogStatus.SKIP,"Not Able to Click on Show more Icon : "+TabName.Object2Tab+" For : "+contact3Name,YesNo.Yes);
//				}
//
//
//			} else {
//				sa.assertTrue(false," object Not Found : "+contact3Name);
//				log(LogStatus.SKIP," object  Not Found : "+contact3Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc071_2_CreateTaskFromDetailPageVerifyingRespectivePages_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact1Name = Smoke_MTContact1FName+" "+Smoke_MTContact1LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		String parentID=null;
//
//		String contact3Name = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		String meetingSubject=Smoke_DetailPageNewTaskMultipleSubject;
//		String crmUserName = crmUser1FirstName+" "+crmUser1LastName;
//
//
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contact3Name+" +"+1);
//		taskstd1.add(Smoke_MTFund1Name+" +"+1);
//		taskstd1.add(Status.Not_Started.toString());
//		taskstd1.add(crmUserName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Task.toString());
//		taskstd1.add(Links.View.toString());
//
//		TabName[] tabNames = {TabName.Object1Tab,TabName.Object2Tab,TabName.TestCustomObjectTab,TabName.Object3Tab};
//
//		String[] names = {Smoke_MTINS2Name,contact1Name,meetingCustomObj1Name,Smoke_MTFund1Name};
//
//		TabName tabName ;
//		int i=0;
//		for (String name : names) {
//			tabName=tabNames[i];
//			if (cp.clickOnTab(projectName, tabName)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+name,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tabName, name, 20)) {
//					log(LogStatus.INFO,"Clicked on  : "+name+" For : "+tabName,YesNo.No);
//					ThreadSleep(1000);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);
//						ThreadSleep(2000);
//
//
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, meetingSubject, action.BOOLEAN, 3);
//
//						if (ele!=null) {
//							log(LogStatus.INFO,meetingSubject+" link present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);	
//							cp.verifyingRelatedTabData2(projectName, PageName.Object2Page, RelatedTab.Activities, "", meetingSubject, taskstd1, action.BOOLEAN, 10);
//
//
//						} else {
//							sa.assertTrue(false,meetingSubject+" link Should be present on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//							log(LogStatus.SKIP,meetingSubject+" link Should be present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//					}
//				} else {
//					sa.assertTrue(false,"Item Not Found : "+name+" For : "+tabName);
//					log(LogStatus.SKIP,"Item Not Found : "+name+" For : "+tabName,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+name);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+name,YesNo.Yes);
//			}
//			i++;
//			switchToDefaultContent(driver);
//		}
//
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc072_1_CreateLogACallFromDetailPageVerifyingRespectivePages_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//
//		String contact1Name = Smoke_MTContact1FName+" "+Smoke_MTContact1LName;
//		String crmUserName = crmUser1FirstName+" "+crmUser1LastName;
//
//		String value="";
//		boolean flag=false;
//		List<String> items = new LinkedList<String>();		
//		WebElement ele;
//
//		switchToDefaultContent(driver);
//		
//		String date=todaysDate;
//		ExcelUtils.writeData(date, "Task", excelLabel.Variable_Name, "AATask28", excelLabel.Due_Date);
//		
//		String contact3Name = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		String meetingSubject=Smoke_DetailPageLogACallMultipleSubject;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contact3Name, 20)) {
//				log(LogStatus.INFO,"Clicked on  object: "+contact3Name,YesNo.No);
//				ThreadSleep(1000);
//
//				if (cp.clickOnShowMoreDropdownOnly(projectName, PageName.Object2Page)) {
//					log(LogStatus.INFO,"Able to Click on Show more Icon : "+TabName.Object2Tab+" For : "+contact3Name,YesNo.No);
//					ThreadSleep(500);
//					ele = cp.actionDropdownElement(projectName, PageName.Object2Page, ShowMoreActionDropDownList.LogCaLLWithMultiple, 10);
//					if (click(driver, ele, ShowMoreActionDropDownList.LogCaLLWithMultiple.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Able to Click on "+ShowMoreActionDropDownList.LogCaLLWithMultiple,YesNo.No);
//						ThreadSleep(500);
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page,PageLabel.New_Task.toString(), action.BOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						ele=cp.getCrossButtonForAlreadySelectedItem(projectName, PageName.TestCustomObjectPage, PageLabel.Name.toString(),true, contact3Name, action.SCROLLANDBOOLEAN, 5);
//						if (ele!=null) {
//							log(LogStatus.INFO, value+" Found For Label "+PageLabel.Name.toString(),YesNo.No);	
//						} else {
//							sa.assertTrue(false,value+" not Found For Label "+PageLabel.Name.toString());
//							log(LogStatus.ERROR, value+" not Found For Label "+PageLabel.Name.toString(),YesNo.Yes);
//
//						}
//
//
//						value=contact1Name;
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), TabName.TestCustomObjectTab, value, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Name,YesNo.No);
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Name);
//							log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Name,YesNo.Yes);
//
//						}
//
//
//						value=Smoke_MTFund1Name;
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.Object3Tab, value, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Related_Associations,YesNo.No);
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//						}
//
//						value=meetingCustomObj1Name;
//						flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, value, action.SCROLLANDBOOLEAN, 10);		
//						if (flag) {
//							log(LogStatus.INFO,"Selected "+value+" For  Drown Down Value :  For Label "+PageLabel.Related_Associations,YesNo.No);
//						} else {
//							sa.assertTrue(false,"Not Able to Select "+value+" For Drown Down Value :  For Label "+PageLabel.Related_Associations);
//							log(LogStatus.SKIP,"Not Able to Select "+value+" For  Drown Down Value : For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//						}
//
//
//
//						// Subject
//
//						if (tp.enteringSubjectAndSelectDropDownValuesonTaskPopUp(projectName, PageName.Object2Page, meetingSubject, null, action.SCROLLANDBOOLEAN, 10)) {
//							log(LogStatus.INFO, "Entered value to Subject Text Box", YesNo.Yes);
//							 
//							if (clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//								log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//
//
//								ele = cp.getCreatedConfirmationMsg(projectName, 15);
//								if (ele!=null) {
//									String actualValue = ele.getText().trim();
//									String expectedValue=tp.taskCreatesMsg(projectName, meetingSubject);
//									if (actualValue.contains(expectedValue)) {
//										log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//									} else {
//										log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//										BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//									}
//								} else {
//									sa.assertTrue(false,"Created Task Msg Ele not Found");
//									log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//								}
//
//
//
//								if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//									log(LogStatus.INFO, "Clicked on  "+RelatedTab.Activities.toString(), YesNo.No);	
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//									ThreadSleep(1000);	
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//									List<String> taskstd1=new LinkedList<String>();
//									taskstd1.add(contact3Name+" +"+1);
//									taskstd1.add(Smoke_MTFund1Name+" +"+1);
//									taskstd1.add(Status.Completed.toString());
//									taskstd1.add(crmUserName);
//									taskstd1.add("");
//									taskstd1.add(Activity.Call.toString());
//									taskstd1.add(Links.View.toString());	
//									date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask28", excelLabel.Due_Date);
//									cp.verifyingRelatedTabData2(projectName, PageName.Object2Page, RelatedTab.Activities, date, meetingSubject, taskstd1, action.BOOLEAN, 10);
//
//								}
//
//
//
//							}
//							else {
//								log(LogStatus.ERROR, "Not Able to Click on Save Button", YesNo.Yes);
//								sa.assertTrue(false,"Not Able to Click on Save Button" );
//							}
//
//
//						}
//
//						else {
//							log(LogStatus.ERROR, "Subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"Subject textbox is not visible so task could not be created" );
//						}
//
//
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on "+ShowMoreActionDropDownList.LogCaLLWithMultiple);
//						log(LogStatus.SKIP,"Not Able to Click on "+ShowMoreActionDropDownList.LogCaLLWithMultiple,YesNo.Yes);
//					}
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Show more Icon : "+TabName.Object2Tab+" For : "+contact3Name);
//					log(LogStatus.SKIP,"Not Able to Click on Show more Icon : "+TabName.Object2Tab+" For : "+contact3Name,YesNo.Yes);
//				}
//
//
//			} else {
//				sa.assertTrue(false," object Not Found : "+contact3Name);
//				log(LogStatus.SKIP," object  Not Found : "+contact3Name,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc072_2_CreateLogACallFromDetailPageVerifyingRespectivePages_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String contact1Name = Smoke_MTContact1FName+" "+Smoke_MTContact1LName;
//		String owner = crmUser1FirstName+" "+crmUser1LastName;
//		WebElement ele ;
//		String parentID=null;
//
//		String contact3Name = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		String meetingSubject=Smoke_DetailPageLogACallMultipleSubject;
//		String crmUserName = crmUser1FirstName+" "+crmUser1LastName;
//
//
//		List<String> taskstd1=new LinkedList<String>();
//		taskstd1.add(contact3Name+" +"+1);
//		taskstd1.add(Smoke_MTFund1Name+" +"+1);
//		taskstd1.add(Status.Completed.toString());
//		taskstd1.add(crmUserName);
//		taskstd1.add("");
//		taskstd1.add(Activity.Call.toString());
//		taskstd1.add(Links.View.toString());
//
//		TabName[] tabNames = {TabName.Object1Tab,TabName.Object2Tab,TabName.TestCustomObjectTab,TabName.Object3Tab};
//
//		String[] names = {Smoke_MTINS2Name,contact1Name,meetingCustomObj1Name,Smoke_MTFund1Name};
//
//		TabName tabName ;
//		int i=0;
//		for (String name : names) {
//			tabName=tabNames[i];
//			if (cp.clickOnTab(projectName, tabName)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+name,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tabName, name, 20)) {
//					log(LogStatus.INFO,"Clicked on  : "+name+" For : "+tabName,YesNo.No);
//					ThreadSleep(1000);
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);
//						ThreadSleep(2000);
//
//
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, meetingSubject, action.BOOLEAN, 3);
//
//						if (ele!=null) {
//							log(LogStatus.INFO,meetingSubject+" link present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);	
//							cp.verifyingRelatedTabData2(projectName, PageName.Object2Page, RelatedTab.Activities, Smoke_DetailPageLogACallMultipleDate, meetingSubject, taskstd1, action.BOOLEAN, 10);
//
//
//						} else {
//							sa.assertTrue(false,meetingSubject+" link Should be present on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//							log(LogStatus.SKIP,meetingSubject+" link Should be present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//					}
//				} else {
//					sa.assertTrue(false,"Item Not Found : "+name+" For : "+tabName);
//					log(LogStatus.SKIP,"Item Not Found : "+name+" For : "+tabName,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+name);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+name,YesNo.Yes);
//			}
//			i++;
//			switchToDefaultContent(driver);
//		}
//
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc073_CheckSearchFunctionalityAtMeetingAndActivityTab(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		WebElement ele ;
//
//		String meetingSubject="";
//
//
//		TabName tabName =TabName.Object2Tab;
//		String contact3Name = Smoke_MTContact3FName+" "+Smoke_MTContact3LName;
//		RelatedTab[] relatedTabs = {RelatedTab.Meetings,RelatedTab.Activities,RelatedTab.Activities};
//		int i=0;
//		if (cp.clickOnTab(projectName, tabName)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+contact3Name,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, tabName, contact3Name, 20)) {
//				log(LogStatus.INFO,"Clicked on  : "+contact3Name+" For : "+tabName,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatedTabs) {
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab+" For : "+contact3Name,YesNo.No);
//						ThreadSleep(2000);
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//						if (i==0) {
//							meetingSubject=Smoke_DetailPageMeetingSubject;	
//						}else if(i==1){
//							meetingSubject=Smoke_DetailPageNewTaskMultipleSubject;		
//						}else {
//							meetingSubject=Smoke_DetailPageLogACallMultipleSubject;		
//						}
//						if (sendKeys(driver, cp.getsearchTextboxActivities(projectName, 10), meetingSubject, "search textbox", action.BOOLEAN)) {
//							log(LogStatus.INFO,"Entered Value on Search Box : "+meetingSubject,YesNo.No);
//							if (click(driver, cp.getsearchIconActivities(projectName, 10), "search icon activities", action.BOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on Search Icon",YesNo.No);
//
//								ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, relatedTab, meetingSubject, action.BOOLEAN, 3);
//
//								if (ele!=null) {
//									log(LogStatus.INFO,meetingSubject+" link present on Sub Tab : "+relatedTab+" For : "+contact3Name,YesNo.No);	
//								} else {
//									sa.assertTrue(false,meetingSubject+" link Should be present on Sub Tab : "+relatedTab+" For : "+contact3Name);
//									log(LogStatus.SKIP,meetingSubject+" link Should be present on Sub Tab : "+relatedTab+" For : "+contact3Name,YesNo.Yes);
//								}
//
//							}else {
//								log(LogStatus.ERROR, "search icon is not clickable, so cannot verify search functionality", YesNo.Yes);
//								sa.assertTrue(false,"search icon is not clickable, so cannot verify search functionality" );
//							}
//						}else {
//							log(LogStatus.ERROR, "search textbox is not visible, so cannot verify search functionality", YesNo.Yes);
//							sa.assertTrue(false,"search textbox is not visible, so cannot verify search functionality" );
//						}
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+contact3Name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+contact3Name,YesNo.Yes);
//					}
//					i++;
//					switchToDefaultContent(driver);
//				}
//			} else {
//				sa.assertTrue(false,"Item Not Found : "+contact3Name+" For : "+tabName);
//				log(LogStatus.SKIP,"Item Not Found : "+contact3Name+" For : "+tabName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+contact3Name);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+contact3Name,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc074_RenameRecordAndVerifyActivitySearchgrid(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//
//		String owner = AdminUserFirstName+" "+AdminUserLastName;
//		WebElement ele = null ;
//		String parentID=null;
//		String value="";
//	
//		
//
//		String contact4Name = Smoke_TaskContact4FName+" "+Smoke_TaskContact4LName;
//		String contact4UpdatedName = Smoke_TaskContact4UpdatedName;
//		String taskCustomObj2UdatedName = taskCustomObj2UpdatedName;
//		
//		TabName[] tabNames = {TabName.Object2Tab,TabName.TestCustomObjectTab,TabName.Object2Tab};
//		String[] names = {contact4Name,taskCustomObj2Name,contact4UpdatedName};
//
//		TabName tabName ;
//		int i=0;
//		for (String name : names) {
//			tabName=tabNames[i];
//			if (cp.clickOnTab(projectName, tabName)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+name,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tabName, name, 20)) {
//					log(LogStatus.INFO,"Clicked on  : "+name+" For : "+tabName,YesNo.No);
//					ThreadSleep(3000);
//					refresh(driver);
//					ThreadSleep(3000);
//					
//					if (i<2) {
//						
//						if (i==0) {
//							cp.clickOnShowMoreDropdownOnly(projectName, PageName.Object2Page);
//							ele = cp.actionDropdownElement(projectName, PageName.Object2Page, ShowMoreActionDropDownList.Edit, 10);
//								
//						} else if(i==1) {
//							cp.clickOnShowMoreDropdownOnly(projectName, PageName.TestCustomObjectPage);
//							ele = cp.actionDropdownElement(projectName, PageName.TestCustomObjectPage, ShowMoreActionDropDownList.Edit, 10);
//							
//						}
//							
//						if (click(driver, ele, "Edit Button ", action.BOOLEAN)) {
//							if (i==0) {
//								ele=cp.getContactLastName(projectName, 60);	
//								value = Smoke_TaskContact4LName+"UP";
//							}else if(i==1) {
//								ele = cop.getFieldTextBox(5);	
//								value = taskCustomObj2UdatedName;
//							}
//
//
//							if (sendKeys(driver, ele, value+"\t", " Name",action.BOOLEAN)) {
//								log(LogStatus.INFO,"Send Values For  : "+name,YesNo.No);	
//
//								if (clickUsingJavaScript(driver, cp.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"Clicked on Save Buttonb to Updated For : "+name,  YesNo.No);
//									
//
//								}else {
//									log(LogStatus.ERROR, "Not Able to Click on Save Button For : "+name, YesNo.Yes);
//									sa.assertTrue(false,"Not Able to Click on Save Button For : "+name);
//								}
//
//
//							} else {
//								sa.assertTrue(false,"Not Able to Send Values For  : "+name);
//								log(LogStatus.SKIP,"Not Able to Send Values For  : "+name,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Edit Button For : "+name);
//							log(LogStatus.SKIP,"Not Able to Click on Edit Button For : "+name,YesNo.Yes);
//						}
//						
//					}
//					
//					if (i==2) {
//
//						if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);
//							ThreadSleep(2000);
//							switchToDefaultContent(driver);
//							switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//							String link=Smoke_Task2LogACallNewUpdatedSubject;
//							ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, link, action.BOOLEAN, 20);
//
//
//							if (ele!=null) {
//								log(LogStatus.INFO,link+" link present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);	
//
//								List<String> taskstd1=new LinkedList<String>();
//								taskstd1.add(Smoke_TaskContact4UpdatedName);
//								taskstd1.add(taskCustomObj2UdatedName);
//								taskstd1.add(Status.Completed.toString());
//								taskstd1.add(AdminUserFirstName+" "+AdminUserLastName);
//								taskstd1.add("");
//								taskstd1.add(Activity.Call.toString());
//								taskstd1.add(Links.View.toString());	
//								String date=ExcelUtils.readData(testCasesFilePath, "Task", excelLabel.Variable_Name,"AATask18", excelLabel.Due_Date);
//								ip.verifyingRelatedTabData2(projectName, PageName.Object2Page, RelatedTab.Activities, date, link, taskstd1, action.BOOLEAN, 10);
//										
//						
//
//								if (click(driver, ele, link, action.BOOLEAN)) {
//									log(LogStatus.INFO,"Clicked on : "+link,YesNo.No);
//									parentID = switchOnWindow(driver);
//									if (parentID!=null) {
//										log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+link,YesNo.Yes);
//										ThreadSleep(1000);
//
//										
//										String relatedAssoctaion=tp.Comment(projectName, PageLabel.Related_Associations, taskCustomObj2UdatedName);
//										String comment = relatedAssoctaion+"\n"+TaskPagePageErrorMessage.Dots+"\n"+Smoke_Task2LogACallNewComment;
//
//										String[][] fieldsWithValues= {{PageLabel.Assigned_To.toString(),owner},
//												{PageLabel.Status.toString(),Status.Completed.toString()},
//												{PageLabel.Subject.toString(),Smoke_Task2LogACallNewUpdatedSubject},
//												{PageLabel.Name.toString(),contact4UpdatedName},
//												{PageLabel.Due_Date.toString(),Smoke_Task2LogACallNewDate},
//												{PageLabel.Meeting_Type.toString(),""},
//												{PageLabel.Related_Associations.toString(),taskCustomObj2UdatedName},
//												{PageLabel.Priority.toString(),Smoke_Task2LogACallNewPriority},
//												{PageLabel.Comments.toString(),comment}};
//
//										tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);	
//
//										driver.close();
//										driver.switchTo().window(parentID);
//
//
//
//									} else {
//										sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+link);
//										log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+link,YesNo.Yes);
//									}
//
//								} else {
//									sa.assertTrue(false,"Not Able to Click on : "+link);
//									log(LogStatus.SKIP,"Not Able to Click on : "+link,YesNo.Yes);
//								}
//
//							} else {
//								sa.assertTrue(false,link+" link Should be present on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//								log(LogStatus.SKIP,link+" link Should be present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//							}
//
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//							log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//						}
//
//					}
//
//				} else {
//					sa.assertTrue(false,"Item Not Found : "+name+" For : "+tabName);
//					log(LogStatus.SKIP,"Item Not Found : "+name+" For : "+tabName,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+name);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+name,YesNo.Yes);
//			}
//			i++;
//			switchToDefaultContent(driver);
//		}
//
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc075_DeleteRecordAndVerifyActivitySearchgrid(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//
//		WebElement ele = null ;
//		String parentID=null;
//		String value="";
//		boolean flag=false;
//
//
//		String contact1Name = Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		String contact4UpdatedName = Smoke_TaskContact4UpdatedName;
//		String taskCustomObj2UdatedName = taskCustomObj2UpdatedName;
//		String task=Smoke_Task2LogACallNewUpdatedSubject;
//
//		TabName[] tabNames = {TabName.Object2Tab,TabName.Object2Tab,TabName.TestCustomObjectTab,TabName.Object2Tab};
//		String[] names = {contact4UpdatedName,contact4UpdatedName,taskCustomObj2UdatedName,contact1Name};
//
//		TabName tabName ;
//		String name="";
//		int i=0;
//		for (i=0; i < names.length; i++) {
//			name=names[i];
//			tabName=tabNames[i];
//			if (cp.clickOnTab(projectName, tabName)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+name,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tabName, name, 20)) {
//					log(LogStatus.INFO,"Clicked on  : "+name+" For : "+tabName,YesNo.No);
//					ThreadSleep(1000);
//
//					if (i==0 || i==3) {
//
//						if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);
//							ThreadSleep(2000);
//							switchToDefaultContent(driver);
//							switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//							ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, RelatedTab.Activities, task, action.BOOLEAN, 20);
//							if (ele!=null) {
//								log(LogStatus.INFO,task+" link present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.No);
//								if (i==3) {
//
//									List<String> taskstd1=new LinkedList<String>();
//									taskstd1.add(contact1Name);
//									taskstd1.add("");
//									taskstd1.add(Status.Completed.toString());
//									taskstd1.add(AdminUserFirstName+" "+AdminUserLastName);
//									taskstd1.add("");
//									taskstd1.add(Activity.Call.toString());
//									taskstd1.add(Links.View.toString());	
//									log(LogStatus.INFO,"Going for Related Tab Data Verification after Edit Task and Delete Operation on Object"+task,YesNo.Yes);
//									ip.verifyingRelatedTabData2(projectName, PageName.Object1Page, RelatedTab.Activities, Smoke_Task2LogACallNewDate, Smoke_Task2LogACallNewUpdatedSubject, taskstd1, action.BOOLEAN, 10);
//									log(LogStatus.INFO,"Related Tab Data Verification done after Edit Task and Delete Operation on Object"+task,YesNo.Yes);
//									
//								}
//								if (click(driver, ele, task, action.BOOLEAN)) {
//									log(LogStatus.INFO,"Clicked on : "+task,YesNo.No);
//									parentID = switchOnWindow(driver);
//									if (parentID!=null) {
//										log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+task,YesNo.Yes);
//										ThreadSleep(1000);
//										if (i==0) {
//											if (click(driver, cp.getEditButton(projectName, 10), "Edit Button ", action.BOOLEAN)) {
//												log(LogStatus.INFO,"Click on Edit Button : "+task,YesNo.No);	
//												flag=cp.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Name.toString(), TabName.TestCustomObjectTab, contact1Name, action.SCROLLANDBOOLEAN, 10);		
//												if (flag) {
//													log(LogStatus.INFO,"Selected "+contact1Name+" For  Drown Down Value :  For Label "+PageLabel.Name,YesNo.No);
//													if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//														log(LogStatus.INFO,"Clicked on Save Button : "+task,  YesNo.Yes);
//														ThreadSleep(1000);
//
//														String[][] fieldsWithValues= {{PageLabel.Related_Contacts.toString(),contact1Name}};
//														tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);	
//
//													}
//													else {
//														log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//														sa.assertTrue(false,"save button is not clickable so task not created" );
//													}
//												} else {
//													sa.assertTrue(false,"Not Able to Select "+contact1Name+" For Drown Down Value :  For Label "+PageLabel.Name);
//													log(LogStatus.SKIP,"Not Able to Select "+contact1Name+" For  Drown Down Value : For Label "+PageLabel.Name,YesNo.Yes);
//
//												}
//												
//												if (!flag) {
//													sa.assertTrue(false,task+" : Task Edit is Unsuccessfull so can no continue TestCase ");
//													log(LogStatus.SKIP,task+" : Task Edit is Unsuccessfull so can no continue TestCase ",YesNo.Yes);
//													driver.close();
//													driver.switchTo().window(parentID);
//													lp.CRMlogout();
//													exit("");
//												}
//											} else {
//												sa.assertTrue(false,"Not Able to Click on Edit Button : "+task);
//												log(LogStatus.SKIP,"Not Able to Click on Edit Button : "+task,YesNo.Yes);
//											}
//
//										} else {
//
//											log(LogStatus.INFO,"Going for Field Verification after Edit Task and Delete Operation on Object"+task,YesNo.Yes);
//											String comment =Smoke_Task2LogACallNewComment;	
//											String[][] fieldsWithValues= {{PageLabel.Assigned_To.toString(),AdminUserFirstName+" "+AdminUserLastName},
//													{PageLabel.Status.toString(),Status.Completed.toString()},
//													{PageLabel.Subject.toString(),Smoke_Task2LogACallNewUpdatedSubject},
//													{PageLabel.Name.toString(),contact1Name},
//													{PageLabel.Due_Date.toString(),Smoke_Task2LogACallNewDate},
//													{PageLabel.Meeting_Type.toString(),""},
//													{PageLabel.Related_Associations.toString(),TaskPagePageErrorMessage.RelatedAssociationText},
//													{PageLabel.Priority.toString(),Smoke_Task2LogACallNewPriority},
//													{PageLabel.Comments.toString(),comment}};
//
//											tp.fieldVerificationForTaskInViewMode(projectName, PageName.TaskPage, fieldsWithValues, action.BOOLEAN, 10);	
//											log(LogStatus.INFO,"Field Verification Done after Edit Task and Delete Operation on Object"+task,YesNo.Yes);
//											
//
//										}
//
//										driver.close();
//										driver.switchTo().window(parentID);
//									} else {
//										sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+task);
//										log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+task,YesNo.Yes);
//									}
//
//								} else {
//									sa.assertTrue(false,"Not Able to Click on : "+task);
//									log(LogStatus.SKIP,"Not Able to Click on : "+task,YesNo.Yes);
//								}
//
//							} else {
//								sa.assertTrue(false,task+" link Should be present on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//								log(LogStatus.SKIP,task+" link Should be present on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//							}
//
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities+" For : "+name);
//							log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities+" For : "+name,YesNo.Yes);
//						}
//
//					}else {
//						if (i==1) {
//							cp.clickOnShowMoreDropdownOnly(projectName, PageName.Object2Page);
//							log(LogStatus.INFO,"Able to Click on Show more Icon : "+tabName+" For : "+name,YesNo.No);
//							ThreadSleep(500);
//							ele = cp.actionDropdownElement(projectName, PageName.Object2Page, ShowMoreActionDropDownList.Delete, 30);
//						} else {
//							ele =cp.getDeleteButton(projectName, 30);
//						}
//					
//						
//							if (click(driver, ele, "Delete More Icon", action.BOOLEAN)) {
//								log(LogStatus.INFO,"Able to Click on Delete more Icon : "+tabName+" For : "+name,YesNo.No);
//								ThreadSleep(1000);
//								if (click(driver, cp.getDeleteButtonOnDeletePopUp(projectName, 30), "Delete Button", action.BOOLEAN)) {
//									log(LogStatus.INFO,"Able to Click on Delete button on Delete PoPup : "+tabName+" For : "+name,YesNo.No);
//									ThreadSleep(10000);
//									if (cp.clickOnTab(projectName, tabName)) {
//										log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+name,YesNo.No);
//										ThreadSleep(1000);
//										if (!cp.clickOnAlreadyCreatedItem(projectName, tabName, name, 10)) {
//											log(LogStatus.INFO,"Item has been Deleted after delete operation  : "+name+" For : "+tabName,YesNo.No);
//											
//										}else {
//											sa.assertTrue(false,"Item has not been Deleted after delete operation  : "+name+" For : "+tabName);
//											log(LogStatus.SKIP,"Item has not been Deleted after delete operation  : "+name+" For : "+tabName,YesNo.Yes);
//										}
//											
//										}else {
//											sa.assertTrue(false,"Not Able to Click on Tab after delete : "+tabName+" For : "+name);
//											log(LogStatus.SKIP,"Not Able to Click on Tab after delete : "+tabName+" For : "+name,YesNo.Yes);	
//										}
//								} else {
//									sa.assertTrue(false,"Not Able to Click on Delete button on Delete PoPup : "+tabName+" For : "+name);
//									log(LogStatus.SKIP,"Not Able to Click on Delete button on Delete PoPup : "+tabName+" For : "+name,YesNo.Yes);
//								}
//
//							} else {
//								sa.assertTrue(false,"Not Able to Click on Delete more Icon : "+tabName+" For : "+name);
//								log(LogStatus.SKIP,"Not Able to Click on Delete more Icon : "+tabName+" For : "+name,YesNo.Yes);
//							}
//
//						
//					}
//
//				} else {
//					sa.assertTrue(false,"Item Not Found : "+name+" For : "+tabName);
//					log(LogStatus.SKIP,"Item Not Found : "+name+" For : "+tabName,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+name);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+name,YesNo.Yes);
//			}
//			
//			switchToDefaultContent(driver);
//			 
//		}
//
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc076_1_DeleteActivityAndVerifyActivitySearchgrid_Action(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//
//		WebElement ele = null ;
//		String parentID=null;
//		String value="";
//		boolean flag=false;
//		String task="";
//
//	
//		String contact1Name = Smoke_TaskContact1FName+" "+Smoke_TaskContact1LName;
//		String[] actionNames = {contact1Name,Smoke_MTFund1Name};
//		TabName[] tabNames = {TabName.Object2Tab,TabName.Object3Tab};
//		RelatedTab relatedTab=null;
//
//		TabName tabName ;
//		int i=0;
//		for (String name : actionNames) {
//			tabName=tabNames[i];
//			if (cp.clickOnTab(projectName, tabName)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+name,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tabName, name, 20)) {
//					log(LogStatus.INFO,"Clicked on  : "+name+" For : "+tabName,YesNo.No);
//					ThreadSleep(1000);
//					if (i==0) {
//						relatedTab	=RelatedTab.Activities;
//						task=Smoke_Task2LogACallNewUpdatedSubject;
//					} else {
//						relatedTab	=RelatedTab.Meetings;
//						task=Smoke_DealClosureMeetingSubject;
//					}
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab+" For : "+name,YesNo.No);
//						ThreadSleep(2000);
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, relatedTab, task, action.BOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO,task+" link present on Sub Tab : "+relatedTab+" For : "+name,YesNo.No);
//
//							if (click(driver, ele, task, action.BOOLEAN)) {
//								log(LogStatus.INFO,"Clicked on : "+task,YesNo.No);
//								parentID = switchOnWindow(driver);
//								if (parentID!=null) {
//									log(LogStatus.INFO,"New window is open Going to verify Landing Page for : "+task,YesNo.Yes);
//									ThreadSleep(1000);
//								
//										if (click(driver, cp.getDeleteButton(projectName, 5), "Delete Button", action.BOOLEAN)) {
//											log(LogStatus.INFO,"Able to Click on Delete button : "+tabName+" For : "+name+" for : "+task,YesNo.No);
//											ThreadSleep(2000);
//											
//											if (click(driver, cp.getDeleteButtonPopUp(projectName, 5), "Delete Button", action.BOOLEAN)) {
//												log(LogStatus.INFO,"Able to Click on Delete button on PopUp : "+tabName+" For : "+name+" for : "+task,YesNo.No);
//												ThreadSleep(2000);
//											} else {
//												sa.assertTrue(false,"Able to Click on Delete button on PopUp : "+tabName+" For : "+name+" for : "+task);
//												log(LogStatus.SKIP,"Able to Click on Delete button on PopUp : "+tabName+" For : "+name+" for : "+task,YesNo.Yes);
//											}
//											
//										} else {
//											sa.assertTrue(false,"Not Able to Click on Delete button : "+tabName+" For : "+name+" for : "+task);
//											log(LogStatus.SKIP,"Not Able to Click on Delete button : "+tabName+" For : "+name+" for : "+task,YesNo.Yes);
//										}
//
//								
//									driver.close();
//									driver.switchTo().window(parentID);
//
//									ThreadSleep(2000);
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//									ele=cp.getRefreshIconOnSearchResultForMeeting(projectName, PageName.Object2Page,relatedTab,action.BOOLEAN, 20);
//									if (click(driver, ele, "Refresh Icon", action.BOOLEAN)) {
//										log(LogStatus.INFO, "Clicked on Refesh Button", YesNo.No);	
//
//										ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, relatedTab, task, action.BOOLEAN, 3);
//										if (ele==null) {
//											log(LogStatus.INFO,task+" is not present on Sub Tab after deleting: "+relatedTab+" For : "+name,YesNo.No);
//											
//
//										}
//										else {
//											sa.assertTrue(false,task+" link Should not be present on Sub Tab after deleting : "+relatedTab+" For : "+name);
//											log(LogStatus.SKIP,task+" link Should not be present on Sub Tab after deleting : "+relatedTab+" For : "+name,YesNo.Yes);
//										}
//
//									} else {
//										log(LogStatus.ERROR, "Not Able to Click on Refesh Button so can not check created : "+Smoke_DealClosureMeetingSubject, YesNo.Yes);
//										sa.assertTrue(false,"Not Able to Click on Refesh Button so can not check created : "+Smoke_DealClosureMeetingSubject );
//
//									}
//
//								} else {
//									sa.assertTrue(false,"No new window is open so cannot verify Landing Page for : "+task);
//									log(LogStatus.SKIP,"No new window is open so cannot verify Landing Page for : "+task,YesNo.Yes);
//								}
//
//							} else {
//								sa.assertTrue(false,"Not Able to Click on : "+task);
//								log(LogStatus.SKIP,"Not Able to Click on : "+task,YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false,task+" link Should be present on Sub Tab : "+relatedTab+" For : "+name);
//							log(LogStatus.SKIP,task+" link Should be present on Sub Tab : "+relatedTab+" For : "+name,YesNo.Yes);
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+name);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+name,YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Item Not Found : "+name+" For : "+tabName);
//					log(LogStatus.SKIP,"Item Not Found : "+name+" For : "+tabName,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+name);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+name,YesNo.Yes);
//			}
//			i++;
//			switchToDefaultContent(driver);
//			 
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc076_1_DeleteActivityAndVerifyActivitySearchgrid_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//
//		WebElement ele = null ;
//		String task=Smoke_DealClosureMeetingSubject;
//
//		
//		String[] impactedContact = {Smoke_MTContact1FName+" "+Smoke_MTContact1LName,Smoke_MTContact3FName+" "+Smoke_MTContact3LName};
//		TabName tabName ;
//		RelatedTab relatedTab=null;
//		int i=0;
//		
//		switchToDefaultContent(driver);
//		log(LogStatus.INFO,"Going to Check on Contact Page after deleteting : "+task,YesNo.No);
//		for (int j = 0; j < impactedContact.length; j++) {
//			switchToDefaultContent(driver);
//			tabName  = TabName.Object2Tab;
//			relatedTab= RelatedTab.Meetings;
//			if (cp.clickOnTab(projectName, tabName)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+impactedContact[j],YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tabName, impactedContact[j], 20)) {
//					log(LogStatus.INFO,"Clicked on  : "+impactedContact[j]+" For : "+tabName,YesNo.No);
//					ThreadSleep(1000);
//
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab+" For : "+impactedContact[j],YesNo.No);
//						ThreadSleep(2000);
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object2Page, relatedTab, task, action.BOOLEAN, 3);
//						if (ele==null) {
//							log(LogStatus.INFO,task+" link is not present on Sub Tab after deleting : "+relatedTab+" For : "+impactedContact[j],YesNo.No);
//						} else {
//							sa.assertTrue(false,task+" link Should not be present on Sub Tab after deleting : "+relatedTab+" For : "+impactedContact[j]);
//							log(LogStatus.SKIP,task+" link Should not be present on Sub Tab after deleting : "+relatedTab+" For : "+impactedContact[j],YesNo.Yes);
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+impactedContact[j]);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+impactedContact[j],YesNo.Yes);
//					}
//
//
//				} else {
//					sa.assertTrue(false,"Item Not Found : "+impactedContact[j]+" For : "+tabName);
//					log(LogStatus.SKIP,"Item Not Found : "+impactedContact[j]+" For : "+tabName,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+impactedContact[j]);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+impactedContact[j],YesNo.Yes);
//			}
//
//
//			switchToDefaultContent(driver);
//		}
//		
//	switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//		
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc077_1_DisableRollUpActivitiesToContactPrimaryInstitutionSetting(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//
//		String contactName = Smoke_MTContact5FName+" "+Smoke_MTContact5LName;
//		String task = Smoke_DealProgressReviewMeetingSubject;
//		WebElement ele ;
//
//		String parentID=null;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//
//					if (click(driver,ip.getButtonNewTaskMultipleAssociations(projectName, 10), "new task", action.SCROLLANDBOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New task Multiple Asociation Button",  YesNo.Yes);
//
//						if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), "Subject",20), task, "Subject", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Entered Value on Subject Text Box : "+task,  YesNo.Yes);
//
//							boolean flag = ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, meetingCustomObj1Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.INFO,"Selected "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//								if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//									ele=cp.getRefreshIconOnSearchResultForMeeting(projectName, PageName.Object2Page,RelatedTab.Activities,action.BOOLEAN, 20);
//									if (click(driver, ele, "Refresh Icon", action.BOOLEAN)) {
//										log(LogStatus.INFO, "Clicked on Refesh Button", YesNo.No);	
//										ThreadSleep(1000);	
//										ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, task, action.BOOLEAN, 10);
//										if (ele!=null) {	
//											log(LogStatus.INFO,task+" link present on Sub Tab : "+RelatedTab.Activities+" For : "+contactName,YesNo.Yes);	
//										} else {
//											sa.assertTrue(false,task+" link not present on Sub Tab : "+RelatedTab.Activities+" For : "+contactName);
//											log(LogStatus.SKIP,task+" link not present on Sub Tab : "+RelatedTab.Activities+" For : "+contactName,YesNo.Yes);
//										}
//
//									} else {
//										log(LogStatus.ERROR, "Not Able to Click on Refesh Button so can not check created : "+Smoke_DealClosureMeetingSubject, YesNo.Yes);
//										sa.assertTrue(false,"Not Able to Click on Refesh Button so can not check created : "+Smoke_DealClosureMeetingSubject );
//
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//									sa.assertTrue(false,"save button is not clickable so task not created" );
//								}
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations);
//								log(LogStatus.SKIP,"Not Able to Select "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//							}
//
//
//						}
//						else {
//							log(LogStatus.ERROR, "subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"subject textbox is not visible so task could not be created" );
//						}
//
//
//					}
//					else {
//						log(LogStatus.ERROR, "not able to click on new task button", YesNo.Yes);
//						sa.assertTrue(false,"not able to click on new task button" );
//					}
//
//
//
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact Not Found : "+contactName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		String entity = Smoke_MTINS6Name;
//		if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, entity, 20)) {
//				log(LogStatus.INFO,"Clicked on  : "+entity,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, task, action.BOOLEAN, 10);
//					if (ele!=null) {	
//						log(LogStatus.INFO,task+" link present on Sub Tab : "+RelatedTab.Activities+" For : "+entity,YesNo.Yes);	
//					} else {
//						sa.assertTrue(false,task+" link not present on Sub Tab : "+RelatedTab.Activities+" For : "+entity);
//						log(LogStatus.SKIP,task+" link not present on Sub Tab : "+RelatedTab.Activities+" For : "+entity,YesNo.Yes);
//					}
//
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false," Not Found : "+entity);
//				log(LogStatus.SKIP," Not Found : "+entity,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc077_2_DisableRollUpActivitiesToContactPrimaryInstitutionSetting(String projectName) {
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		SetupPageBusinessLayer setup=new SetupPageBusinessLayer(driver);
//		HomePageBusineesLayer home=new HomePageBusineesLayer(driver);
//		NavatarSetupPageBusinessLayer nsp = new NavatarSetupPageBusinessLayer(driver);
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		String parentID=null;
//		//lp.switchToClassic();
//		String mode="Lightning";
//		if (home.clickOnSetUpLink()) {
//			parentID=switchOnWindow(driver);
//			if (parentID!=null) {
//				log(LogStatus.INFO, "New Window is Open",YesNo.Yes);
//				if(setup.searchStandardOrCustomObject("", mode, object.Activity_Setting)) {
//					log(LogStatus.INFO, "Able to Search/Click on "+object.Activity_Setting,YesNo.No);	
//					ThreadSleep(10000);
//					switchToFrame(driver, 30, setup.getEditPageLayoutFrame_Lighting(60));
//
//					/////////////////
//					String checkBox = NavatarSetUpPageErrorMessage.RollUpActivitiesToContactPrimaryAccount;
//					if (isSelected(driver,nsp.getRollUpActivitiesToContactPrimaryAccountCheckBox(projectName, 10),"CheckBox For : "+checkBox)) {
//						log(LogStatus.INFO, "Checked "+checkBox, YesNo.No);
//						log(LogStatus.INFO, "Going to UnCheck : "+checkBox, YesNo.No);
//
//						if (click(driver,nsp.getRollUpActivitiesToContactPrimaryAccountCheckBox(projectName, 10),"CheckBox For : "+checkBox, action.BOOLEAN)) {
//							appLog.error("Clicked on checkBox:  "+checkBox);
//							ThreadSleep(2000);
//							if (click(driver,nsp.getSubmitBtn(projectName, 10),"CheckBox For : "+checkBox, action.BOOLEAN)) {
//								appLog.error("Clicked on Submit Btn");
//								ThreadSleep(2000);
//								refresh(driver);
//								switchToDefaultContent(driver);
//								//////////////////
//
//
//								if(setup.searchStandardOrCustomObject("", mode, object.Activity_Setting)) {
//									log(LogStatus.INFO, "Able to Search/Click on "+object.Activity_Setting,YesNo.No);	
//									switchToDefaultContent(driver);
//									ThreadSleep(5000);
//									switchToFrame(driver, 30, setup.getEditPageLayoutFrame_Lighting(60));
//									if (!isSelected(driver,nsp.getRollUpActivitiesToContactPrimaryAccountCheckBox(projectName, 10),"CheckBox For : "+checkBox)) {
//										appLog.info("Checked is Unchecked : "+checkBox);
//									} else {
//										appLog.error("CheckBox Should be UnChecked : "+checkBox);
//										sa.assertTrue(false,"CheckBox Should be UnChecked : "+checkBox);
//										log(LogStatus.FAIL,"CheckBox Should be UnChecked : "+checkBox,YesNo.Yes);
//									}
//
//
//								}else {
//									log(LogStatus.ERROR, "Not Able to Search/Click on "+object.Activity_Setting,YesNo.Yes);
//									sa.assertTrue(false, "Not Able to Search/Click on "+object.Activity_Setting);	
//								}
//
//
//
//							} else {
//								appLog.error("Not Able to Click on Submit Btn");
//								sa.assertTrue(false, "Not Able to Click on Submit Btn");
//								log(LogStatus.FAIL, "Not Able to Click on Submit Btn",YesNo.Yes);
//							}
//
//
//						} else {
//							appLog.error("Not Able to Click on Checkbox : "+checkBox);
//							sa.assertTrue(false, "Not Able to Click on Checkbox : "+checkBox);
//							log(LogStatus.FAIL, "Not Able to Click on Checkbox : "+checkBox,YesNo.Yes);
//						}
//
//					} else {
//
//
//						appLog.info(checkBox+" already UnChecked");	
//						sa.assertTrue(false, checkBox+" already UnChecked");
//						log(LogStatus.SKIP, checkBox+" already UnChecked", YesNo.Yes);
//
//
//					}
//
//					///////////////////
//				}else {
//					log(LogStatus.ERROR, "Not Able to Search/Click on "+object.Activity_Setting,YesNo.Yes);
//					sa.assertTrue(false, "Not Able to Search/Click on "+object.Activity_Setting);	
//				}
//				driver.close();
//				driver.switchTo().window(parentID);
//			}else {
//				log(LogStatus.ERROR, "No New Window is Open",YesNo.Yes);
//				sa.assertTrue(false, "No New Window is Open");
//			}
//			
//		}else {
//			log(LogStatus.ERROR, "Not Able to click on Setup",YesNo.Yes);
//			sa.assertTrue(false, "Not Able to click on Setup");	
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//}
//		
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc077_3_DisableRollUpActivitiesToContactPrimaryInstitutionSetting(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String task = Smoke_DealProgressReviewMeetingSubject;
//		WebElement ele ;
//
//
//		switchToDefaultContent(driver);
//		String entity = Smoke_MTINS6Name;
//		if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, entity, 20)) {
//				log(LogStatus.INFO,"Clicked on  : "+entity,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, task, action.BOOLEAN, 10);
//					if (ele!=null) {	
//						log(LogStatus.INFO,task+" link present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);	
//					} else {
//						sa.assertTrue(false,task+" link not present on Sub Tab : "+RelatedTab.Activities);
//						log(LogStatus.SKIP,task+" link not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//					}
//
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false," Not Found : "+entity);
//				log(LogStatus.SKIP," Not Found : "+entity,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc078_VerifyNewTaskwithMultipleAssociationsButtonAndSettingImpact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//
//		String contactName = Smoke_MTContact5FName+" "+Smoke_MTContact5LName;
//		String task = Smoke_S1TestSubject;
//		WebElement ele ;
//
//		String parentID=null;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//
//					if (click(driver,ip.getButtonNewTaskMultipleAssociations(projectName, 60), "new task", action.SCROLLANDBOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New task Multiple Asociation Button",  YesNo.Yes);
//						ThreadSleep(1000);
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page,PageLabel.New_Task.toString(), action.BOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), "Subject",20), task, "Subject", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Entered Value on Subject Text Box : "+task,  YesNo.Yes);
//
//							boolean flag = ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, meetingCustomObj1Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.INFO,"Selected "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//								if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//									ThreadSleep(1000);
//
//
//									ele = cp.getCreatedConfirmationMsg(projectName, 15);
//									if (ele!=null) {
//										String actualValue = ele.getText().trim();
//										String expectedValue=tp.taskCreatesMsg(projectName, task);
//										if (actualValue.contains(expectedValue)) {
//											log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//										} else {
//											log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//											BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//										}
//									} else {
//										sa.assertTrue(false,"Created Task Msg Ele not Found");
//										log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//									}
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//									ele=cp.getRefreshIconOnSearchResultForMeeting(projectName, PageName.Object2Page,RelatedTab.Activities,action.BOOLEAN, 20);
//									if (click(driver, ele, "Refresh Icon", action.BOOLEAN)) {
//										log(LogStatus.INFO, "Clicked on Refesh Button", YesNo.No);	
//										ThreadSleep(1000);	
//										ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, task, action.BOOLEAN, 10);
//										if (ele!=null) {	
//											log(LogStatus.INFO,task+" link present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);	
//										} else {
//											sa.assertTrue(false,task+" link not present on Sub Tab : "+RelatedTab.Activities);
//											log(LogStatus.SKIP,task+" link not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//										}
//
//									} else {
//										log(LogStatus.ERROR, "Not Able to Click on Refesh Button so can not check created : "+task, YesNo.Yes);
//										sa.assertTrue(false,"Not Able to Click on Refesh Button so can not check created : "+task );
//
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//									sa.assertTrue(false,"save button is not clickable so task not created" );
//								}
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations);
//								log(LogStatus.SKIP,"Not Able to Select "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//							}
//
//
//						}
//						else {
//							log(LogStatus.ERROR, "subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"subject textbox is not visible so task could not be created" );
//						}
//
//
//					}
//					else {
//						log(LogStatus.ERROR, "not able to click on new task button", YesNo.Yes);
//						sa.assertTrue(false,"not able to click on new task button" );
//					}
//
//
//
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact Not Found : "+contactName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		String entity = Smoke_MTINS6Name;
//		if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, entity, 20)) {
//				log(LogStatus.INFO,"Clicked on  : "+entity,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,20));
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, task, action.BOOLEAN, 5);
//					if (ele==null) {	
//						log(LogStatus.INFO,task+" link is not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);	
//					} else {
//						sa.assertTrue(false,task+" link Should not present on Sub Tab : "+RelatedTab.Activities);
//						log(LogStatus.SKIP,task+" link Should not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//					}
//
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false," Not Found : "+entity);
//				log(LogStatus.SKIP," Not Found : "+entity,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc079_VerifyLogACallWithMultipleAssociationsButtonAndSettingImpact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//
//		String contactName = Smoke_MTContact5FName+" "+Smoke_MTContact5LName;
//		String task = Smoke_S2TestSubject;
//		WebElement ele ;
//
//		String parentID=null;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//
//					if (click(driver,ip.getButtonLogCallMultiple(projectName, 60), "Log A Call", action.SCROLLANDBOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Log A Call Multiple Asociation Button",  YesNo.Yes);
//						ThreadSleep(1000);
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page,PageLabel.New_Task.toString(), action.BOOLEAN, 20);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						try {
//							ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), "Subject",20).clear();
//						} catch (Exception e) {
//							// TODO Auto-generated catch block
//							e.printStackTrace();
//						}
//						if (sendKeys(driver, ip.getLabelTextBox(projectName, PageName.NewTaskPage.toString(), "Subject",20), task, "Subject", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO,"Entered Value on Subject Text Box : "+task,  YesNo.Yes);
//
//							boolean flag = ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object1Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, meetingCustomObj1Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.INFO,"Selected "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//								if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//									ThreadSleep(1000);
//
//
//									ele = cp.getCreatedConfirmationMsg(projectName, 15);
//									if (ele!=null) {
//										String actualValue = ele.getText().trim();
//										String expectedValue=tp.taskCreatesMsg(projectName, task);
//										if (actualValue.contains(expectedValue)) {
//											log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//										} else {
//											log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//											BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//										}
//									} else {
//										sa.assertTrue(false,"Created Task Msg Ele not Found");
//										log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//									}
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//									ele=cp.getRefreshIconOnSearchResultForMeeting(projectName, PageName.Object2Page,RelatedTab.Activities,action.BOOLEAN, 20);
//									if (click(driver, ele, "Refresh Icon", action.BOOLEAN)) {
//										log(LogStatus.INFO, "Clicked on Refesh Button", YesNo.No);	
//										ThreadSleep(1000);	
//										ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, task, action.BOOLEAN, 10);
//										if (ele!=null) {	
//											log(LogStatus.INFO,task+" link present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);	
//										} else {
//											sa.assertTrue(false,task+" link not present on Sub Tab : "+RelatedTab.Activities);
//											log(LogStatus.SKIP,task+" link not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//										}
//
//									} else {
//										log(LogStatus.ERROR, "Not Able to Click on Refesh Button so can not check created : "+task, YesNo.Yes);
//										sa.assertTrue(false,"Not Able to Click on Refesh Button so can not check created : "+task );
//
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//									sa.assertTrue(false,"save button is not clickable so task not created" );
//								}
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations);
//								log(LogStatus.SKIP,"Not Able to Select "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//							}
//
//
//						}
//						else {
//							log(LogStatus.ERROR, "subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"subject textbox is not visible so task could not be created" );
//						}
//
//
//					}
//					else {
//						log(LogStatus.ERROR, "not able to click on Log A Call button", YesNo.Yes);
//						sa.assertTrue(false,"not able to click on Log A Call button" );
//					}
//
//
//
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact Not Found : "+contactName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		String entity = Smoke_MTINS6Name;
//		if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, entity, 20)) {
//				log(LogStatus.INFO,"Clicked on  : "+entity,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,20));
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Activities, task, action.BOOLEAN, 5);
//					if (ele==null) {	
//						log(LogStatus.INFO,task+" link is not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);	
//					} else {
//						sa.assertTrue(false,task+" link Should not present on Sub Tab : "+RelatedTab.Activities);
//						log(LogStatus.SKIP,task+" link Should not present on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//					}
//
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false," Not Found : "+entity);
//				log(LogStatus.SKIP," Not Found : "+entity,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc080_VerifyNewMeetingButtonAndSettingImpact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//
//		String contactName = Smoke_MTContact5FName+" "+Smoke_MTContact5LName;
//		String task = Smoke_S3TestSubject;
//		WebElement ele ;
//
//		String parentID=null;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, contactName, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+contactName,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Meetings, 20), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//
//					if (click(driver,ip.getNewMeetingButton(projectName, 60), "New Meeting Button", action.SCROLLANDBOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on New Meeting Button",  YesNo.Yes);
//						ThreadSleep(1000);
//
//						ele = cp.getHeaderTextForPage(projectName, PageName.Object2Page,PageLabel.New_Task.toString(), action.BOOLEAN, 10);
//						if (ele!=null) {
//							log(LogStatus.INFO,"New Task PopUp is opened",YesNo.No);	
//						} else {
//							sa.assertTrue(false,"New Task PopUp is not opened");
//							log(LogStatus.SKIP,"New Task PopUp is not opened",YesNo.Yes);
//						}
//
//						String[][] dropDownLabelWithValues = {{PageLabel.Meeting_Type.toString(),Smoke_S3TestMeetingType}};
//						if (tp.enteringSubjectAndSelectDropDownValuesonTaskPopUp(projectName, PageName.Object2Page, task, dropDownLabelWithValues, action.SCROLLANDBOOLEAN, 10)) {	log(LogStatus.INFO,"Entered Value on Subject Text Box : "+task,  YesNo.Yes);
//
//							boolean flag = ip.selectRelatedAssociationOrContactOrRelatedToDropDownAndClickOnItem(projectName, PageName.Object2Page, PageLabel.Related_Associations.toString(), TabName.TestCustomObjectTab, meetingCustomObj1Name, action.SCROLLANDBOOLEAN, 10);		
//							if (flag) {
//								log(LogStatus.INFO,"Selected "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.No);
//
//								if (clickUsingJavaScript(driver, ip.getCustomTabSaveBtn(projectName,20), "save", action.SCROLLANDBOOLEAN)) {
//									log(LogStatus.INFO,"successfully created task",  YesNo.Yes);
//									ThreadSleep(1000);
//
//
//									ele = cp.getCreatedConfirmationMsg(projectName, 15);
//									if (ele!=null) {
//										String actualValue = ele.getText().trim();
//										String expectedValue=tp.taskCreatesMsg(projectName, task);
//										if (actualValue.contains(expectedValue)) {
//											log(LogStatus.INFO,expectedValue+" matched FOR Confirmation Msg", YesNo.No);
//
//										} else {
//											log(LogStatus.ERROR,"Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg", YesNo.Yes);
//											BaseLib.sa.assertTrue(false, "Actual : "+actualValue+" Expected : "+expectedValue+" not matched FOR Confirmation Msg");
//										}
//									} else {
//										sa.assertTrue(false,"Created Task Msg Ele not Found");
//										log(LogStatus.SKIP,"Created Task Msg Ele not Found",YesNo.Yes);
//
//									}
//
//									switchToDefaultContent(driver);
//									switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//									ele=cp.getRefreshIconOnSearchResultForMeeting(projectName, PageName.Object2Page,RelatedTab.Meetings,action.BOOLEAN, 20);
//									if (click(driver, ele, "Refresh Icon", action.BOOLEAN)) {
//										log(LogStatus.INFO, "Clicked on Refesh Button", YesNo.No);	
//										ThreadSleep(1000);	
//										ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Meetings, task, action.BOOLEAN, 10);
//										if (ele!=null) {	
//											log(LogStatus.INFO,task+" link present on Sub Tab : "+RelatedTab.Meetings+" For : "+contactName,YesNo.Yes);	
//										} else {
//											sa.assertTrue(false,task+" link not present on Sub Tab : "+RelatedTab.Meetings+" For : "+contactName);
//											log(LogStatus.SKIP,task+" link not present on Sub Tab : "+RelatedTab.Meetings+" For : "+contactName,YesNo.Yes);
//										}
//
//									} else {
//										log(LogStatus.ERROR, "Not Able to Click on Refesh Button so can not check created : "+task, YesNo.Yes);
//										sa.assertTrue(false,"Not Able to Click on Refesh Button so can not check created : "+task );
//
//									}
//
//								}
//								else {
//									log(LogStatus.ERROR, "save button is not clickable so task not created", YesNo.Yes);
//									sa.assertTrue(false,"save button is not clickable so task not created" );
//								}
//
//							} else {
//								sa.assertTrue(false,"Not Able to Select "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations);
//								log(LogStatus.SKIP,"Not Able to Select "+meetingCustomObj1Name+" For Label "+PageLabel.Related_Associations,YesNo.Yes);
//
//							}
//
//
//						}
//						else {
//							log(LogStatus.ERROR, "subject textbox is not visible so task could not be created", YesNo.Yes);
//							sa.assertTrue(false,"subject textbox is not visible so task could not be created" );
//						}
//
//
//					}
//					else {
//						log(LogStatus.ERROR, "not able to click on New Meeting button", YesNo.Yes);
//						sa.assertTrue(false,"not able to click on New Meeting button" );
//					}
//
//
//
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+contactName);
//				log(LogStatus.SKIP,"Contact Not Found : "+contactName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		String entity = Smoke_MTINS6Name;
//		if (cp.clickOnTab(projectName, TabName.Object1Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object1Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object1Tab, entity, 20)) {
//				log(LogStatus.INFO,"Clicked on  : "+entity,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, RelatedTab.Meetings, 20), RelatedTab.Meetings.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Meetings,YesNo.No);
//					ThreadSleep(2000);
//
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,20));
//					ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, RelatedTab.Meetings, task, action.BOOLEAN, 5);
//					if (ele==null) {	
//						log(LogStatus.INFO,task+" link is not present on Sub Tab : "+RelatedTab.Meetings+" For : "+entity,YesNo.Yes);	
//					} else {
//						sa.assertTrue(false,task+" link Should not present on Sub Tab : "+RelatedTab.Meetings+" For : "+entity);
//						log(LogStatus.SKIP,task+" link Should not present on Sub Tab : "+RelatedTab.Meetings+" For : "+entity,YesNo.Yes);
//					}
//
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Meetings,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false," Not Found : "+entity);
//				log(LogStatus.SKIP," Not Found : "+entity,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object1Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object1Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc081_VerifySortingInActivitiesTab(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		String navatarCTCon1 = Smoke_MTContact5FName+" "+Smoke_MTContact5LName;
//		
//		WebElement ele ;
//		String parentID=null;
//		if (cp.clickOnTab(projectName, TabName.Object2Tab)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+TabName.Object2Tab,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, TabName.Object2Tab, navatarCTCon1, 20)) {
//				log(LogStatus.INFO,"Clicked on Contact : "+navatarCTCon1,YesNo.No);
//				ThreadSleep(1000);
//				if (click(driver, cp.getRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities, 20), RelatedTab.Activities.toString(), action.BOOLEAN)) {
//					log(LogStatus.INFO,"Clicked on Sub Tab : "+RelatedTab.Activities,YesNo.No);
//					ThreadSleep(2000);
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 20, cp.getMeetingFrameOnContactPage(projectName,10));
//				SoftAssert saa = cp.performSortingCheckOnRelatedTab(projectName, PageName.Object2Page, RelatedTab.Activities);
//				sa.combineAssertions(saa);
//
//
//				} else {
//					sa.assertTrue(false,"Not Able to Click on Sub Tab : "+RelatedTab.Activities);
//					log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+RelatedTab.Activities,YesNo.Yes);
//				}
//			} else {
//				sa.assertTrue(false,"Contact Not Found : "+navatarCTCon1);
//				log(LogStatus.SKIP,"Contact Not Found : "+navatarCTCon1,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+TabName.Object2Tab);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+TabName.Object2Tab,YesNo.Yes);
//		}
//
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//	
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc082_EnableContactTransferSettingFromNavatarSetup(String projectName) {
//		BasePageBusinessLayer bp = new BasePageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		NavatarSetupPageBusinessLayer ctt = new NavatarSetupPageBusinessLayer(driver);
//		SetupPageBusinessLayer setup=new SetupPageBusinessLayer(driver);
//		HomePageBusineesLayer home=new HomePageBusineesLayer(driver);
//		NavatarSetupPageBusinessLayer nsp = new NavatarSetupPageBusinessLayer(driver);
//		String environment="";
//		String mode="";
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		appLog.info("Login with User");
//		
//
//
//		//  office location 
//		
//		if (bp.clickOnTab(projectName, TabName.NavatarSetup)) {
//			appLog.info("Clicked on Navatar Set Up Tab");
//			if (ctt.clickOnNavatarSetupSideMenusTab(projectName, NavatarSetupSideMenuTab.OfficeLocations)) {
//				appLog.error("Clicked on Office Locations Tab");
//
//				// 1st
//				ThreadSleep(2000);
//				if (!isSelected(driver, ctt.getEnableCheckBoxforNavatarSetUpSideMenuTab(projectName,
//						NavatarSetupSideMenuTab.OfficeLocations, EditViewMode.View, ClickOrCheckEnableDisableCheckBox.Click, 10), "Enabled CheckBox")) {
//					log(LogStatus.INFO, "Enable Office Locations is Unchecked", YesNo.No);
//				} else {
//					log(LogStatus.SKIP, "Enable Office Locations is Already checked Going to Uncheck Office ocation", YesNo.Yes);
//					
//					if (click(driver, ctt.getEditButtonforNavatarSetUpSideMenuTab(projectName,
//							NavatarSetupSideMenuTab.OfficeLocations, 10), "Edit Button", action.BOOLEAN)) {
//						log(LogStatus.INFO, "Clicked on Edit Button for Office Locations Tab", YesNo.No);
//						ThreadSleep(2000);
//						
//						if (click(driver,
//								ctt.getEnableCheckBoxforClickNavatarSetUpSideMenuTab(projectName,
//										NavatarSetupSideMenuTab.OfficeLocations, EditViewMode.Edit, 10),
//								"ChecK Box", action.SCROLLANDBOOLEAN)) {
//							log(LogStatus.INFO, "Clicked on Enable office Location CheckBox", YesNo.No);
//							ThreadSleep(2000);
//							// 3rd
//							if (click(driver, ctt.getSaveButtonforNavatarSetUpSideMenuTab(projectName,
//									NavatarSetupSideMenuTab.OfficeLocations, 10, TopOrBottom.TOP), "Save Button", action.BOOLEAN)) {
//								ThreadSleep(10000);
//								log(LogStatus.INFO, "Clicked on Save Button for Office Locations Tab", YesNo.No);
//
//								if (!isSelected(driver,
//										ctt.getEnableCheckBoxforNavatarSetUpSideMenuTab(projectName,
//												NavatarSetupSideMenuTab.OfficeLocations, EditViewMode.View, ClickOrCheckEnableDisableCheckBox.Click, 10),
//										"Enabled CheckBox")) {
//									log(LogStatus.INFO, "Enable Office Locations is UnChecked", YesNo.No);
//								} else {
//									sa.assertTrue(false, "Enable Office Locations Should be Unchecked");
//									log(LogStatus.SKIP, "Enable Office Locations Should be Unchecked", YesNo.Yes);
//								}
//
//							} else {
//								sa.assertTrue(false, "Not Able to Click on Save Button for Office Locations Tab");
//								log(LogStatus.SKIP, "Not Able to Click on Save Button for Office Locations Tab", YesNo.Yes);
//							}
//
//						} else {
//							sa.assertTrue(false, "Not Able to Click on Enable office Location CheckBox");
//							log(LogStatus.SKIP, "Not Able to Click on Enable office Location CheckBox", YesNo.Yes);
//						}
//						
//						}else {
//							sa.assertTrue(false, "Not Able to Click on Edit Button for Office Locations Tab");
//							log(LogStatus.SKIP, "Not Able to Click on Edit Button for Office Locations Tab", YesNo.Yes);	
//						}
//				}
//				
//				
//				
//				
//			} else {
//
//				sa.assertTrue(false, "Not Able to Click on Office Locations Tab");
//				log(LogStatus.SKIP, "Not Able to Click on Office Locations Tab", YesNo.Yes);
//			}
//			
//		} else {
//		appLog.error("Not Able to Click on Navatar Set Up Tab");
//		sa.assertTrue(false, "Not Able to Click on Navatar Set Up Tab");
//		log(LogStatus.SKIP, "Not Able to Click on Navatar Set Up Tab", YesNo.Yes);
//	}
//	
//
//		// Contact Transfer
//		switchToDefaultContent(driver);
//		if (bp.clickOnTab(projectName, TabName.NavatarSetup)) {
//			appLog.info("Clicked on Navatar Set Up Tab");
//
//			if (ctt.clickOnNavatarSetupSideMenusTab(projectName, NavatarSetupSideMenuTab.ContactTransfer)) {
//				appLog.error("Clicked on Contact Transfer Tab");
//				if (click(driver, ctt.getEditButtonforNavatarSetUpSideMenuTab(projectName,NavatarSetupSideMenuTab.ContactTransfer, 10), "Edit Button", action.BOOLEAN)) {
//					log(LogStatus.INFO, "Clicked on Edit Button", YesNo.No);
//					ThreadSleep(2000);
//					if (!isSelected(driver, ctt.getEnableCheckBoxforNavatarSetUpSideMenuTab(projectName,NavatarSetupSideMenuTab.ContactTransfer, EditViewMode.Edit, ClickOrCheckEnableDisableCheckBox.Click, 10), "Enabled CheckBox")) {
//
//						log(LogStatus.INFO, "Enable Contact Transfer is Unchecked", YesNo.No);
//
//						if (click(driver,ctt.getEnableCheckBoxforClickNavatarSetUpSideMenuTab(projectName,NavatarSetupSideMenuTab.ContactTransfer, EditViewMode.Edit, 10),"Contact Trasfer CheckBox", action.BOOLEAN)) {
//							log(LogStatus.INFO, "Clicked on Enable Contact Transfer Box Checkbox", YesNo.No);
//							ThreadSleep(2000);
//							String keepActivitiesDefaultValue = ctt.keepActivitiesValue(projectName, KeepActivityEnum.OldInstitutionOnly);
//							String selectIncludeActivitiesValue = ctt.includeActivitiesValue(projectName, InculdeActivityEnum.ContactOnly);
//							if (selectVisibleTextFromDropDown(driver,ctt.getKeepActivitiesAtSelectList(projectName, EditViewMode.Edit, 10),keepActivitiesDefaultValue, keepActivitiesDefaultValue)) {
//								log(LogStatus.INFO, "Selected Keep Activities related to : " + keepActivitiesDefaultValue,YesNo.No);
//								ThreadSleep(1000);
//								
//								if (selectVisibleTextFromDropDown(driver,ctt.getIncludeActivitiesSelectList(projectName, EditViewMode.Edit, 10),selectIncludeActivitiesValue, selectIncludeActivitiesValue)) {
//									log(LogStatus.INFO, "Selected Include Activities related to : " + keepActivitiesDefaultValue,YesNo.No);
//									ThreadSleep(1000);
//									
//									if (click(driver, ctt.getSaveButtonforNavatarSetUpSideMenuTab(projectName, NavatarSetupSideMenuTab.ContactTransfer, 10, TopOrBottom.TOP), "Save Button", action.BOOLEAN)) {
//										ThreadSleep(5000);
//										log(LogStatus.INFO, "Clicked on Save Button", YesNo.No);
//										ThreadSleep(10000);
//											SoftAssert tsa = ctt.verifyingContactTransferTab(projectName, EditViewMode.View,CheckBox.Checked, keepActivitiesDefaultValue, selectIncludeActivitiesValue);
//											sa.combineAssertions(tsa);
//										
//									} else {
//										sa.assertTrue(false, "Not Able to Click on Save Button");
//										log(LogStatus.SKIP, "Not Able to Click on Save Button", YesNo.Yes);
//									}
//									
//									
//								} else {
//									sa.assertTrue(false,"Not Able to Select Include Activities related to : " + selectIncludeActivitiesValue);
//									log(LogStatus.SKIP,"Not Able to Select Include Activities related to : " + selectIncludeActivitiesValue,YesNo.Yes);
//
//								}
//									
//								
//								
//							} else {
//								sa.assertTrue(false,"Not Able to Select Keep Activities related to : " + keepActivitiesDefaultValue);
//								log(LogStatus.SKIP,"Not Able to Select Keep Activities related to : " + keepActivitiesDefaultValue,YesNo.Yes);
//
//							}
//
//
//						} else {
//							sa.assertTrue(false, "Not Able to Click on Enable Contact Transfer Checkbox");
//							log(LogStatus.SKIP, "Not Able to Click on Enable Contact Transfer Checkbox", YesNo.Yes);
//						}
//
//					} else {
//						log(LogStatus.SKIP, "Enable Contact Transfer is Already checked", YesNo.Yes);
//						
//						String keepActivitiesDefaultValue = ctt.keepActivitiesValue(projectName, KeepActivityEnum.OldInstitutionOnly);
//						String selectIncludeActivitiesValue = ctt.includeActivitiesValue(projectName, InculdeActivityEnum.ContactOnly);
//						if (selectVisibleTextFromDropDown(driver,ctt.getKeepActivitiesAtSelectList(projectName, EditViewMode.Edit, 10),keepActivitiesDefaultValue, keepActivitiesDefaultValue)) {
//							log(LogStatus.INFO, "Selected Keep Activities related to : " + keepActivitiesDefaultValue,YesNo.No);
//							ThreadSleep(1000);
//							
//							if (selectVisibleTextFromDropDown(driver,ctt.getIncludeActivitiesSelectList(projectName, EditViewMode.Edit, 10),selectIncludeActivitiesValue, selectIncludeActivitiesValue)) {
//								log(LogStatus.INFO, "Selected Include Activities related to : " + keepActivitiesDefaultValue,YesNo.No);
//								ThreadSleep(1000);
//								
//								if (click(driver, ctt.getSaveButtonforNavatarSetUpSideMenuTab(projectName, NavatarSetupSideMenuTab.ContactTransfer, 10, TopOrBottom.TOP), "Save Button", action.BOOLEAN)) {
//									ThreadSleep(5000);
//									log(LogStatus.INFO, "Clicked on Save Button", YesNo.No);
//									ThreadSleep(10000);
//										SoftAssert tsa = ctt.verifyingContactTransferTab(projectName, EditViewMode.View,CheckBox.Checked, keepActivitiesDefaultValue, selectIncludeActivitiesValue);
//										sa.combineAssertions(tsa);
//									
//								} else {
//									sa.assertTrue(false, "Not Able to Click on Save Button");
//									log(LogStatus.SKIP, "Not Able to Click on Save Button", YesNo.Yes);
//								}
//								
//								
//							} else {
//								sa.assertTrue(false,"Not Able to Select Include Activities related to : " + selectIncludeActivitiesValue);
//								log(LogStatus.SKIP,"Not Able to Select Include Activities related to : " + selectIncludeActivitiesValue,YesNo.Yes);
//
//							}
//								
//							
//							
//						} else {
//							sa.assertTrue(false,"Not Able to Select Keep Activities related to : " + keepActivitiesDefaultValue);
//							log(LogStatus.SKIP,"Not Able to Select Keep Activities related to : " + keepActivitiesDefaultValue,YesNo.Yes);
//
//						}
//						
//					}
//
//				} else {
//					appLog.error("Not Able to Click on Edit Button");
//					sa.assertTrue(false, "Not Able to Click on Edit Button");
//					log(LogStatus.SKIP, "Not Able to Click on Edit Button", YesNo.Yes);
//				}
//			} else {
//				appLog.error("Not Able to Click on Contact Transfer Tab");
//				sa.assertTrue(false, "Not Able to Click on Contact Transfer Tab");
//				log(LogStatus.SKIP, "Not Able to Click on Contact Transfer Tab", YesNo.Yes);
//			}
//			
//			
//
//		} else {
//			appLog.error("Not Able to Click on Navatar Set Up Tab");
//			sa.assertTrue(false, "Not Able to Click on Navatar Set Up Tab");
//			log(LogStatus.SKIP, "Not Able to Click on Navatar Set Up Tab", YesNo.Yes);
//		}
//		
//		// Roll up activities to a contact's primary account
//		switchToDefaultContent(driver);
//		String parentID=null;
//		//lp.switchToClassic();
//		 mode="Lightning";
//		if (home.clickOnSetUpLink()) {
//			parentID=switchOnWindow(driver);
//			if (parentID!=null) {
//				log(LogStatus.INFO, "New Window is Open",YesNo.Yes);
//				if(setup.searchStandardOrCustomObject("", mode, object.Activity_Setting)) {
//					log(LogStatus.INFO, "Able to Search/Click on "+object.Activity_Setting,YesNo.No);	
//					ThreadSleep(30000);
//					switchToDefaultContent(driver);
//					switchToFrame(driver, 10, setup.getEditPageLayoutFrame_Lighting(10));
//
//					String checkBox = NavatarSetUpPageErrorMessage.RollUpActivitiesToContactPrimaryAccount;
//					if (isSelected(driver,nsp.getRollUpActivitiesToContactPrimaryAccountCheckBox(projectName, 10),"CheckBox For : "+checkBox)) {
//						appLog.info("checkBox is already Checked  : "+checkBox);
//						log(LogStatus.INFO,"checkBox is already Checked  : "+checkBox,YesNo.No);
//					} else {
//						
//						log(LogStatus.INFO,"Going to Check CheckBox For : "+checkBox,YesNo.No);
//						
//
//						if (click(driver,nsp.getRollUpActivitiesToContactPrimaryAccountCheckBox(projectName, 10),"CheckBox For : "+checkBox, action.BOOLEAN)) {
//							appLog.error("Clicked on checkBox:  "+checkBox);
//							ThreadSleep(2000);
//							 
//							if (click(driver,nsp.getSubmitBtn(projectName, 10),"CheckBox For : "+checkBox, action.BOOLEAN)) {
//								appLog.info("Clicked on Submit Btn");
//								ThreadSleep(7000);
//								
//								refresh(driver);
//								switchToDefaultContent(driver);
//								//////////////////
//
//
//								if(setup.searchStandardOrCustomObject("", mode, object.Activity_Setting)) {
//									log(LogStatus.INFO, "Able to Search/Click on "+object.Activity_Setting,YesNo.No);	
//									switchToDefaultContent(driver);
//									ThreadSleep(5000);
//									switchToFrame(driver, 10, setup.getEditPageLayoutFrame_Lighting(10));
//									if (nsp.getRollUpActivitiesToContactPrimaryAccountCheckBox(projectName, 10)!=null) {
//										appLog.info("checkBox is Checked  : "+checkBox);
//									} else {
//										appLog.error("CheckBox Shoulb be Checked : "+checkBox);
//										sa.assertTrue(false,"CheckBox Shoulb be Checked : "+checkBox);
//										log(LogStatus.FAIL,"CheckBox Shoulb be Checked : "+checkBox,YesNo.Yes);
//									}
//
//
//								}else {
//									log(LogStatus.ERROR, "Not Able to Search/Click on "+object.Activity_Setting,YesNo.Yes);
//									sa.assertTrue(false, "Not Able to Search/Click on "+object.Activity_Setting);	
//								}
//								
//								
//								
//							} else {
//								appLog.error("Not Able to Click on Submit Btn");
//								sa.assertTrue(false, "Not Able to Click on Submit Btn");
//								log(LogStatus.FAIL, "Not Able to Click on Submit Btn",YesNo.Yes);
//							}
//							
//
//						} else {
//							appLog.error("Not Able to Click on Checkbox : "+checkBox);
//							sa.assertTrue(false, "Not Able to Click on Checkbox : "+checkBox);
//							log(LogStatus.FAIL, "Not Able to Click on Checkbox : "+checkBox,YesNo.Yes);
//						}
//						
//					}
//					
//					
//				}else {
//					log(LogStatus.ERROR, "Not Able to Search/Click on "+object.Activity_Setting,YesNo.Yes);
//					sa.assertTrue(false, "Not Able to Search/Click on "+object.Activity_Setting);	
//				}
//				driver.close();
//				driver.switchTo().window(parentID);
//			}else {
//				log(LogStatus.ERROR, "No New Window is Open",YesNo.Yes);
//				sa.assertTrue(false, "No New Window is Open");
//			}
//			switchToDefaultContent(driver);
//			lp.CRMlogout();
//			sa.assertAll();
//		}else {
//			log(LogStatus.ERROR, "Not Able to click on Setup",YesNo.Yes);
//			sa.assertTrue(false, "Not Able to click on Setup");	
//		}
//		
//		
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		ThreadSleep(3000);
//		sa.assertAll();
//		appLog.info("Pass");
//	}
//	
//	@Parameters({"projectName"})
//	@Test
//	public void AASmokeTc083_1_TransferContactFromCTAccount1ToCTAccount2_Action(String projectName) {
//		BasePageBusinessLayer bp = new BasePageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		appLog.info("Login with User");
//		appLog.info("Going on Contact Tab");
//		TabName tabName = TabName.Object2Tab;
//		String navatarCTCon1= Smoke_MTContact5FName+" "+Smoke_MTContact5LName;
//		if (bp.clickOnTab(projectName, tabName)) {
//			if (cp.clickOnAlreadyCreatedItem(projectName, tabName, navatarCTCon1, 20)) {
//				log(LogStatus.INFO, "Click on Created Contact : " + navatarCTCon1, YesNo.No);
//				ThreadSleep(2000);
//				if (cp.clickOnShowMoreActionDownArrow(projectName, PageName.Object2Page, ShowMoreActionDropDownList.Contact_Transfer, 10)) {
//					log(LogStatus.INFO, "Clicked on Contact Transfer", YesNo.No);	
//					
//					
//					
//					if (cp.enteringValueforLegalNameOnContactTransferPage(projectName, Smoke_MTINS7Name, 10)) {
//						log(LogStatus.PASS, "Able to Transfer Contact", YesNo.No);
//						ThreadSleep(2000);
//						refresh(driver);
//						
//						if (cp.fieldValueVerification(projectName, PageName.Object2Page, PageLabel.Account_Name, Smoke_MTINS7Name, 5)) {
//							log(LogStatus.PASS, "Label Verified after contact Transfer", YesNo.Yes);	
//						} else {
//							sa.assertTrue(false, "Label Not Verified after contact Transfer");
//							log(LogStatus.FAIL, "Label Not Verified after contact Transfer", YesNo.Yes);
//						}
//					} else {
//						sa.assertTrue(false, "Not Able to Transfer Contact");
//						log(LogStatus.FAIL, "Not Able to Transfer Contact", YesNo.Yes);
//					}
//					
//					
//
//
//				} else {
//					sa.assertTrue(false, "Not Able to Click on Contact Transfer");
//					log(LogStatus.SKIP, "Not Able to Click on Contact Transfer", YesNo.Yes);
//				}
//				
//			} else {
//				sa.assertTrue(false, "Not Able to Click on Created Contact : " + navatarCTCon1);
//				log(LogStatus.SKIP, "Not Able to Click on Created Contact : " + navatarCTCon1,YesNo.Yes);
//
//			}
//		} else {
//			sa.assertTrue(false, "Not Able to Click on Contact Tab");
//			log(LogStatus.SKIP, "Not Able to Click on Contact Tab", YesNo.Yes);
//		}
//	
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//		appLog.info("Pass");
//	}
//		
//	@Parameters({"projectName"})
//	@Test
//	public void AASmokeTc083_2_TransferContactFromCTAccount1ToCTAccount2_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		WebElement ele ;
//
//		String meetingSubject="";
//
//
//		TabName tabName =TabName.Object1Tab;
//		String ctAccount1 = Smoke_MTINS6Name;
//		RelatedTab[] relatedTabs = {RelatedTab.Activities,RelatedTab.Activities,RelatedTab.Meetings};
//		int i=0;
//		if (cp.clickOnTab(projectName, tabName)) {
//			log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+ctAccount1,YesNo.No);
//			ThreadSleep(1000);
//			if (cp.clickOnAlreadyCreatedItem(projectName, tabName, ctAccount1, 20)) {
//				log(LogStatus.INFO,"Clicked on  : "+ctAccount1+" For : "+tabName,YesNo.No);
//				ThreadSleep(1000);
//				for (RelatedTab relatedTab : relatedTabs) {
//					if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//						log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab+" For : "+ctAccount1,YesNo.No);
//						ThreadSleep(2000);
//						switchToDefaultContent(driver);
//						switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//						if (i==0) {
//							meetingSubject=Smoke_S1TestSubject;	
//						}else if(i==1){
//							meetingSubject=Smoke_S2TestSubject;		
//						}else {
//							meetingSubject=Smoke_S3TestSubject;		
//						}
//
//
//						ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, relatedTab, meetingSubject, action.BOOLEAN, 3);
//
//						if (ele!=null) {
//							log(LogStatus.INFO,meetingSubject+" link present on Sub Tab : "+relatedTab+" For : "+ctAccount1,YesNo.No);	
//						} else {
//							sa.assertTrue(false,meetingSubject+" link Should be present on Sub Tab : "+relatedTab+" For : "+ctAccount1);
//							log(LogStatus.SKIP,meetingSubject+" link Should be present on Sub Tab : "+relatedTab+" For : "+ctAccount1,YesNo.Yes);
//						}
//
//
//					} else {
//						sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+ctAccount1);
//						log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+ctAccount1,YesNo.Yes);
//					}
//					i++;
//					switchToDefaultContent(driver);
//				}
//			} else {
//				sa.assertTrue(false,"Item Not Found : "+ctAccount1+" For : "+tabName);
//				log(LogStatus.SKIP,"Item Not Found : "+ctAccount1+" For : "+tabName,YesNo.Yes);
//			}
//
//		} else {
//			sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+ctAccount1);
//			log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+ctAccount1,YesNo.Yes);
//		}
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc084_ChangeTheContactTransferSettingsToOldandNewInstitutionAndContactOnly(String projectName) {
//		BasePageBusinessLayer bp = new BasePageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		NavatarSetupPageBusinessLayer ctt = new NavatarSetupPageBusinessLayer(driver);
//		String environment="";
//		String mode="";
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		appLog.info("Login with User");
//		if (bp.clickOnTab(projectName, TabName.NavatarSetup)) {
//			appLog.info("Clicked on Navatar Set Up Tab");
//
//			if (ctt.clickOnNavatarSetupSideMenusTab(projectName, NavatarSetupSideMenuTab.ContactTransfer)) {
//				appLog.error("Clicked on Contact Transfer Tab");
//				if (click(driver, ctt.getEditButtonforNavatarSetUpSideMenuTab(projectName,NavatarSetupSideMenuTab.ContactTransfer, 10), "Edit Button", action.BOOLEAN)) {
//					log(LogStatus.INFO, "Clicked on Edit Button", YesNo.No);
//					ThreadSleep(2000);
//					//	String keepActivitiesDefaultValue = "Old and New Accounts";
//					String keepActivitiesDefaultValue = ctt.keepActivitiesValue(projectName, KeepActivityEnum.OldAndNewInstitutionBoth);
//				//	String selectIncludeActivitiesValue="Contact Only";
//					String selectIncludeActivitiesValue = ctt.includeActivitiesValue(projectName, InculdeActivityEnum.ContactOnly);
//					if (selectVisibleTextFromDropDown(driver,ctt.getKeepActivitiesAtSelectList(projectName, EditViewMode.Edit, 10),keepActivitiesDefaultValue, keepActivitiesDefaultValue)) {
//						log(LogStatus.INFO, "Selected Keep Activities related to : " + keepActivitiesDefaultValue,YesNo.No);
//						ThreadSleep(1000);
//						if (click(driver, ctt.getSaveButtonforNavatarSetUpSideMenuTab(projectName, NavatarSetupSideMenuTab.ContactTransfer, 10, TopOrBottom.TOP), "Save Button", action.BOOLEAN)) {
//							ThreadSleep(5000);
//							log(LogStatus.INFO, "Clicked on Save Button", YesNo.No);
//							ThreadSleep(10000);
//								SoftAssert tsa = ctt.verifyingContactTransferTab(projectName, EditViewMode.View,CheckBox.Checked, keepActivitiesDefaultValue, selectIncludeActivitiesValue);
//								sa.combineAssertions(tsa);
//							
//						} else {
//							sa.assertTrue(false, "Not Able to Click on Save Button");
//							log(LogStatus.SKIP, "Not Able to Click on Save Button", YesNo.Yes);
//						}
//						
//					} else {
//						sa.assertTrue(false,
//								"Not Able to Select Keep Activities related to : " + keepActivitiesDefaultValue);
//						log(LogStatus.SKIP,
//								"Not Able to Select Keep Activities related to : " + keepActivitiesDefaultValue,
//								YesNo.Yes);
//
//					}
//					
//
//				} else {
//					appLog.error("Not Able to Click on Edit Button");
//					sa.assertTrue(false, "Not Able to Click on Edit Button");
//					log(LogStatus.SKIP, "Not Able to Click on Edit Button", YesNo.Yes);
//				}
//			} else {
//				appLog.error("Not Able to Click on Contact Transfer Tab");
//				sa.assertTrue(false, "Not Able to Click on Contact Transfer Tab");
//				log(LogStatus.SKIP, "Not Able to Click on Contact Transfer Tab", YesNo.Yes);
//			}
//
//		} else {
//			appLog.error("Not Able to Click on Navatar Set Up Tab");
//			sa.assertTrue(false, "Not Able to Click on Navatar Set Up Tab");
//			log(LogStatus.SKIP, "Not Able to Click on Navatar Set Up Tab", YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		
//		sa.assertAll();
//		appLog.info("Pass");
//	}
//	
//	@Parameters({"projectName"})
//	@Test
//	public void AASmokeTc085_1_TransferContactFromCTAccount2ToCTAccount3_Action(String projectName) {
//		BasePageBusinessLayer bp = new BasePageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		appLog.info("Login with User");
//		appLog.info("Going on Contact Tab");
//		TabName tabName = TabName.Object2Tab;
//		String navatarCTCon1= Smoke_MTContact5FName+" "+Smoke_MTContact5LName;
//		if (bp.clickOnTab(projectName, tabName)) {
//			if (cp.clickOnAlreadyCreatedItem(projectName, tabName, navatarCTCon1, 20)) {
//				log(LogStatus.INFO, "Click on Created Contact : " + navatarCTCon1, YesNo.No);
//				ThreadSleep(2000);
//				if (cp.clickOnShowMoreActionDownArrow(projectName, PageName.Object2Page, ShowMoreActionDropDownList.Contact_Transfer, 10)) {
//					log(LogStatus.INFO, "Clicked on Contact Transfer", YesNo.No);	
//					ThreadSleep(1000);
//					
//					
//					if (cp.enteringValueforLegalNameOnContactTransferPage(projectName, Smoke_MTINS8Name, 10)) {
//						log(LogStatus.PASS, "Able to Transfer Contact", YesNo.No);
//						ThreadSleep(2000);
//						refresh(driver);
//						
//						if (cp.fieldValueVerification(projectName, PageName.Object2Page, PageLabel.Account_Name, Smoke_MTINS8Name, 5)) {
//							log(LogStatus.PASS, "Label Verified after contact Transfer", YesNo.Yes);	
//						} else {
//							sa.assertTrue(false, "Label Not Verified after contact Transfer");
//							log(LogStatus.FAIL, "Label Not Verified after contact Transfer", YesNo.Yes);
//						}
//					} else {
//						sa.assertTrue(false, "Not Able to Transfer Contact");
//						log(LogStatus.FAIL, "Not Able to Transfer Contact", YesNo.Yes);
//					}
//					
//					
//
//
//				} else {
//					sa.assertTrue(false, "Not Able to Click on Contact Transfer");
//					log(LogStatus.SKIP, "Not Able to Click on Contact Transfer", YesNo.Yes);
//				}
//				
//			} else {
//				sa.assertTrue(false, "Not Able to Click on Created Contact : " + navatarCTCon1);
//				log(LogStatus.SKIP, "Not Able to Click on Created Contact : " + navatarCTCon1,YesNo.Yes);
//
//			}
//		} else {
//			sa.assertTrue(false, "Not Able to Click on Contact Tab");
//			log(LogStatus.SKIP, "Not Able to Click on Contact Tab", YesNo.Yes);
//		}
//	
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//		appLog.info("Pass");
//	}
//		
//	@Parameters({"projectName"})
//	@Test
//	public void AASmokeTc085_2_TransferContactFromCTAccount2ToCTAccount3_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		WebElement ele ;
//
//		String meetingSubject="";
//
//
//		TabName tabName =TabName.Object1Tab;
//		String ctAccount2 = Smoke_MTINS7Name;
//		String ctAccount3 = Smoke_MTINS8Name;
//		String[] accounts = {ctAccount2,ctAccount3};
//		RelatedTab[] relatedTabs = {RelatedTab.Activities,RelatedTab.Activities,RelatedTab.Meetings};
//		int j=0;
//		int i=0;
//		for (String account : accounts) {
//			
//			if (cp.clickOnTab(projectName, tabName)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+account,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tabName, account, 20)) {
//					log(LogStatus.INFO,"Clicked on  : "+account+" For : "+tabName,YesNo.No);
//					ThreadSleep(1000);
//					for (RelatedTab relatedTab : relatedTabs) {
//						if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab+" For : "+account,YesNo.No);
//							ThreadSleep(2000);
//							switchToDefaultContent(driver);
//							switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//							if (i==0) {
//								meetingSubject=Smoke_S1TestSubject;	
//							}else if(i==1){
//								meetingSubject=Smoke_S2TestSubject;		
//							}else {
//								meetingSubject=Smoke_S3TestSubject;		
//							}
//
//
//							ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, relatedTab, meetingSubject, action.BOOLEAN, 3);
//
//							if (j==0) {
//								
//								if (ele==null) {
//									log(LogStatus.INFO,meetingSubject+" link is not present on Sub Tab : "+relatedTab+" For : "+account,YesNo.No);	
//								} else {
//									sa.assertTrue(false,meetingSubject+" link Should not present on Sub Tab : "+relatedTab+" For : "+account);
//									log(LogStatus.SKIP,meetingSubject+" link Should not present on Sub Tab : "+relatedTab+" For : "+account,YesNo.Yes);
//								}
//								
//							} else {
//
//								if (ele!=null) {
//									log(LogStatus.INFO,meetingSubject+" link present on Sub Tab : "+relatedTab+" For : "+account,YesNo.No);	
//								} else {
//									sa.assertTrue(false,meetingSubject+" link Should be present on Sub Tab : "+relatedTab+" For : "+account);
//									log(LogStatus.SKIP,meetingSubject+" link Should be present on Sub Tab : "+relatedTab+" For : "+account,YesNo.Yes);
//								}
//								
//							}
//							
//
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+account);
//							log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+account,YesNo.Yes);
//						}
//						i++;
//						switchToDefaultContent(driver);
//					}
//				} else {
//					sa.assertTrue(false,"Item Not Found : "+account+" For : "+tabName);
//					log(LogStatus.SKIP,"Item Not Found : "+account+" For : "+tabName,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+account);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+account,YesNo.Yes);
//			}
//			switchToDefaultContent(driver);
//			j++;
//			i=0;
//		}
//		
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//
//	@Parameters({ "projectName"})
//	@Test
//	public void AASmokeTc086_ChangeTheContactTransferSettingsToOldInstitutionOnlyAndContactandInstitutionOnly(String projectName) {
//		BasePageBusinessLayer bp = new BasePageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		NavatarSetupPageBusinessLayer ctt = new NavatarSetupPageBusinessLayer(driver);
//		String environment="";
//		String mode="";
//		lp.CRMLogin(superAdminUserName, adminPassword, appName);
//		appLog.info("Login with User");
//		if (bp.clickOnTab(projectName, TabName.NavatarSetup)) {
//			appLog.info("Clicked on Navatar Set Up Tab");
//
//			if (ctt.clickOnNavatarSetupSideMenusTab(projectName, NavatarSetupSideMenuTab.ContactTransfer)) {
//				appLog.error("Clicked on Contact Transfer Tab");
//				if (click(driver, ctt.getEditButtonforNavatarSetUpSideMenuTab(projectName,NavatarSetupSideMenuTab.ContactTransfer, 10), "Edit Button", action.BOOLEAN)) {
//					log(LogStatus.INFO, "Clicked on Edit Button", YesNo.No);
//					ThreadSleep(2000);
//				
//				//	String keepActivitiesDefaultValue = "Old Account Only";
//				//	String selectIncludeActivitiesValue="Contact and Account";
//					String keepActivitiesDefaultValue = ctt.keepActivitiesValue(projectName, KeepActivityEnum.OldInstitutionOnly);
//					String selectIncludeActivitiesValue = ctt.includeActivitiesValue(projectName, InculdeActivityEnum.ContactAndInstitution);
//					if (selectVisibleTextFromDropDown(driver,ctt.getKeepActivitiesAtSelectList(projectName, EditViewMode.Edit, 10),keepActivitiesDefaultValue, keepActivitiesDefaultValue)) {
//						log(LogStatus.INFO, "Selected Keep Activities related to : " + keepActivitiesDefaultValue,YesNo.No);
//						ThreadSleep(1000);
//						
//						if (selectVisibleTextFromDropDown(driver,ctt.getIncludeActivitiesSelectList(projectName, EditViewMode.Edit, 10),selectIncludeActivitiesValue, selectIncludeActivitiesValue)) {
//							log(LogStatus.INFO, "Selected Include Activities related to : " + keepActivitiesDefaultValue,YesNo.No);
//							ThreadSleep(1000);
//							
//							if (click(driver, ctt.getSaveButtonforNavatarSetUpSideMenuTab(projectName, NavatarSetupSideMenuTab.ContactTransfer, 10, TopOrBottom.TOP), "Save Button", action.BOOLEAN)) {
//								ThreadSleep(5000);
//								log(LogStatus.INFO, "Clicked on Save Button", YesNo.No);
//								ThreadSleep(10000);
//									SoftAssert tsa = ctt.verifyingContactTransferTab(projectName, EditViewMode.View,CheckBox.Checked, keepActivitiesDefaultValue, selectIncludeActivitiesValue);
//									sa.combineAssertions(tsa);
//								
//							} else {
//								sa.assertTrue(false, "Not Able to Click on Save Button");
//								log(LogStatus.SKIP, "Not Able to Click on Save Button", YesNo.Yes);
//							}
//							
//							
//						} else {
//							sa.assertTrue(false,"Not Able to Select Include Activities related to : " + selectIncludeActivitiesValue);
//							log(LogStatus.SKIP,"Not Able to Select Include Activities related to : " + selectIncludeActivitiesValue,YesNo.Yes);
//
//						}
//							
//						
//						
//					} else {
//						sa.assertTrue(false,"Not Able to Select Keep Activities related to : " + keepActivitiesDefaultValue);
//						log(LogStatus.SKIP,"Not Able to Select Keep Activities related to : " + keepActivitiesDefaultValue,YesNo.Yes);
//
//					}
//					
//
//				} else {
//					appLog.error("Not Able to Click on Edit Button");
//					sa.assertTrue(false, "Not Able to Click on Edit Button");
//					log(LogStatus.SKIP, "Not Able to Click on Edit Button", YesNo.Yes);
//				}
//			} else {
//				appLog.error("Not Able to Click on Contact Transfer Tab");
//				sa.assertTrue(false, "Not Able to Click on Contact Transfer Tab");
//				log(LogStatus.SKIP, "Not Able to Click on Contact Transfer Tab", YesNo.Yes);
//			}
//
//		} else {
//			appLog.error("Not Able to Click on Navatar Set Up Tab");
//			sa.assertTrue(false, "Not Able to Click on Navatar Set Up Tab");
//			log(LogStatus.SKIP, "Not Able to Click on Navatar Set Up Tab", YesNo.Yes);
//		}
//
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		ThreadSleep(3000);
//		sa.assertAll();
//		appLog.info("Pass");
//	}
//	
//	@Parameters({"projectName"})
//	@Test
//	public void AASmokeTc087_1_TransferContactFromCTAccount3ToCTAccount4_Action(String projectName) {
//		BasePageBusinessLayer bp = new BasePageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		appLog.info("Login with User");
//		appLog.info("Going on Contact Tab");
//		TabName tabName = TabName.Object2Tab;
//		String navatarCTCon1= Smoke_MTContact5FName+" "+Smoke_MTContact5LName;
//		if (bp.clickOnTab(projectName, tabName)) {
//			if (cp.clickOnAlreadyCreatedItem(projectName, tabName, navatarCTCon1, 20)) {
//				log(LogStatus.INFO, "Click on Created Contact : " + navatarCTCon1, YesNo.No);
//				ThreadSleep(2000);
//				if (cp.clickOnShowMoreActionDownArrow(projectName, PageName.Object2Page, ShowMoreActionDropDownList.Contact_Transfer, 10)) {
//					log(LogStatus.INFO, "Clicked on Contact Transfer", YesNo.No);	
//					ThreadSleep(1000);
//					
//					
//					if (cp.enteringValueforLegalNameOnContactTransferPage(projectName, Smoke_MTINS9Name, 10)) {
//						log(LogStatus.PASS, "Able to Transfer Contact", YesNo.No);
//						ThreadSleep(2000);
//						refresh(driver);
//						
//						if (cp.fieldValueVerification(projectName, PageName.Object2Page, PageLabel.Account_Name, Smoke_MTINS9Name, 5)) {
//							log(LogStatus.PASS, "Label Verified after contact Transfer", YesNo.Yes);	
//						} else {
//							sa.assertTrue(false, "Label Not Verified after contact Transfer");
//							log(LogStatus.FAIL, "Label Not Verified after contact Transfer", YesNo.Yes);
//						}
//					} else {
//						sa.assertTrue(false, "Not Able to Transfer Contact");
//						log(LogStatus.FAIL, "Not Able to Transfer Contact", YesNo.Yes);
//					}
//					
//					
//
//
//				} else {
//					sa.assertTrue(false, "Not Able to Click on Contact Transfer");
//					log(LogStatus.SKIP, "Not Able to Click on Contact Transfer", YesNo.Yes);
//				}
//				
//			} else {
//				sa.assertTrue(false, "Not Able to Click on Created Contact : " + navatarCTCon1);
//				log(LogStatus.SKIP, "Not Able to Click on Created Contact : " + navatarCTCon1,YesNo.Yes);
//
//			}
//		} else {
//			sa.assertTrue(false, "Not Able to Click on Contact Tab");
//			log(LogStatus.SKIP, "Not Able to Click on Contact Tab", YesNo.Yes);
//		}
//	
//		switchToDefaultContent(driver);
//		lp.CRMlogout();
//		sa.assertAll();
//		appLog.info("Pass");
//	}
//		
//	@Parameters({"projectName"})
//	@Test
//	public void AASmokeTc087_2_TransferContactFromCTAccount3ToCTAccount4_Impact(String projectName) {
//		SetupPageBusinessLayer setup = new SetupPageBusinessLayer(driver);
//		LoginPageBusinessLayer lp = new LoginPageBusinessLayer(driver);
//		CustomObjPageBusinessLayer cop= new CustomObjPageBusinessLayer(driver);
//		HomePageBusineesLayer home = new HomePageBusineesLayer(driver);
//		InstitutionsPageBusinessLayer ip = new InstitutionsPageBusinessLayer(driver);
//		ContactsPageBusinessLayer cp = new ContactsPageBusinessLayer(driver);
//		TaskPageBusinessLayer tp = new TaskPageBusinessLayer(driver);
//		FundsPageBusinessLayer fp = new FundsPageBusinessLayer(driver);
//		lp.CRMLogin(crmUser1EmailID, adminPassword, appName);
//		WebElement ele ;
//
//		String meetingSubject="";
//
//
//		TabName tabName =TabName.Object1Tab;
//		String ctAccount3 = Smoke_MTINS8Name;
//		String ctAccount4 = Smoke_MTINS9Name;
//		String[] accounts = {ctAccount3,ctAccount4};
//		RelatedTab[] relatedTabs = {RelatedTab.Activities,RelatedTab.Activities,RelatedTab.Meetings};
//		int i=0;
//		
//		for (String account : accounts) {
//			
//			if (cp.clickOnTab(projectName, tabName)) {
//				log(LogStatus.INFO,"Clicked on Tab : "+tabName+" For : "+account,YesNo.No);
//				ThreadSleep(1000);
//				if (cp.clickOnAlreadyCreatedItem(projectName, tabName, account, 20)) {
//					log(LogStatus.INFO,"Clicked on  : "+account+" For : "+tabName,YesNo.No);
//					ThreadSleep(1000);
//					for (RelatedTab relatedTab : relatedTabs) {
//						if (click(driver, cp.getRelatedTab(projectName, PageName.Object1Page, relatedTab, 20), relatedTab.toString(), action.BOOLEAN)) {
//							log(LogStatus.INFO,"Clicked on Sub Tab : "+relatedTab+" For : "+account,YesNo.No);
//							ThreadSleep(2000);
//							switchToDefaultContent(driver);
//							switchToFrame(driver, 30, cp.getMeetingFrameOnContactPage(projectName,30));
//							if (i==0) {
//								meetingSubject=Smoke_S1TestSubject;	
//							}else if(i==1){
//								meetingSubject=Smoke_S2TestSubject;		
//							}else {
//								meetingSubject=Smoke_S3TestSubject;		
//							}
//
//
//							ele = cp.getAllLinksOnSubTab(projectName, PageName.Object1Page, relatedTab, meetingSubject, action.BOOLEAN, 3);
//
//							if (Smoke_MTINS8Name.equals(account)) {
//								
//								if (ele==null) {
//									log(LogStatus.INFO,meetingSubject+" link is not present on Sub Tab : "+relatedTab+" For : "+account,YesNo.No);	
//								} else {
//									sa.assertTrue(false,meetingSubject+" link Should not be present on Sub Tab : "+relatedTab+" For : "+account);
//									log(LogStatus.SKIP,meetingSubject+" link Should not be present on Sub Tab : "+relatedTab+" For : "+account,YesNo.Yes);
//								}
//								
//								
//							} else {
//
//
//								if (ele!=null) {
//									log(LogStatus.INFO,meetingSubject+" link present on Sub Tab : "+relatedTab+" For : "+account,YesNo.No);	
//								} else {
//									sa.assertTrue(false,meetingSubject+" link Should be present on Sub Tab : "+relatedTab+" For : "+account);
//									log(LogStatus.SKIP,meetingSubject+" link Should be present on Sub Tab : "+relatedTab+" For : "+account,YesNo.Yes);
//								}
//								
//							}
//							
//
//
//						} else {
//							sa.assertTrue(false,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+account);
//							log(LogStatus.SKIP,"Not Able to Click on Sub Tab : "+relatedTab+" For : "+account,YesNo.Yes);
//						}
//						i++;
//						switchToDefaultContent(driver);
//					}
//				} else {
//					sa.assertTrue(false,"Item Not Found : "+account+" For : "+tabName);
//					log(LogStatus.SKIP,"Item Not Found : "+account+" For : "+tabName,YesNo.Yes);
//				}
//
//			} else {
//				sa.assertTrue(false,"Not Able to Click on Tab : "+tabName+" For : "+account);
//				log(LogStatus.SKIP,"Not Able to Click on Tab : "+tabName+" For : "+account,YesNo.Yes);
//			}
//			switchToDefaultContent(driver);
//			i=0;
//		}
//		
//		lp.CRMlogout();
//		sa.assertAll();
//	}
//
//	
//	
//	
//	}
